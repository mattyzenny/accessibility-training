{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/constants-a06dfd18.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-sub-navigation.entry.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-icon-constants-33baae7b.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/utils-194224bf.js"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,iEAAa;AACjC;AACA,kBAAkB,iEAAa;AAC/B;AACA;AACA,kBAAkB,iEAAa;AAC/B;AACA;AACA;AACA;AACA,YAAY,4DAAC,SAAS,mCAAmC,UAAU,GAAG,qCAAqC,GAAG,EAAE,4DAAC,wBAAwB,sJAAsJ,oBAAoB,EAAE,SAAS,sDAAsD,iEAAa,uBAAuB,iEAAY,oGAAoG;AACxgB;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,GAAG,8BAA8B,EAAE,4DAAC,SAAS,oCAAoC,uRAAuR,4DAAC,SAAS,0BAA0B,4CAA4C,2CAA2C,EAAE,4DAAC,QAAQ,kKAAkK;AAClqB;AACA,cAAc,4DAAC,QAAQ,sCAAsC,gBAAgB,QAAQ,EAAE,4DAAC,YAAY;AACpG;AACA,oWAAoW,qCAAqC,4DAAC,iBAAiB,+IAA+I;AAC1iB,KAAK;AACL;AACA,YAAY,QAAQ,4DAAU,OAAO;AACrC;AACA;;AAEkD;;;;;;;;;;;;;AC1PlD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEgD;;;;;;;;;;;;;AC7CzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkL;;AAElL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,yEAAyE;AACzE,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAQ;AACjB;AACA;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAW;AACpB;AACA;AACA;AACA;AACA,SAAS,wDAAK;AACd,SAAS,wDAAQ;AACjB,SAAS,wDAAa;AACtB;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiQ","file":"17.js","sourcesContent":["const ENTER = 'Enter';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_LEFT = 'ArrowLeft';\nconst SPACEBAR = 'Spacebar';\nconst SPACEBAR_CHAR = ' ';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_UP = 'ArrowUp';\nconst TAB = 'Tab';\nconst ESCAPE = 'Escape';\nconst KEYCODE = {\n  BOLD: 66,\n  ITALIC: 73,\n  UNDERLINE: 85,\n  UNDO: 89,\n  REDO: 90,\n};\nconst FOCUS_TYPE_EVENT = 'focus';\nconst MOUSE_ENTER_TYPE_EVENT = 'enter';\nconst HIDE_TOOLTIP_TYPE_EVENT = 'hide-tooltip';\nconst FROM_DATE_TYPE = 'type-from-date';\nconst TO_DATE_TYPE = 'type-to-date';\nconst HEADER_CHECKBOX = 'header-checkbox';\nconst RIGHT_MODAL_BUTTON = 'right-modal-button';\nconst LEFT_MODAL_BUTTON = 'left-modal-button';\nconst CANCEL_MODAL_BUTTON = 'cancel-modal-button';\nconst ACCEPT_MODAL_BUTTON = 'accept-modal-button';\nconst LEFT_ICON_MODAL_BUTTON = 'left-icon-modal-button';\nconst OPEN_MODAL_BUTTON = 'open-modal-button';\nconst CLOSE_MODAL_ICON_BUTTON = 'close-modal-icon-button';\nconst ERROR_CLOSE_ICON_BUTTON = 'error-close-icon-button';\nconst MULTI_SELECT_APPLY_BUTTON = 'multi-select-apply-button';\nconst MULTI_SELECT_CLEAR_BUTTON = 'multi-select-clear-button';\nconst MULTI_SELECT_LEFT_BUTTON = 'multi-select-left-button';\nconst HEADER_ICON_BUTTON = 'header-icon-button';\nvar DataVisualizationColorKeys;\n(function (DataVisualizationColorKeys) {\n  DataVisualizationColorKeys[\"RED\"] = \"red\";\n  DataVisualizationColorKeys[\"YELLOW\"] = \"yellow\";\n  DataVisualizationColorKeys[\"BLUE\"] = \"blue\";\n  DataVisualizationColorKeys[\"GREEN\"] = \"green\";\n  DataVisualizationColorKeys[\"WHITE\"] = \"white\";\n  DataVisualizationColorKeys[\"CUSTOM\"] = \"custom\";\n})(DataVisualizationColorKeys || (DataVisualizationColorKeys = {}));\nvar ProgressStepStatus;\n(function (ProgressStepStatus) {\n  ProgressStepStatus[\"COMPLETE\"] = \"complete\";\n  ProgressStepStatus[\"ACTIVE\"] = \"active\";\n  ProgressStepStatus[\"INACTIVE\"] = \"inactive\";\n})(ProgressStepStatus || (ProgressStepStatus = {}));\n\nexport { ARROW_RIGHT as A, CANCEL_MODAL_BUTTON as C, DataVisualizationColorKeys as D, ESCAPE as E, FROM_DATE_TYPE as F, HEADER_CHECKBOX as H, KEYCODE as K, LEFT_MODAL_BUTTON as L, MOUSE_ENTER_TYPE_EVENT as M, OPEN_MODAL_BUTTON as O, RIGHT_MODAL_BUTTON as R, SPACEBAR_CHAR as S, TAB as T, SPACEBAR as a, ENTER as b, ARROW_LEFT as c, ARROW_UP as d, ARROW_DOWN as e, TO_DATE_TYPE as f, ERROR_CLOSE_ICON_BUTTON as g, HIDE_TOOLTIP_TYPE_EVENT as h, FOCUS_TYPE_EVENT as i, ACCEPT_MODAL_BUTTON as j, LEFT_ICON_MODAL_BUTTON as k, CLOSE_MODAL_ICON_BUTTON as l, HEADER_ICON_BUTTON as m, MULTI_SELECT_LEFT_BUTTON as n, MULTI_SELECT_CLEAR_BUTTON as o, MULTI_SELECT_APPLY_BUTTON as p };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { C as CelIconColors, a as CelIconSizes } from './cel-icon-constants-33baae7b.js';\nimport { T as TAB } from './constants-a06dfd18.js';\n\nconst celSubNavigationCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block;width:100%}.sub-navigation-container{position:relative;width:var(--cel-sub-navigation-container-width, 100%);background:var(--cel-sub-navigation-container-background, #fff);-webkit-box-shadow:var(--cel-sub-navigation-container-box-shadow, 0px 2px 8px 0px #00000014);box-shadow:var(--cel-sub-navigation-container-box-shadow, 0px 2px 8px 0px #00000014);border-bottom:var(--cel-sub-navigation-container-border-bottom, 1px solid #cdcdcd);-webkit-clip-path:var(--cel-sub-navigation-container-clip-path, inset(0 0 -15px 0));clip-path:var(--cel-sub-navigation-container-clip-path, inset(0 0 -15px 0))}.sub-navigation-container .action-button-container{position:absolute;top:0;height:var(--cel-sub-navigation-action-button-container-height, 35px);width:var(--cel-sub-navigation-action-button-container-width, 35px);background:#fff;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.sub-navigation-container .action-button-container.enabled{-webkit-box-shadow:var(--cel-sub-navigation-action-button-container-box-shadow, 0px 10px 16px -2px #00000073);box-shadow:var(--cel-sub-navigation-action-button-container-box-shadow, 0px 10px 16px -2px #00000073)}.sub-navigation-container .action-button-container.enabled.next{-webkit-clip-path:inset(0 0 0 -15px);clip-path:inset(0 0 0 -15px)}.sub-navigation-container .action-button-container.enabled.previous{-webkit-clip-path:inset(0 -15px 0 0);clip-path:inset(0 -15px 0 0)}.sub-navigation-container .action-button-container.next{right:0}.sub-navigation-container .action-button-container.previous{left:0}.sub-navigation{height:var(--cel-sub-navigation-height, 35px)}.sub-navigation.padding{padding:var(--cel-sub-navigation-padding, 0 36px)}.sub-navigation ul{margin:0;padding:0;display:-ms-flexbox;display:flex;height:100%;width:auto;overflow-x:auto;-ms-overflow-style:none;scrollbar-width:none;}.sub-navigation ul::-webkit-scrollbar{display:none;}.sub-navigation ul li{list-style:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.sub-navigation ul li.active-item button{border-bottom:var(--cel-sub-nav-item-btn-active-border-bottom, 3px solid #006be0);color:var(--cel-sub-nav-item-btn-active-color, #006be0)}.sub-navigation ul li.active-item button:hover{color:var(--cel-sub-nav-item-btn-active-hover-color, #2150a3);border-bottom:var(--cel-sub-nav-item-btn-active-hover-border-bottom, 3px solid #2150a3)}.sub-navigation ul .sub-nav-item-btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%;background:var(--cel-sub-nav-item-btn-background, #fff);border:none;border-bottom:var(--cel-sub-nav-item-btn-border-bottom, 3px solid #fff);padding:4px 12px 1px 12px;color:var(--cel-sub-nav-item-btn-color, #333);font-family:var(--cel-sub-nav-item-btn-font-family, \\\"Poppins-Regular\\\");font-size:var(--cel-sub-nav-item-btn-font-size, 0.875rem);cursor:pointer;white-space:nowrap}.sub-navigation ul .sub-nav-item-btn .expanded-icon{--cel-icon-width:var(--cel-sub-nav-expanded-icon-width, 16px);--cel-icon-height:var(--cel-sub-nav-expanded-icon-height, 16px)}.sub-navigation ul .sub-nav-item-btn:hover{background:var(--cel-sub-nav-item-btn-hover-background, #e5f0f9);color:var(--cel-sub-nav-item-btn-hover-color, #2150a3);border-bottom:var(--cel-sub-nav-item-btn-hover-border-bottom, 3px solid #e5f0f9)}.sub-navigation ul .sub-nav-item-btn:focus,.sub-navigation ul .sub-nav-item-btn:active{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:-2px;background:var(--cel-sub-nav-item-btn-active-focus-background, #fff)}\";\n\nconst CelSubNavigation = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.itemClickedEvent = createEvent(this, \"celSubNavigationItemClickedEvent\", 7);\n    this.isLoadingFirstTime = true;\n    this.showNavigationButtons = false;\n    this.disablePreviousButton = false;\n    this.disableNextButton = false;\n    this.hoveredItem = null;\n    this.touchEventState = -1;\n    this.activeId = null;\n    this.itemList = [];\n    this.horizontalScrollValue = 40;\n    this.celIconBaseUrl = undefined;\n    this.previousButtonTooltip = 'Scroll Left';\n    this.nextButtonTooltip = 'Scroll Right';\n    this.previousButtonDisabledTooltip = 'Scroll Left';\n    this.nextButtonDisabledTooltip = 'Scroll Right';\n    this.navigationAriaLabel = 'navigation items';\n  }\n  connectedCallback() {\n    this.cel_icon = transformTagName('cel-icon', 'cel-sub-navigation', this.el);\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-sub-navigation', this.el);\n  }\n  onItemClick(item, event) {\n    this.activeId = item.identifier;\n    this.itemClickedEvent.emit(item);\n    const parentElement = (event.target.parentNode);\n    if (parentElement) {\n      this.onScrollIntoView(parentElement);\n    }\n  }\n  componentDidLoad() {\n    this.getULListElement();\n    this.putActiveItemInView();\n    this.isLoadingFirstTime = false;\n    this.calculateNavButtonWidth();\n  }\n  componentDidUpdate() {\n    this.getULListElement();\n    this.calculateNavButtonWidth();\n  }\n  calculateNavButtonWidth() {\n    var _a;\n    let buttonElementsNodelist;\n    let buttonElementArray;\n    //query dom for all buttons and convert to array format to get computed styles\n    buttonElementsNodelist = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelectorAll('.sub-nav-item-btn');\n    buttonElementArray = Array.from(buttonElementsNodelist);\n    // map through array to create a new array of widths of each button, and reduce the array to the sum of the widths\n    this.sumOfNavButtonWidths = buttonElementArray.map(btn => {\n      var _a;\n      return +((_a = (getComputedStyle(btn).width)) === null || _a === void 0 ? void 0 : _a.slice(0, -2));\n    }).reduce((acc, val) => acc + val, 0);\n    this.checkIfItemsAreHidden(this.sumOfNavButtonWidths);\n  }\n  putActiveItemInView() {\n    var _a;\n    const activeItem = (_a = this.ulListElement) === null || _a === void 0 ? void 0 : _a.querySelector('li.active-item');\n    if (activeItem) {\n      if (this.isLoadingFirstTime) {\n        setTimeout(() => {\n          this.onScrollIntoView(activeItem);\n          this.checkIfReachedEdges(activeItem);\n          this.isLoadingFirstTime = false;\n        }, 100);\n      }\n      else {\n        this.onScrollIntoView(activeItem);\n        this.checkIfReachedEdges(activeItem);\n      }\n    }\n  }\n  onScrollIntoView(item) {\n    item.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });\n  }\n  checkIfReachedEdges(item) {\n    if (this.showNavigationButtons) {\n      const activeElementLeft = item.offsetLeft;\n      const activeElementRight = item.offsetLeft + item.offsetWidth;\n      if ((activeElementRight\n        + this.horizontalScrollValue) >= this.ulListElement.scrollWidth) {\n        this.disableNextButton = true;\n      }\n      else {\n        this.enableNextButton();\n      }\n      const previousBtnContainer = this.el.shadowRoot.querySelector('.previous');\n      if (previousBtnContainer &&\n        ((activeElementLeft - previousBtnContainer.offsetWidth\n          - this.horizontalScrollValue) <= 0)) {\n        this.disablePreviousButton = true;\n      }\n      else {\n        this.enablePreviousButton();\n      }\n    }\n  }\n  onHandleScrollEvent() {\n    if (this.touchEventState) {\n      if (this.ulListElement.scrollLeft <= 0) {\n        this.disablePreviousButton = true;\n      }\n      else {\n        this.enablePreviousButton();\n      }\n      if (Math.ceil(this.ulListElement.scrollLeft\n        + this.ulListElement.offsetWidth) >= this.ulListElement.scrollWidth) {\n        this.disableNextButton = true;\n      }\n      else {\n        this.enableNextButton();\n      }\n    }\n  }\n  onHandleTouchEvent(state) {\n    this.touchEventState = state;\n    if (this.touchEventState === 0) {\n      this.touchEventState = -1;\n    }\n  }\n  handleResize() {\n    this.isLoadingFirstTime = true;\n    this.getULListElement();\n    this.checkIfItemsAreHidden(this.sumOfNavButtonWidths);\n    this.putActiveItemInView();\n  }\n  getULListElement() {\n    this.ulListElement = this.el.shadowRoot.querySelector('.sub-nav-list');\n  }\n  handleKeyDown(event) {\n    if (event.key === TAB) {\n      const activeElement = this.el.shadowRoot.activeElement;\n      let itemToView;\n      let scrolledToEnd = Math.ceil(this.ulListElement.scrollLeft\n        + this.ulListElement.offsetWidth) >= this.ulListElement.scrollWidth;\n      if (!this.ulListElement.scrollLeft) {\n        this.disablePreviousButton = true;\n      }\n      if (event.shiftKey) {\n        itemToView = activeElement.parentNode.previousSibling;\n        if (scrolledToEnd) {\n          this.disableNextButton = true;\n        }\n        else {\n          this.enableNextButton();\n        }\n      }\n      else {\n        if (activeElement) {\n          itemToView = activeElement.parentNode.nextSibling;\n        }\n        else {\n          event.preventDefault();\n          itemToView = this.ulListElement.querySelector('li');\n          const focusedItem = this.ulListElement\n            .querySelector('li > button');\n          focusedItem.focus();\n          if (scrolledToEnd) {\n            this.disableNextButton = true;\n          }\n        }\n      }\n      if (itemToView) {\n        setTimeout(() => {\n          this.onScrollIntoView(itemToView);\n        }, 0);\n      }\n    }\n  }\n  checkIfItemsAreHidden(buttonWidthSum) {\n    var _a;\n    this.showNavigationButtons = buttonWidthSum > ((_a = this.ulListElement) === null || _a === void 0 ? void 0 : _a.clientWidth);\n  }\n  onActionButtonClick(isNext, isDisabled) {\n    if (!isDisabled) {\n      let x;\n      const scrollLeftValue = this.ulListElement.scrollLeft;\n      if (isNext) {\n        x = scrollLeftValue + this.horizontalScrollValue;\n        this.performHorizontalScroll(x);\n        this.enablePreviousButton();\n        if ((scrollLeftValue + this.ulListElement.offsetWidth + this.horizontalScrollValue) >= this.ulListElement.scrollWidth) {\n          this.disableNextButton = true;\n        }\n      }\n      else {\n        x = scrollLeftValue - this.horizontalScrollValue;\n        this.performHorizontalScroll(x);\n        this.enableNextButton();\n        if (x <= 0) {\n          this.disablePreviousButton = true;\n        }\n      }\n    }\n  }\n  enablePreviousButton() {\n    if (this.disablePreviousButton) {\n      this.disablePreviousButton = false;\n    }\n  }\n  enableNextButton() {\n    if (this.disableNextButton) {\n      this.disableNextButton = false;\n    }\n  }\n  performHorizontalScroll(x) {\n    this.ulListElement.scroll({\n      left: x,\n      behavior: 'smooth'\n    });\n  }\n  onItemMouseOver(item) {\n    this.hoveredItem = item;\n  }\n  calculateIconColor(isActiveItem, item) {\n    let iconColor = CelIconColors.BLACK;\n    if (isActiveItem) {\n      iconColor = CelIconColors.PRIMARY;\n    }\n    if (item === this.hoveredItem) {\n      iconColor = CelIconColors.PRIMARY_SHADE;\n    }\n    return iconColor;\n  }\n  showActionButton(className, buttonClass, buttonTooltip, iconName, isDisabled, isNext) {\n    return (h(\"div\", { class: `action-button-container ${className} ${!isDisabled ? 'enabled' : 'disabled'}` }, h(this.cel_icon_button, { class: buttonClass, \"data-element-tab-index\": \"-1\", \"data-tooltip-label\": buttonTooltip, \"data-name\": iconName, \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}${iconName}.svg` : this.formImageSource(iconName), \"data-color\": CelIconColors.PRIMARY, \"data-size\": CelIconSizes.REGULAR, \"data-disabled\": isDisabled, onClick: () => this.onActionButtonClick(isNext, isDisabled) })));\n  }\n  formImageSource(iconName) {\n    return (`https://lst-assets.savvasrealize.com/assets/${iconName}.svg`);\n  }\n  render() {\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"div\", { class: \"sub-navigation-container\" }, this.showNavigationButtons ? (this.showActionButton('previous', 'previous-button', (this.disablePreviousButton && this.previousButtonDisabledTooltip) ? this.previousButtonDisabledTooltip : this.previousButtonTooltip, 'chevron-left', this.disablePreviousButton, false)) : null, h(\"nav\", { class: `sub-navigation ${this.showNavigationButtons ? 'padding' : ''}`, \"aria-label\": this.navigationAriaLabel }, h(\"ul\", { class: \"sub-nav-list\", onScroll: () => this.onHandleScrollEvent(), onTouchStart: () => this.onHandleTouchEvent(1), onTouchEnd: () => this.onHandleTouchEvent(0) }, this.itemList.map((item) => {\n      const isActiveItem = item.identifier === this.activeId;\n      return (h(\"li\", { class: isActiveItem ? `active-item ${item.identifier}` : '' }, h(\"button\", { class: \"sub-nav-item-btn\", id: item.identifier, \"aria-current\": !item.isExpandedMenu && isActiveItem ? 'true' : null, \"aria-expanded\": item.isExpandedMenu ?\n          (isActiveItem ? 'true' : 'false')\n          : null, \"aria-controls\": item.isExpandedMenu && item.ariaControls ? item.ariaControls : null, \"aria-haspopup\": item.ariaHaspopup ? item.ariaHaspopup : null, onClick: (ev) => this.onItemClick(item, ev), onMouseOver: () => this.onItemMouseOver(item), onMouseLeave: () => this.onItemMouseOver(null), onKeyDown: (event) => this.handleKeyDown(event) }, item.label, item.isExpandedMenu ? (h(this.cel_icon, { \"aria-hidden\": \"true\", class: \"expanded-icon\", \"data-name\": item.expandedIconName, \"data-color\": this.calculateIconColor(isActiveItem, item) })) : null)));\n    }))), this.showNavigationButtons ? (this.showActionButton('next', 'next-button', (this.disableNextButton && this.nextButtonDisabledTooltip) ? this.nextButtonDisabledTooltip : this.nextButtonTooltip, 'chevron-right', this.disableNextButton, true)) : null)));\n  }\n  get el() { return getElement(this); }\n};\nCelSubNavigation.style = celSubNavigationCss;\n\nexport { CelSubNavigation as cel_sub_navigation };\n","var CelIconColors;\n(function (CelIconColors) {\n  CelIconColors[\"PRIMARY\"] = \"primary\";\n  CelIconColors[\"PRIMARY_SHADE\"] = \"primary-shade\";\n  CelIconColors[\"BLACK\"] = \"black\";\n  CelIconColors[\"WHITE\"] = \"white\";\n  CelIconColors[\"PLUM\"] = \"plum\";\n  CelIconColors[\"ERROR\"] = \"error\";\n  CelIconColors[\"ERROR_SHADE\"] = \"error-shade\";\n  CelIconColors[\"NOTIFICATION\"] = \"notification\";\n  CelIconColors[\"CONFIRM\"] = \"confirm\";\n  CelIconColors[\"DISABLED\"] = \"disabled\";\n  CelIconColors[\"GRAYDARKER\"] = \"gray-darker\";\n  CelIconColors[\"GRAYDUSTY\"] = \"gray-dusty\";\n  CelIconColors[\"GRAYLIGHT\"] = \"gray-light\";\n  CelIconColors[\"GRAYLIGHTER\"] = \"gray-lighter\";\n  CelIconColors[\"GRAY\"] = \"gray\";\n  CelIconColors[\"FEEDBACKGREEN\"] = \"feedback-green\";\n})(CelIconColors || (CelIconColors = {}));\nvar CelIconSizes;\n(function (CelIconSizes) {\n  CelIconSizes[\"CUSTOM\"] = \"custom\";\n  CelIconSizes[\"XSMALL\"] = \"xsmall\";\n  CelIconSizes[\"XXSMALL\"] = \"xxsmall\";\n  CelIconSizes[\"SMALL\"] = \"small\";\n  CelIconSizes[\"REGULAR\"] = \"regular\";\n  CelIconSizes[\"MEDIUM\"] = \"medium\";\n  CelIconSizes[\"MLARGE\"] = \"mlarge\";\n  CelIconSizes[\"LARGE\"] = \"large\";\n  CelIconSizes[\"XLARGE\"] = \"xlarge\";\n  CelIconSizes[\"XXLARGE\"] = \"xxlarge\";\n  CelIconSizes[\"XXXLARGE\"] = \"xxlarge\";\n})(CelIconSizes || (CelIconSizes = {}));\nvar CelIconNames;\n(function (CelIconNames) {\n  CelIconNames[\"MENU\"] = \"menu\";\n  CelIconNames[\"CLOSE\"] = \"close\";\n})(CelIconNames || (CelIconNames = {}));\nvar CelButtonSizes;\n(function (CelButtonSizes) {\n  CelButtonSizes[\"SMALL\"] = \"small\";\n  CelButtonSizes[\"MEDIUM\"] = \"medium\";\n  CelButtonSizes[\"LARGE\"] = \"large\";\n})(CelButtonSizes || (CelButtonSizes = {}));\n\nexport { CelIconColors as C, CelIconSizes as a, CelButtonSizes as b, CelIconNames as c };\n","import { T as TAB, E as ESCAPE, S as SPACEBAR_CHAR, a as SPACEBAR, b as ENTER, A as ARROW_RIGHT, c as ARROW_LEFT, d as ARROW_UP, e as ARROW_DOWN } from './constants-a06dfd18.js';\n\nfunction setTitleAttributeByOverflow(elements) {\n  elements.forEach(function (element) {\n    if (element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth) {\n      element.setAttribute('title', element.textContent);\n    }\n    else {\n      element.removeAttribute('title');\n    }\n  });\n}\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c != '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst createColorClasses = (color) => {\n  return color ? {\n    'cel-color': true,\n    [`cel-color-${color}`]: true,\n  }\n    : null;\n};\nconst dragElement = (el) => {\n  let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  // otherwise, move the DIV from anywhere inside the DIV:\n  el.onmousedown = dragMouseDown;\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    el.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    el.onmousemove = elementDrag;\n  }\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    el.style.top = (el.offsetTop - pos2) + 'px';\n    el.style.left = (el.offsetLeft - pos1) + 'px';\n  }\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    el.onmouseup = null;\n    el.onmousemove = null;\n  }\n};\nconst transformTagName = (tagToBeTransformed, knownUntransformedTag, knownUntransformedTagElementReference) => {\n  const actualCurrentTag = knownUntransformedTagElementReference.tagName.toLowerCase(); // 'PREFIX-cel-navbar-SUFFIX'\n  const [prefix, suffix] = actualCurrentTag.split(knownUntransformedTag); // ['PREFIX-', '-SUFFIX']\n  return prefix + tagToBeTransformed + suffix; // 'PREFIX-cel_icon_button-SUFFIX'\n};\nconst handleKeyDownEvent = (event, keyBoardActionsObject) => {\n  switch (event.key) {\n    case ARROW_DOWN:\n    case ARROW_UP:\n      if (keyBoardActionsObject.arrowUpDown !== undefined) {\n        keyBoardActionsObject.arrowUpDown(event);\n      }\n      break;\n    case ARROW_LEFT:\n    case ARROW_RIGHT:\n      if (keyBoardActionsObject.arrowLeftRight !== undefined) {\n        keyBoardActionsObject.arrowLeftRight(event);\n      }\n      break;\n    case ENTER:\n    case SPACEBAR:\n    case SPACEBAR_CHAR:\n      if (keyBoardActionsObject.spaceEnter !== undefined) {\n        keyBoardActionsObject.spaceEnter();\n      }\n      break;\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape();\n      }\n    case TAB:\n      if (keyBoardActionsObject.tab !== undefined) {\n        keyBoardActionsObject.tab();\n      }\n      break;\n  }\n};\nconst getRGBColorFromImage = (imgEl) => {\n  const defaultRGB = { r: 255, g: 255, b: 255 }; // for non-supporting envs\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  let data;\n  let width;\n  let height;\n  let rgb = { r: 0, g: 0, b: 0 };\n  if (!context) {\n    return defaultRGB;\n  }\n  height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n  width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n  context.drawImage(imgEl, 0, 0);\n  try {\n    data = context.getImageData(0, 0, width, height);\n  }\n  catch (e) {\n    /* security error, img on diff domain */\n    return defaultRGB;\n  }\n  rgb.r = data.data[0];\n  rgb.g = data.data[1];\n  rgb.b = data.data[2];\n  return rgb;\n};\n/*\n    * Generic Focus Functionality\n*/\nfunction handleTabTrapping(event, element, focusableElementsArray, keyBoardActionsObject) {\n  var _a, _b, _c, _d;\n  switch (event.key) {\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape(event);\n      }\n      break;\n    case TAB:\n      const activeElement = ((_a = element.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) ||\n        ((_c = (_b = document.activeElement.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement.shadowRoot) === null || _c === void 0 ? void 0 : _c.activeElement) ||\n        ((_d = document.activeElement.shadowRoot) === null || _d === void 0 ? void 0 : _d.activeElement) ||\n        document.activeElement;\n      if (!event.shiftKey && activeElement === focusableElementsArray[focusableElementsArray.length - 1]) {\n        event.preventDefault();\n        focusFirstFocusable(focusableElementsArray[0]);\n        if (keyBoardActionsObject.tab !== undefined) {\n          keyBoardActionsObject.tab(event);\n        }\n      }\n      else if (event.shiftKey && activeElement === focusableElementsArray[0]) {\n        event.preventDefault();\n        focusLastFocusable(focusableElementsArray[focusableElementsArray.length - 1]);\n        if (keyBoardActionsObject.shiftTab !== undefined) {\n          keyBoardActionsObject.shiftTab(event);\n        }\n      }\n      break;\n  }\n}\nfunction focusFirstFocusable(firstFocusableElement) {\n  if (firstFocusableElement.shadowRoot) {\n    firstFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    firstFocusableElement.focus();\n  }\n}\nfunction focusLastFocusable(lastFocusableElement) {\n  if (lastFocusableElement.shadowRoot) {\n    lastFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    lastFocusableElement.focus();\n  }\n}\nfunction setFocusableElements(hostElement) {\n  let hasShadowRoot = !!hostElement.shadowRoot;\n  if (!hasShadowRoot) {\n    let focusableElementsArray = hostElement.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n  else {\n    let focusableElementsArray = hostElement.shadowRoot.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n}\n\nexport { setFocusableElements as a, handleTabTrapping as b, getClassMap as c, dragElement as d, createColorClasses as e, focusFirstFocusable as f, getRGBColorFromImage as g, handleKeyDownEvent as h, setTitleAttributeByOverflow as s, transformTagName as t };\n"],"sourceRoot":"webpack:///"}