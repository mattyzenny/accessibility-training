{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-draggable-window.entry.js"],"names":["CelDraggableWindow","hostRef","this","closeButtonPressed","escapeKeyPressed","componentLoaded","onMobileHeight","isDragging","setFocus","modalPositionStatus","isDragIconFocused","maxHeight","undefined","titleText","disableContentDrag","celIconBaseUrl","lastFocusableElement","lastFocusableElementIdentifier","draggableModalAriaLabel","stickModalToBottom","showComponentLoadInfo","dragIconAriaLabel","cel_icon_button","componentEl","document","addEventListener","handleModalMovement","bind","handleMouseUp","removeEventListener","resizeObserver","unobserve","draggerElement","setTimeout","draggableEl","offsetHeight","observeWindowWidth","emit","ev","key","rect","getBoundingClientRect","preventDefault","top","style","checkForKeypress","notifyModalMovement","bottom","containerEl","left","right","offsetWidth","eventObj","detail","id","handleFocus","buttonType","draggerIcon","shadowRoot","querySelector","focus","direction","func","clearTimeout","timeoutInterval","event","stopPropagation","type","touches","xCords","clientX","offsetLeft","yCords","clientY","offsetTop","cursor","buttons","x","y","yMax","draggerIconButton","_a","_b","_c","_d","_e","_f","_g","element","slotItem","assignedElements","querySelectorAll","length","ResizeObserver","handleResize","observe","parentContainerWidth","parentContainerHeight","availableScreenWidth","window","screen","availWidth","currentScreenWidth","innerWidth","class","ref","el","tabindex","onFocus","focusLastActiveElement","role","onMouseDown","setModalPosition","onTouchStart","BLACK","focusDraggerIcon"],"mappings":"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","file":"18.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { E as ESCAPE, d as ARROW_UP, e as ARROW_DOWN, c as ARROW_LEFT, A as ARROW_RIGHT } from './constants-a06dfd18.js';\nimport { C as CelIconColors } from './cel-icon-constants-33baae7b.js';\n\nconst celDraggableWindowCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}.draggable-window-holder{overflow-x:var(--dragger-overlay-overflow-x, hidden);overflow-y:var(--dragger-overlay-overflow-y, hidden);position:fixed;width:100%;height:var(--dragger-overlay-height, 100%);top:0px;left:var(--dragger-overlay-left, 0);right:var(--dragger-overlay-right, 0);background-color:var(--dragger-background-color, transparent);z-index:var(--dragger-overlay-z-index, 100);display:var(--dragger-window-overlay-display, flex);-ms-flex-align:var(--dragger-window-overlay-align-items, center);align-items:var(--dragger-window-overlay-align-items, center);-ms-flex-pack:var(--dragger-window-overlay-justify-content, center);justify-content:var(--dragger-window-overlay-justify-content, center)}.draggable-slot-container{-webkit-user-select:var(--draggable-slot-user-select, none);-moz-user-select:var(--draggable-slot-user-select, none);-ms-user-select:var(--draggable-slot-user-select, none);user-select:var(--draggable-slot-user-select, none);position:absolute;border-radius:8px;z-index:var(--draggable-slot-z-index, 101);max-width:var(--draggable-slot-max-width, 320px);width:var(--draggable-slot-width, 100%);height:var(--draggable-slot-height, -webkit-fit-content);height:var(--draggable-slot-height, -moz-fit-content);height:var(--draggable-slot-height, fit-content);-webkit-box-shadow:0px 16px 42px 6px rgba(0, 0, 0, 0.25);box-shadow:0px 16px 42px 6px rgba(0, 0, 0, 0.25);background-color:var(--draggable-slot-background-color, #f3f3f3)}.draggable-slot-container .draggable-slot-header{display:-ms-flexbox;display:flex;border-radius:7px 7px 0 0;background-color:#fff;-ms-flex-align:center;align-items:center;border-bottom:1px solid #cdcdcd;width:100%;height:var(--draggable-slot-header-height, 37px);-ms-flex-pack:justify;justify-content:space-between}.draggable-slot-container .draggable-slot-header .title-container{line-height:1;display:-ms-flexbox;display:flex;text-align:center}.draggable-slot-container .draggable-slot-header .title-holder{margin:0;color:var(--draggable-window-title-color, #333);font-family:var(--draggable-window-title-font-family, Poppins-Medium);font-size:var(--draggable-window-title-font-size, 1.125rem);font-weight:var(--draggable-window-title-font-weight, 500);font-style:var(--draggable-window-title-font-style, normal)}.draggable-slot-container .draggable-slot-header .dragger-icon-container{display:-ms-flexbox;display:flex;padding:8px}.draggable-slot-container .draggable-slot-header .close-icon-container{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;border-radius:43px;padding:8px}.draggable-slot-container .draggable-slot-icon{--icon-button-border-radius:5px;--cel-icon-custom-size:9px}.trap-focus{background-color:none;height:0px;width:0px}\";\n\nconst CelDraggableWindow = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.closeButtonPressed = createEvent(this, \"celDraggableWindowCloseButtonEvent\", 7);\n    this.escapeKeyPressed = createEvent(this, \"celDraggableWindowEscapeKeyEvent\", 7);\n    this.componentLoaded = createEvent(this, \"celDraggableWindowLoaded\", 7);\n    this.onMobileHeight = createEvent(this, \"viewMobileHeight\", 7);\n    this.isDragging = false;\n    this.setFocus = false;\n    this.modalPositionStatus = '';\n    this.isDragIconFocused = false;\n    this.maxHeight = undefined;\n    this.titleText = 'Title goes here';\n    this.disableContentDrag = false;\n    this.celIconBaseUrl = undefined;\n    this.lastFocusableElement = '';\n    this.lastFocusableElementIdentifier = '';\n    this.draggableModalAriaLabel = '';\n    this.stickModalToBottom = false;\n    this.showComponentLoadInfo = false;\n    this.dragIconAriaLabel = 'Drag Icon. Use arrow keys to move the position of the modal';\n  }\n  connectedCallback() {\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-draggable-window', this.componentEl);\n    document.addEventListener('mousemove', this.handleModalMovement.bind(this));\n    document.addEventListener('touchmove', this.handleModalMovement.bind(this));\n    document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    document.addEventListener('touchend', this.handleMouseUp.bind(this));\n  }\n  disconnectedCallback() {\n    document.removeEventListener('mousemove', this.handleModalMovement.bind(this));\n    document.removeEventListener('touchmove', this.handleModalMovement.bind(this));\n    document.removeEventListener('mouseup', this.handleMouseUp.bind(this));\n    document.removeEventListener('touchend', this.handleMouseUp.bind(this));\n    this.resizeObserver.unobserve(this.draggerElement);\n  }\n  componentDidLoad() {\n    setTimeout(() => {\n      this.setFocus = true;\n      this.maxHeight = this.draggableEl.offsetHeight;\n      this.observeWindowWidth();\n    });\n    if (this.showComponentLoadInfo)\n      this.componentLoaded.emit(true);\n  }\n  handleKeyDown(ev) {\n    if (ev.key === ESCAPE) {\n      this.escapeKeyPressed.emit(ev);\n    }\n    if (this.isDragIconFocused && (ev.key === ARROW_UP || ev.key === ARROW_DOWN || ev.key === ARROW_LEFT || ev.key === ARROW_RIGHT)) {\n      const rect = this.draggableEl.getBoundingClientRect();\n      ev.preventDefault();\n      switch (ev.key) {\n        //TODO: Check the no. of pixels to be moved.\n        case ARROW_UP:\n          if (rect.top >= 0) {\n            this.draggableEl.style.top = `${rect.top - 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('up');\n            });\n          }\n          break;\n        case ARROW_DOWN:\n          if (rect.bottom <= this.containerEl.offsetHeight) {\n            this.draggableEl.style.top = `${rect.top + 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('down');\n            });\n          }\n          break;\n        case ARROW_LEFT:\n          if (rect.left >= 0) {\n            this.draggableEl.style.left = `${rect.left - 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('left');\n            });\n          }\n          break;\n        case ARROW_RIGHT:\n          if (rect.right <= this.containerEl.offsetWidth) {\n            this.draggableEl.style.left = `${rect.left + 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('right');\n            });\n          }\n          break;\n      }\n    }\n  }\n  handleFocusOnDragIcon(eventObj) {\n    if (eventObj.detail.id === 'draggable-slot-drag-icon') {\n      this.handleFocus();\n    }\n  }\n  handleBlurOnDragIcon(eventObj) {\n    if (eventObj.detail === 'draggable-slot-drag-icon') {\n      this.handleFocus();\n    }\n  }\n  handleCelButtonOnClick(eventObj) {\n    const { detail: { id: buttonType } } = eventObj;\n    if (buttonType === 'draggable-slot-close-button')\n      this.closeButtonPressed.emit(eventObj);\n  }\n  handleFocus() {\n    this.isDragIconFocused = !this.isDragIconFocused;\n  }\n  focusDraggerIcon() {\n    this.draggerIcon.shadowRoot.querySelector('button').focus();\n  }\n  notifyModalMovement(direction) {\n    this.modalPositionStatus = `${this.titleText} moved ${direction}`;\n    // Timeout here as the state variable has to be reinitialised to announce the text when it is moved multiple times in the same direction.\n    setTimeout(() => {\n      this.modalPositionStatus = '';\n    }, 100);\n  }\n  // Debounce is required to avoid multiple announcements when the arrow keys are pressed.\n  // Also ensures te movement is announced when key is pressed and hold. \n  checkForKeypress(func) {\n    clearTimeout(this.timeoutInterval);\n    this.timeoutInterval = setTimeout(func, 300);\n  }\n  setModalPosition(event) {\n    if (this.disableContentDrag)\n      return;\n    this.isDragging = true;\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.type != 'mousedown') {\n      event = event.touches[0];\n    }\n    this.xCords = event.clientX - this.draggableEl.offsetLeft;\n    this.yCords = event.clientY - this.draggableEl.offsetTop;\n    this.draggerIcon.shadowRoot.querySelector('button').style.cursor = 'move';\n  }\n  handleModalMovement(event) {\n    if (!this.isDragging)\n      return;\n    if (event.type === 'mousedown' && event.buttons != 1)\n      return;\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.type != 'mousemove') {\n      event = event.touches[0];\n    }\n    const x = event.clientX - this.xCords;\n    const y = event.clientY - this.yCords;\n    const xMax = this.containerEl.offsetWidth - this.draggableEl.offsetWidth;\n    const yMax = this.containerEl.offsetHeight - this.draggableEl.offsetHeight;\n    if (x >= 0 && x <= xMax)\n      this.draggableEl.style.left = `${x}px`;\n    if (y >= 0 && y <= yMax)\n      this.draggableEl.style.top = `${y}px`;\n  }\n  handleMouseUp() {\n    this.isDragging = false;\n    if (this.draggerIcon && this.draggerIcon.shadowRoot) {\n      const draggerIconButton = this.draggerIcon.shadowRoot.querySelector('button');\n      if (draggerIconButton && draggerIconButton.style && draggerIconButton.style.cursor) {\n        this.draggerIcon.shadowRoot.querySelector('button').style.cursor = 'default';\n      }\n    }\n  }\n  focusLastActiveElement() {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (this.lastFocusableElement) {\n      let element;\n      //Checks if slot item is within shadowroot.\n      if ((_a = this.slotItem.assignedElements()[0]) === null || _a === void 0 ? void 0 : _a.shadowRoot) {\n        element = (_b = this.slotItem.assignedElements()[0].shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelectorAll(this.lastFocusableElement);\n      }\n      else {\n        element = (_c = this.slotItem.assignedElements()[0]) === null || _c === void 0 ? void 0 : _c.querySelectorAll(this.lastFocusableElement);\n      }\n      const focusableElement = (_e = (_d = element[element.length - 1]) === null || _d === void 0 ? void 0 : _d.shadowRoot) === null || _e === void 0 ? void 0 : _e.querySelector(this.lastFocusableElementIdentifier);\n      focusableElement.focus();\n    }\n    else {\n      const element = (_g = (_f = this.slotItem.assignedElements()[0]) === null || _f === void 0 ? void 0 : _f.shadowRoot) === null || _g === void 0 ? void 0 : _g.querySelector(this.lastFocusableElementIdentifier);\n      element.focus();\n    }\n  }\n  observeWindowWidth() {\n    this.draggerElement = this.containerEl;\n    this.resizeObserver = new ResizeObserver(this.handleResize.bind(this));\n    this.resizeObserver.observe(this.draggerElement);\n  }\n  handleResize() {\n    const parentContainerWidth = this.containerEl.offsetWidth;\n    const parentContainerHeight = this.containerEl.offsetHeight;\n    const availableScreenWidth = window.screen.availWidth;\n    const currentScreenWidth = window.innerWidth;\n    const zoomedPercentage = (availableScreenWidth / currentScreenWidth) * 100;\n    // Added zoomedPercentage to show the math keypad in mobile view beyond or at 200% zoom\n    if ((parentContainerWidth > 575 && parentContainerHeight < this.maxHeight) || zoomedPercentage >= 200) {\n      this.onMobileHeight.emit(true);\n      this.draggableEl.style.bottom = this.stickModalToBottom ? '0px' : '';\n    }\n    else if (parentContainerWidth > 575 && parentContainerHeight > this.maxHeight) {\n      this.draggableEl.style.left = 'auto';\n      this.draggableEl.style.bottom = 'auto';\n      this.onMobileHeight.emit(false);\n    }\n    else {\n      this.onMobileHeight.emit(true);\n      this.draggableEl.style.left = 'auto';\n      this.draggableEl.style.top = 'auto';\n      this.draggableEl.style.bottom = this.stickModalToBottom ? '0px' : '';\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: 'draggable-window-holder', ref: (el) => (this.containerEl = el) }, h(\"div\", { class: 'trap-focus', tabindex: '0', onFocus: () => { this.focusLastActiveElement(); } }), h(\"div\", { class: 'draggable-slot-container', ref: (el) => (this.draggableEl = el), role: 'dialog', \"aria-label\": this.draggableModalAriaLabel ? this.draggableModalAriaLabel : this.titleText }, h(\"div\", { class: 'draggable-slot-header' }, h(\"span\", { class: 'cel-visually-hidden', role: 'alert' }, this.modalPositionStatus), h(\"div\", { class: 'dragger-icon-container' }, h(this.cel_icon_button, { ref: (el) => (this.draggerIcon = el), class: 'draggable-slot-icon flex', \"data-focus-element\": this.setFocus, onMouseDown: this.setModalPosition.bind(this), onTouchStart: this.setModalPosition.bind(this), \"data-identifier\": 'draggable-slot-drag-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}list-view.svg` : null, \"data-name\": 'list-view', \"data-icon-button-aria-label\": this.dragIconAriaLabel, \"data-size\": 'custom', \"data-padding\": '8px', \"data-color\": CelIconColors.BLACK })), h(\"div\", { class: 'title-container' }, h(\"h2\", { class: 'title-holder' }, this.titleText)), h(\"div\", { class: 'close-icon-container' }, h(this.cel_icon_button, { class: 'draggable-slot-close-button flex', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}close.svg` : null, \"data-identifier\": 'draggable-slot-close-button', \"data-name\": 'close', \"data-icon-button-aria-label\": 'Close', \"data-size\": 'medium', \"data-color\": 'black' }))), h(\"div\", { class: 'slot-container' }, h(\"slot\", { ref: (el) => (this.slotItem = el) })), h(\"footer\", { class: 'trap-focus', tabindex: 0, onFocus: () => { this.focusDraggerIcon(); } })))));\n  }\n  get componentEl() { return getElement(this); }\n};\nCelDraggableWindow.style = celDraggableWindowCss;\n\nexport { CelDraggableWindow as cel_draggable_window };\n"],"sourceRoot":"webpack:///"}