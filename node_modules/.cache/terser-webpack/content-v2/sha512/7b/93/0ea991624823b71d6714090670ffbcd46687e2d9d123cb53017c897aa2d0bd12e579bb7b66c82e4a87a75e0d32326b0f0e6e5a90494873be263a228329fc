{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{rvbt:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"cel_rich_text_math_keypad\",function(){return g});var o=a(\"RO4M\"),r=a(\"/Cwb\"),i=a(\"ldx1\"),l=a(\"+Be3\");a(\"tzaC\");const s=[{identifier:\"numbers\",label:\"Numbers\"},{identifier:\"variables\",label:\"Variables\"},{identifier:\"basics\",label:\"Basics\"},{identifier:\"functions\",label:\"Functions\"},{identifier:\"geometry\",label:\"Geometry\"},{identifier:\"trigonometry\",label:\"Trigonometry\"},{identifier:\"statistics\",label:\"Statistics\"}];var n;!function(e){e.uppercaseLabel=\"Show Uppercase Keys\",e.lowercaseLabel=\"Show Lowercase Keys\"}(n||(n={}));const c=\"cancel\",m=\"Insert\",d={\"eulers-number\":\"lowercase-e\",\"imaginary-number\":\"lowercase-i\"},p={1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",0:\"0\",comma:\",\",decimal:\".\",\"lowercase-a\":\"a\",\"lowercase-b\":\"b\",\"lowercase-c\":\"c\",\"lowercase-d\":\"d\",\"lowercase-e\":\"e\",\"lowercase-f\":\"f\",\"lowercase-g\":\"g\",\"lowercase-h\":\"h\",\"lowercase-i\":\"i\",\"lowercase-j\":\"j\",\"lowercase-k\":\"k\",\"lowercase-l\":\"l\",\"lowercase-m\":\"m\",\"lowercase-n\":\"n\",\"lowercase-o\":\"o\",\"lowercase-p\":\"p\",\"lowercase-q\":\"q\",\"lowercase-r\":\"r\",\"lowercase-s\":\"s\",\"lowercase-t\":\"t\",\"lowercase-u\":\"u\",\"lowercase-v\":\"v\",\"lowercase-w\":\"w\",\"lowercase-x\":\"x\",\"lowercase-y\":\"y\",\"lowercase-z\":\"z\",\"uppercase-a\":\"A\",\"uppercase-b\":\"B\",\"uppercase-c\":\"C\",\"uppercase-d\":\"D\",\"uppercase-e\":\"E\",\"uppercase-f\":\"F\",\"uppercase-g\":\"G\",\"uppercase-h\":\"H\",\"uppercase-i\":\"I\",\"uppercase-j\":\"J\",\"uppercase-k\":\"K\",\"uppercase-l\":\"L\",\"uppercase-m\":\"M\",\"uppercase-n\":\"N\",\"uppercase-o\":\"O\",\"uppercase-p\":\"P\",\"uppercase-q\":\"Q\",\"uppercase-r\":\"R\",\"uppercase-s\":\"S\",\"uppercase-t\":\"T\",\"uppercase-u\":\"U\",\"uppercase-v\":\"V\",\"uppercase-w\":\"W\",\"uppercase-x\":\"X\",\"uppercase-y\":\"Y\",\"uppercase-z\":\"Z\",plus:\"+\",minus:\"-\",multiply:\"\\\\times\",\"dot-multiply\":\"\\\\cdot\",divide:\"\\\\div\",\"left-parenth\":\"(\",\"right-parenth\":\")\",pi:\"\\\\pi\",equal:\"=\",\"not-equal\":\"\\\\neq\",approximately:\"\\\\approx\",\"plus-minus\":\"\\\\pm\",\"less-than\":\"<\",\"greater-than\":\">\",\"less-than-equal\":\"\\\\leq\",\"greater-than-equal\":\"\\\\geq\",\"unknown-equality\":\"\\\\unknownequality\",similar:\"\\\\sim\",\"not-similar\":\"\\\\notsimilar\",\"congruent-to\":\"\\\\cong\",\"not-congruent-to\":\"\\\\notcongruentto\",\"right-arrow\":\"\\\\rightarrow\",degree:\"\\\\degree\",square:\"^2\",superscript:\"^\",subscript:\"_{ },Left\",overline:\"\\\\overline{ },Left\",fraction:\"\\\\frac{}{},Left,Left\",\"square-root\":\"\\\\sqrt{ },Left\",\"square-root-1\":\"\\\\sqrt[]{},Left,Left\",\"cube-root\":\"\\\\sqrt[3]{},Left\",\"absolute-value\":\"|\",infinity:\"\\\\infty\",\"left-bracket\":\"[\",\"right-bracket\":\"]\",braces:\"{\",angles:\"\\\\langle{ },Left\",ceiling:\"\\\\lceil\\\\rceil,Left\",floor:\"\\\\lfloor\\\\rfloor,Left\",\"function-of-x\":\"\\\\f\\\\left(x\\\\right)\",\"inverse-function-of-x\":\"\\\\f^{-1}\\\\left(x\\\\right)\",fog:\"f\\\\cdot g\",\"e-to-the-nth\":\"e^{ },Left\",\"log-sub\":\"\\\\log_{ },Left\",log:\"\\\\log\",ln:\"\\\\ln\",sum:\"\\\\sum_{ }^{ },Left,Left\",angle:\"\\\\angle\",\"angle-measure\":\"m\\\\angle \",parallel:\"\\\\parallel\",perpendicular:\"\\\\perp\",\"overline-right-arrow\":\"\\\\overrightarrow{ },Left\",\"over-left-right-arrow\":\"\\\\overleftrightarrow{ }\",\"over-frown\":\"\\\\overfrown{ }\",\"left-right-arrow\":\"\\\\leftrightarrow\",theta:\"\\\\theta\",prime:\"'\",\"double-prime\":\"''\",\"triple-prime\":\"'''\",triangle:\"\\\\triangle\",circle:\"\\\\odot\",parallelogram:\"\\\\parallelogram\",sin:\"\\\\sin\",cos:\"\\\\cos\",tan:\"\\\\tan\",csc:\"\\\\csc\",sec:\"\\\\sec\",cot:\"\\\\cot\",\"inverse-sin\":\"\\\\sin^{-1}\",\"inverse-cos\":\"\\\\cos^{-1}\",\"inverse-tan\":\"\\\\tan^{-1}\",\"inverse-csc\":\"\\\\csc^{-1}\",\"inverse-sec\":\"\\\\sec^{-1}\",\"inverse-cot\":\"\\\\cot^{-1}\",cis:\"cis\",mu:\"\\\\mu\",sigma:\"\\\\sigma\",ncr:\" _{ }C_{ },Left,Left,Left,Left\",npr:\"_{ }P_{ },Left,Left,Left,Left\",\"conditional-probability\":\"\\\\vert\",factorial:\"!\",\"eulers-number\":\"e\",\"imaginary-number\":\"i\"},b={1:\"One\",2:\"Two\",3:\"Three\",4:\"Four\",5:\"Five\",6:\"Six\",7:\"Seven\",8:\"Eight\",9:\"Nine\",0:\"Zero\",comma:\"Comma\",decimal:\"Decimal\",\"lowercase-a\":\"Lowercase a\",\"lowercase-b\":\"Lowercase b\",\"lowercase-c\":\"Lowercase c\",\"lowercase-d\":\"Lowercase d\",\"lowercase-e\":\"Lowercase e\",\"lowercase-f\":\"Lowercase f\",\"lowercase-g\":\"Lowercase g\",\"lowercase-h\":\"Lowercase h\",\"lowercase-i\":\"Lowercase i\",\"lowercase-j\":\"Lowercase j\",\"lowercase-k\":\"Lowercase k\",\"lowercase-l\":\"Lowercase l\",\"lowercase-m\":\"Lowercase m\",\"lowercase-n\":\"Lowercase n\",\"lowercase-o\":\"Lowercase o\",\"lowercase-p\":\"Lowercase p\",\"lowercase-q\":\"Lowercase q\",\"lowercase-r\":\"Lowercase r\",\"lowercase-s\":\"Lowercase s\",\"lowercase-t\":\"Lowercase t\",\"lowercase-u\":\"Lowercase u\",\"lowercase-v\":\"Lowercase v\",\"lowercase-w\":\"Lowercase w\",\"lowercase-x\":\"Lowercase x\",\"lowercase-y\":\"Lowercase y\",\"lowercase-z\":\"Lowercase z\",\"uppercase-a\":\"Uppercase A\",\"uppercase-b\":\"Uppercase B\",\"uppercase-c\":\"Uppercase C\",\"uppercase-d\":\"Uppercase D\",\"uppercase-e\":\"Uppercase E\",\"uppercase-f\":\"Uppercase F\",\"uppercase-g\":\"Uppercase G\",\"uppercase-h\":\"Uppercase H\",\"uppercase-i\":\"Uppercase I\",\"uppercase-j\":\"Uppercase J\",\"uppercase-k\":\"Uppercase K\",\"uppercase-l\":\"Uppercase L\",\"uppercase-m\":\"Uppercase M\",\"uppercase-n\":\"Uppercase N\",\"uppercase-o\":\"Uppercase O\",\"uppercase-p\":\"Uppercase P\",\"uppercase-q\":\"Uppercase Q\",\"uppercase-r\":\"Uppercase R\",\"uppercase-s\":\"Uppercase S\",\"uppercase-t\":\"Uppercase T\",\"uppercase-u\":\"Uppercase U\",\"uppercase-v\":\"Uppercase V\",\"uppercase-w\":\"Uppercase W\",\"uppercase-x\":\"Uppercase X\",\"uppercase-y\":\"Uppercase Y\",\"uppercase-z\":\"Uppercase Z\",plus:\"Plus\",minus:\"Minus\",multiply:\"Multiply\",\"dot-multiply\":\"Dot Multiply\",divide:\"Divide\",\"left-parenth\":\"Left Parenthesis\",\"right-parenth\":\"Right Parenthesis\",pi:\"Pi\",equal:\"Equal\",\"not-equal\":\"Not Equal\",approximately:\"Approximately\",\"plus-minus\":\"Plus or Minus\",\"less-than\":\"Less Than\",\"greater-than\":\"Greater Than\",\"less-than-equal\":\"Less Than Equal\",\"greater-than-equal\":\"Greater Than Equal\",\"unknown-equality\":\"Unknown Equality\",similar:\"Similar\",\"not-similar\":\"Not Similar\",\"congruent-to\":\"Congruent To\",\"not-congruent-to\":\"Not Congruent To\",\"right-arrow\":\"Right Arrow\",degree:\"Degree\",square:\"Square\",superscript:\"Superscript\",subscript:\"Subscript\",overline:\"Overline\",fraction:\"Fraction\",\"square-root\":\"Square Root\",\"square-root-1\":\"Nth Root\",\"cube-root\":\"Cube Root\",\"absolute-value\":\"Absolute Value\",infinity:\"Infinity\",\"left-bracket\":\"Left Bracket\",\"right-bracket\":\"Right Bracket\",braces:\"Braces\",angles:\"Angles\",ceiling:\"Ceiling\",floor:\"Floor\",\"function-of-x\":\"Function Of X\",\"inverse-function-of-x\":\"Inverse Function Of X\",fog:\"Composite F of G\",\"e-to-the-nth\":\"Exponent\",\"log-sub\":\"Log Subscript\",log:\"Log\",ln:\"Natural Logarithm\",sum:\"Sum\",angle:\"Angle\",\"angle-measure\":\"Angle Measure\",parallel:\"Parallel\",perpendicular:\"Perpendicular\",\"overline-right-arrow\":\"Over Right Arrow\",\"over-left-right-arrow\":\"Over Left Right Arrow\",\"over-frown\":\"Over Frown\",\"left-right-arrow\":\"Left Right Arrow\",theta:\"Theta\",prime:\"Prime\",\"double-prime\":\"Double Prime\",\"triple-prime\":\"Triple Prime\",triangle:\"Triangle\",circle:\"Circle\",parallelogram:\"Parallelogram\",sin:\"Sine\",cos:\"Cosine\",tan:\"Tangent\",csc:\"Cosecant\",sec:\"Secant\",cot:\"Cotangent\",\"inverse-sin\":\"Inverse Sine\",\"inverse-cos\":\"Inverse Cosine\",\"inverse-tan\":\"Inverse Tangent\",\"inverse-csc\":\"Inverse Cosecant\",\"inverse-sec\":\"Inverse Secant\",\"inverse-cot\":\"Inverse Cotangent\",cis:\"Cosine i Sine\",mu:\"Mu\",sigma:\"Sigma\",ncr:\"nCr\",npr:\"nPr\",\"conditional-probability\":\"Conditional Probability\",factorial:\"Factorial\",\"eulers-number\":\"Eulers Number\",\"imaginary-number\":\"Imaginary Number\"},u={numbers:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"0\",\"comma\",\"decimal\"],variables:[{lowercase:[\"lowercase-a\",\"lowercase-b\",\"lowercase-c\",\"lowercase-d\",\"lowercase-e\",\"lowercase-f\",\"lowercase-g\",\"lowercase-h\",\"lowercase-i\",\"lowercase-j\",\"lowercase-k\",\"lowercase-l\",\"lowercase-m\",\"lowercase-n\",\"lowercase-o\",\"lowercase-p\",\"lowercase-q\",\"lowercase-r\",\"lowercase-s\",\"lowercase-t\",\"lowercase-u\",\"lowercase-v\",\"lowercase-w\",\"lowercase-x\",\"lowercase-y\",\"lowercase-z\"],uppercase:[\"uppercase-a\",\"uppercase-b\",\"uppercase-c\",\"uppercase-d\",\"uppercase-e\",\"uppercase-f\",\"uppercase-g\",\"uppercase-h\",\"uppercase-i\",\"uppercase-j\",\"uppercase-k\",\"uppercase-l\",\"uppercase-m\",\"uppercase-n\",\"uppercase-o\",\"uppercase-p\",\"uppercase-q\",\"uppercase-r\",\"uppercase-s\",\"uppercase-t\",\"uppercase-u\",\"uppercase-v\",\"uppercase-w\",\"uppercase-x\",\"uppercase-y\",\"uppercase-z\"]}],basics:[\"plus\",\"minus\",\"multiply\",\"divide\",\"pi\",\"equal\",\"not-equal\",\"approximately\",\"dot-multiply\",\"plus-minus\",\"less-than\",\"greater-than\",\"less-than-equal\",\"greater-than-equal\",\"similar\",\"congruent-to\",\"right-arrow\",\"degree\",\"square\",\"superscript\",\"subscript\",\"fraction\",\"square-root\",\"cube-root\",\"square-root-1\",\"absolute-value\",\"infinity\"],functions:[\"left-parenth\",\"right-parenth\",\"left-bracket\",\"right-bracket\",\"braces\",,\"ceiling\",\"floor\",\"comma\",\"function-of-x\",\"inverse-function-of-x\",\"fog\",\"eulers-number\",\"e-to-the-nth\",\"superscript\",\"subscript\",,\"log\",\"log-sub\",\"ln\",\"sum\"],geometry:[\"angle\",\"angle-measure\",\"parallel\",\"perpendicular\",,\"overline-right-arrow\",\"right-arrow\",\"left-right-arrow\",\"theta\",\"degree\",\"prime\",\"double-prime\",\"triple-prime\",\"triangle\",\"circle\"],trigonometry:[\"sin\",\"cos\",\"tan\",\"theta\",\"inverse-sin\",\"inverse-cos\",\"inverse-tan\",\"degree\",\"csc\",\"sec\",\"cot\",\"pi\",\"inverse-csc\",\"inverse-sec\",\"inverse-cot\",\"imaginary-number\",\"cis\",\"fraction\"],statistics:[\"braces\",\"comma\",\"mu\",\"sigma\",\"ncr\",\"npr\",\"conditional-probability\",\"factorial\",\"sum\"]},h=[\"superscript\",\"subscript\",\"overline\",\"fraction\",\"square-root\",\"square-root-1\",\"cube-root\",\"absolute-value\",\"left-parenth\",\"left-bracket\",\"braces\",\"angles\",\"ceiling\",\"floor\",\"e-to-the-nth\",\"log-sub\",\"sum\",\"overline-right-arrow\",\"over-left-right-arrow\",\"over-frown\",\"sin\",\"cos\",\"tan\",\"csc\",\"sec\",\"cot\",\"cis\",\"inverse-sin\",\"inverse-cos\",\"inverse-tan\",\"inverse-csc\",\"inverse-sec\",\"inverse-cot\",\"ncr\",\"npr\"],f=r.a.getInterface(),g=class{constructor(e){Object(o.i)(this,e),this.mathKeypadClose=Object(o.d)(this,\"celRichTextMathKeypadClose\",7),this.selectedMathBranchExpression=[],this.selectedBranchName=\"numbers\",this.selectedVariableCase=\"lowercase\",this.variablesToggleButtonText=\"ABC\",this.buttonPressedText=\"\",this.lastSelectedExpressionIndex=0,this.lastFocusedCategory=\"\",this.latex=\"\",this.celIconBaseUrl=void 0,this.keypadMobileView=!1,this.keypadLeftArrowDisabledLabel=\"\",this.keypadRightArrowDisabledLabel=\"\"}handleCelSubNavigationItemClick(e){this.handleMathTypeSelection(e.detail.identifier)}handleKeyDown(e){var t,a,o,r,i,s,n,c,m;const d=Array.from(this.componentEl.querySelectorAll(\".expression-icon\")),p=d.indexOf(e.target),b=(p+1)%d.length,u=(p-1+d.length)%d.length,h=document.activeElement;switch(e.key){case\"$\":e.preventDefault(),this.mathFieldEditor.write(\"\\\\$\");break;case l.o:(null==h?void 0:h.classList.contains(\"expression-icon\"))&&(this.lastSelectedExpressionIndex=p);break;case l.a:case l.r:if(null==h?void 0:h.classList.contains(\"expression-icon\")){const o=d[b];e.preventDefault(),null===(a=null===(t=null==o?void 0:o.shadowRoot)||void 0===t?void 0:t.querySelector(\"button\"))||void 0===a||a.focus()}break;case l.p:case l.q:if(null==h?void 0:h.classList.contains(\"expression-icon\")){const t=d[u];e.preventDefault(),null===(r=null===(o=null==t?void 0:t.shadowRoot)||void 0===o?void 0:o.querySelector(\"button\"))||void 0===r||r.focus()}break;case l.m:if(e.shiftKey){if(\"Tab\"===e.key&&e.shiftKey)if(h==this.paletteTextArea){e.preventDefault();const t=d[this.lastSelectedExpressionIndex];null===(m=null===(c=null==t?void 0:t.shadowRoot)||void 0===c?void 0:c.querySelector(\"button\"))||void 0===m||m.focus()}else if(null==h?void 0:h.classList.contains(\"expression-icon\")){e.preventDefault();const t=this.componentEl.querySelector(\".letter-case-toggle-button-is-loaded\");t?t.shadowRoot.querySelector(\"button\").focus():this.focusMathCategoryItem()}else(null==h?void 0:h.classList.contains(\"letter-case-toggle-button-is-loaded\"))&&(e.preventDefault(),this.focusMathCategoryItem())}else if(null==h?void 0:h.classList.contains(\"expression-icon\")){e.preventDefault();const t=this.paletteTextArea;null==t||t.focus(),this.lastSelectedExpressionIndex=p}else e.target===this.paletteTextArea?(e.preventDefault(),this.mathRootBlock.focus()):e.target===this.mathRootBlock&&(e.preventDefault(),(null===(n=null===(s=null===(i=this.componentEl)||void 0===i?void 0:i.querySelector(\".cancel\"))||void 0===s?void 0:s.shadowRoot)||void 0===n?void 0:n.querySelector(\".button\")).focus())}}handleTouch(e){var t,a;const o=Array.from(this.componentEl.querySelectorAll(\".expression-icon\")),r=o.indexOf(e.target),i=document.activeElement;if(null==i?void 0:i.classList.contains(\"expression-icon\")){if(\"textarea\"===this.lastFocusedCategory){const e=o[this.lastSelectedExpressionIndex];null===(a=null===(t=null==e?void 0:e.shadowRoot)||void 0===t?void 0:t.querySelector(\"button\"))||void 0===a||a.focus()}this.lastSelectedExpressionIndex=r,this.lastFocusedCategory=\"expressions\"}(null==i?void 0:i.classList.contains(\"mq-root-block\"))&&(this.lastFocusedCategory=\"textarea\")}handleCelButtonOnClick(e){var t;const{detail:{id:a}}=e;switch(setTimeout(()=>{this.buttonPressedText=\"\"}),a){case c:this.mathKeypadClose.emit({origin:\"close\",latex:\"\"});break;case m:(null===(t=this.mathRootBlock)||void 0===t?void 0:t.querySelector(\".mq-latex-command-input\"))&&this.mathFieldEditor.keystroke(\"Tab\"),this.mathKeypadClose.emit({origin:\"save\",latex:this.componentEl.getAttribute(\"data-latex\")});break;case\"toggle-button\":this.toggleVariableCase(),this.buttonPressedText=`Show ${this.selectedVariableCase} keys button pressed,\\n${this.selectedVariableCase} variables are showing`;break;default:if(void 0===a||\"\"===a)break;if(this.selectedMathBranchExpression.includes(a)){this.handleSelectedKeypadExpression(p[a]),this.buttonPressedText=`${b[a]} button pressed`,h.includes(a)&&this.mathFieldEditor.focus();break}if(this.selectedMathBranchExpression[0][this.selectedVariableCase].includes(a)){this.handleSelectedKeypadExpression(p[a]),this.buttonPressedText=`${b[a]} button pressed`;break}}}handleLatexChange(){this.componentEl.querySelector(\".mq-cursor\").scrollIntoView()}handleSelectedKeypadExpression(e){\",\"===e?this.mathFieldEditor.write(e):e.split(\",\").forEach(e=>{let t=e.trim();1===t.length?this.mathFieldEditor.cmd(t):\"Left\"===t||\"Right\"===t?this.mathFieldEditor.keystroke(t):this.mathFieldEditor.write(t)})}connectedCallback(){this.cel_button=Object(i.j)(\"cel-button\",\"cel-rich-text-math-keypad\",this.el),this.cel_icon_button=Object(i.j)(\"cel-icon-button\",\"cel-rich-text-math-keypad\",this.el),this.cel_sub_navigation=Object(i.j)(\"cel-sub-navigation\",\"cel-rich-text-math-keypad\",this.el)}componentDidLoad(){var e,t,a,o;let r=this.componentEl.querySelector(\".math-equation-section\");this.mathFieldEditor=f.MathField(r,{spaceBehavesLikeTab:!1,handlers:{edit:()=>{const e=this.mathFieldEditor.latex();this.componentEl.setAttribute(\"data-latex\",e)}}}),this.mathFieldEditor.latex(this.latex),this.paletteTextArea=null===(e=this.componentEl)||void 0===e?void 0:e.querySelector(\".mq-textarea > textarea\"),this.mathRootBlock=null===(t=this.componentEl)||void 0===t?void 0:t.querySelector(\".mq-root-block\"),null===(a=this.paletteTextArea)||void 0===a||a.setAttribute(\"aria-label\",\"Math Input Field\"),null===(o=this.mathRootBlock)||void 0===o||o.setAttribute(\"tabindex\",\"0\")}componentWillLoad(){this.handleMathTypeSelection(s[0].identifier)}handleMathTypeSelection(e){this.selectedBranchName=e,this.selectedMathBranchExpression=u[e]}formImageSource(e){return`../assets/math-palette-icons/${this.getIconName(e)}.svg`}getIconName(e){return d[e]?d[e]:e}focusMathCategoryItem(){this.componentEl.querySelector(\".math-options-tab\").shadowRoot.querySelector(\".active-item > button\").focus()}toggleVariableCase(){\"uppercase\"==this.selectedVariableCase?(this.selectedVariableCase=\"lowercase\",this.variablesToggleButtonText=\"ABC\"):(this.selectedVariableCase=\"uppercase\",this.variablesToggleButtonText=\"abc\")}render(){return Object(o.g)(o.a,{ref:e=>this.componentEl=e},Object(o.g)(\"div\",{class:[\"keypad-holder\",this.keypadMobileView?\"mobile-view-keypad\":\"\"].join(\" \")},Object(o.g)(\"div\",{class:\"cel-visually-hidden\",\"aria-live\":\"polite\"},this.buttonPressedText),Object(o.g)(\"div\",{class:\"tab-section\"},Object(o.g)(\"div\",null,Object(o.g)(this.cel_sub_navigation,{class:\"math-options-tab\",itemList:s,\"data-cel-icon-base-url\":this.celIconBaseUrl,\"data-horizontal-scroll-value\":80,activeId:s[0].identifier,keypadLeftArrowDisabledLabel:!0,\"data-next-button-disabled-tooltip\":this.keypadRightArrowDisabledLabel,\"data-previous-button-disabled-tooltip\":this.keypadLeftArrowDisabledLabel})),Object(o.g)(\"div\",{class:\"math-icons-holder\"},Object(o.g)(\"div\",null,Object(o.g)(this.cel_button,{class:[\"letter-case-toggle-button-not-loaded\",\"variables\"===this.selectedBranchName?\"letter-case-toggle-button-is-loaded\":\"\"].join(\" \"),\"data-title\":\"uppercase\"===this.selectedVariableCase?n.lowercaseLabel:n.uppercaseLabel,\"data-label\":this.variablesToggleButtonText,\"data-identifier\":\"toggle-button\",\"data-toggle\":\"false\",\"data-variant\":\"outline\",\"data-send-target-info-on-button-click\":\"true\"})),this.selectedMathBranchExpression.map(\"variables\"===this.selectedBranchName?e=>e[this.selectedVariableCase].map(e=>Object(o.g)(this.cel_icon_button,{class:\"expression-icon\",\"data-src\":this.celIconBaseUrl?`${this.celIconBaseUrl}math-palette-icons/${this.getIconName(e)}.svg`:this.formImageSource(e),\"data-label\":e,\"data-padding\":\"5px\",\"data-size\":\"mlarge\",\"data-icon-button-aria-label\":b[e],\"data-send-target-info-on-button-click\":!0,\"data-identifier\":e})):e=>Object(o.g)(this.cel_icon_button,{class:\"expression-icon\",\"data-src\":this.celIconBaseUrl?`${this.celIconBaseUrl}math-palette-icons/${this.getIconName(e)}.svg`:this.formImageSource(e),\"data-label\":e,\"data-padding\":\"5px\",\"data-size\":\"mlarge\",\"data-icon-button-aria-label\":b[e],\"data-send-target-info-on-button-click\":!0,\"data-identifier\":e})))),Object(o.g)(\"span\",{class:\"math-equation-section\"}),Object(o.g)(\"div\",{class:\"footer-section\"},Object(o.g)(this.cel_button,{\"data-label\":\"Cancel\",\"data-identifier\":c,\"data-send-target-info-on-button-click\":\"true\",variant:\"outline\",\"data-button-aria-label\":\"Cancel\",class:\"activity-icons cancel\"}),Object(o.g)(this.cel_button,{\"data-label\":\"Insert\",\"data-identifier\":m,\"data-send-target-info-on-button-click\":\"true\",\"data-button-aria-label\":\"Insert\",class:\"activity-icons done\"}))))}get el(){return Object(o.f)(this)}static get watchers(){return{latex:[\"handleLatexChange\"]}}};g.style='@font-face{font-family:Symbola;src:url(font/Symbola.eot);src:local(\"Symbola Regular\"), local(\"Symbola\"), url(font/Symbola.woff2) format(\"woff2\"), url(font/Symbola.woff) format(\"woff\"), url(font/Symbola.ttf) format(\"truetype\"), url(font/Symbola.otf) format(\"opentype\"), url(font/Symbola.svg#Symbola) format(\"svg\")}.mq-editable-field{display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor{border-left:1px solid black;margin-left:-1px;position:relative;z-index:1;padding:0;display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor.mq-blink{visibility:hidden}.mq-editable-field,.mq-math-mode .mq-editable-field{border:1px solid gray}.mq-editable-field.mq-focused,.mq-math-mode .mq-editable-field.mq-focused{-webkit-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;-moz-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;border-color:#709AC0;border-radius:1px}.mq-math-mode .mq-editable-field{margin:1px}.mq-editable-field .mq-latex-command-input{color:inherit;font-family:\"Courier New\", monospace;border:1px solid gray;padding-right:1px;margin-right:1px;margin-left:2px}.mq-editable-field .mq-latex-command-input.mq-empty{background:transparent}.mq-editable-field .mq-latex-command-input.mq-hasCursor{border-color:ActiveBorder}.mq-editable-field.mq-empty:after,.mq-editable-field.mq-text-mode:after,.mq-math-mode .mq-empty:after{visibility:hidden;content:\\'c\\'}.mq-editable-field .mq-cursor:only-child:after,.mq-editable-field .mq-textarea+.mq-cursor:last-child:after{visibility:hidden;content:\\'c\\'}.mq-editable-field .mq-text-mode .mq-cursor:only-child:after{content:\\'\\'}.mq-editable-field.mq-text-mode{overflow-x:auto;overflow-y:hidden}.mq-root-block,.mq-math-mode .mq-root-block{display:-moz-inline-box;display:inline-block;width:100%;padding:2px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle}.mq-math-mode{font-variant:normal;font-weight:normal;font-style:normal;font-size:115%;line-height:1;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-non-leaf,.mq-math-mode .mq-scaled{display:-moz-inline-box;display:inline-block}.mq-math-mode var,.mq-math-mode .mq-text-mode,.mq-math-mode .mq-nonSymbola{font-family:\"Times New Roman\", Symbola, serif;line-height:.9}.mq-math-mode *{font-size:inherit;line-height:inherit;margin:0;padding:0;border-color:black;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box}.mq-math-mode .mq-empty{background:#ccc}.mq-math-mode .mq-empty.mq-root-block{background:transparent}.mq-math-mode.mq-empty{background:transparent}.mq-math-mode .mq-text-mode{display:inline-block}.mq-math-mode .mq-text-mode.mq-hasCursor{-webkit-box-shadow:inset darkgray 0 .1em .2em;box-shadow:inset darkgray 0 .1em .2em;padding:0 .1em;margin:0 -0.1em;min-width:1ex}.mq-math-mode .mq-font{font:1em \"Times New Roman\", Symbola, serif}.mq-math-mode .mq-font *{font-family:inherit;font-style:inherit}.mq-math-mode b,.mq-math-mode b.mq-font{font-weight:bolder}.mq-math-mode var,.mq-math-mode i,.mq-math-mode i.mq-font{font-style:italic}.mq-math-mode var.mq-f{margin-right:0.2em;margin-left:0.1em}.mq-math-mode .mq-roman var.mq-f{margin:0}.mq-math-mode big{font-size:200%}.mq-math-mode .mq-int>big{display:inline-block;-webkit-transform:scaleX(0.7);-moz-transform:scaleX(0.7);-ms-transform:scaleX(0.7);-o-transform:scaleX(0.7);transform:scaleX(0.7);vertical-align:-0.16em}.mq-math-mode .mq-int>.mq-supsub{font-size:80%;vertical-align:-1.1em;padding-right:.2em}.mq-math-mode .mq-int>.mq-supsub>.mq-sup>.mq-sup-inner{vertical-align:1.3em}.mq-math-mode .mq-int>.mq-supsub>.mq-sub{margin-left:-0.35em}.mq-math-mode .mq-roman{font-style:normal}.mq-math-mode .mq-sans-serif{font-family:sans-serif, Symbola, serif}.mq-math-mode .mq-monospace{font-family:monospace, Symbola, serif}.mq-math-mode .mq-overline{border-top:1px solid black;margin-top:1px}.mq-math-mode .mq-underline{border-bottom:1px solid black;margin-bottom:1px}.mq-math-mode .mq-binary-operator{padding:0 0.2em;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-supsub{text-align:left;font-size:90%;vertical-align:-0.5em}.mq-math-mode .mq-supsub.mq-sup-only{vertical-align:.5em}.mq-math-mode .mq-supsub.mq-sup-only .mq-sup{display:inline-block;vertical-align:text-bottom}.mq-math-mode .mq-supsub .mq-sup{display:block}.mq-math-mode .mq-supsub .mq-sub{display:block;float:left}.mq-math-mode .mq-supsub .mq-binary-operator{padding:0 .1em}.mq-math-mode .mq-supsub .mq-fraction{font-size:70%}.mq-math-mode sup.mq-nthroot{font-size:80%;vertical-align:0.8em;margin-right:-0.6em;margin-left:.2em;min-width:.5em}.mq-math-mode .mq-paren{padding:0 .1em;vertical-align:top;-webkit-transform-origin:center .06em;-moz-transform-origin:center .06em;-ms-transform-origin:center .06em;-o-transform-origin:center .06em;transform-origin:center .06em}.mq-math-mode .mq-paren.mq-ghost{color:silver}.mq-math-mode .mq-paren+span{margin-top:.1em;margin-bottom:.1em}.mq-math-mode .mq-array{vertical-align:middle;text-align:center}.mq-math-mode .mq-array>span{display:block}.mq-math-mode .mq-operator-name{font-family:Symbola, \"Times New Roman\", serif;line-height:.9;font-style:normal}.mq-math-mode var.mq-operator-name.mq-first{padding-left:.2em}.mq-math-mode var.mq-operator-name.mq-last,.mq-math-mode .mq-supsub.mq-after-operator-name{padding-right:.2em}.mq-math-mode .mq-fraction{font-size:90%;text-align:center;vertical-align:-0.4em;padding:0 .2em}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link{display:-moz-groupbox}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link,.mq-math-mode x:default{display:inline-block}.mq-math-mode .mq-numerator,.mq-math-mode .mq-denominator{display:block}.mq-math-mode .mq-numerator{padding:0 0.1em}.mq-math-mode .mq-denominator{border-top:1px solid;float:right;width:100%;padding:0.1em}.mq-math-mode .mq-sqrt-prefix{padding-top:0;position:relative;top:0.1em;vertical-align:top;-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;-o-transform-origin:top;transform-origin:top}.mq-math-mode .mq-sqrt-stem{border-top:1px solid;margin-top:1px;padding-left:.15em;padding-right:.2em;margin-right:.1em;padding-top:1px}.mq-math-mode .mq-vector-prefix{display:block;text-align:center;line-height:.25em;margin-bottom:-0.1em;font-size:0.75em}.mq-math-mode .mq-vector-stem{display:block}.mq-math-mode .mq-large-operator{vertical-align:-0.2em;padding:.2em;text-align:center}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator big,.mq-math-mode .mq-large-operator .mq-to{display:block}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator .mq-to{font-size:80%}.mq-math-mode .mq-large-operator .mq-from{float:right;width:100%}.mq-math-mode,.mq-math-mode .mq-editable-field{cursor:text;font-family:Symbola, \"Times New Roman\", serif}.mq-math-mode .mq-overarrow{border-top:1px solid black;margin-top:1px;padding-top:0.2em}.mq-math-mode .mq-overarrow:before{display:block;position:relative;top:-0.34em;font-size:0.5em;line-height:0em;content:\\'\\\\27A4\\';text-align:right}.mq-math-mode .mq-overarrow.mq-arrow-left:before{-moz-transform:scaleX(-1);-o-transform:scaleX(-1);-webkit-transform:scaleX(-1);transform:scaleX(-1);-webkit-filter:FlipH;filter:FlipH;-ms-filter:\"FlipH\"}.mq-math-mode .mq-selection,.mq-editable-field .mq-selection,.mq-math-mode .mq-selection .mq-non-leaf,.mq-editable-field .mq-selection .mq-non-leaf,.mq-math-mode .mq-selection .mq-scaled,.mq-editable-field .mq-selection .mq-scaled{background:#B4D5FE !important;background:Highlight !important;color:HighlightText;border-color:HighlightText}.mq-math-mode .mq-selection .mq-matrixed,.mq-editable-field .mq-selection .mq-matrixed{background:#39F !important}.mq-math-mode .mq-selection .mq-matrixed-container,.mq-editable-field .mq-selection .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color=\\'#3399FF\\') !important}.mq-math-mode .mq-selection.mq-blur,.mq-editable-field .mq-selection.mq-blur,.mq-math-mode .mq-selection.mq-blur .mq-non-leaf,.mq-editable-field .mq-selection.mq-blur .mq-non-leaf,.mq-math-mode .mq-selection.mq-blur .mq-scaled,.mq-editable-field .mq-selection.mq-blur .mq-scaled,.mq-math-mode .mq-selection.mq-blur .mq-matrixed,.mq-editable-field .mq-selection.mq-blur .mq-matrixed{background:#D4D4D4 !important;color:black;border-color:black}.mq-math-mode .mq-selection.mq-blur .mq-matrixed-container,.mq-editable-field .mq-selection.mq-blur .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color=\\'#D4D4D4\\') !important}.mq-editable-field .mq-textarea,.mq-math-mode .mq-textarea{position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.mq-editable-field .mq-textarea *,.mq-math-mode .mq-textarea *,.mq-editable-field .mq-selectable,.mq-math-mode .mq-selectable{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;position:absolute;clip:rect(1em 1em 1em 1em);-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0);resize:none;width:1px;height:1px}.mq-math-mode .mq-matrixed{background:white;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color=\\'white\\');margin-top:-0.1em}.lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \"OpenSans\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \"OpenSans-Semibold\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block}.mq-textarea *{-webkit-transform:none !important;transform:none !important}.keypad-holder{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tab-section{display:block}.tab-section .math-options-tab{--cel-sub-nav-item-btn-background:#f3f3f3;--cel-sub-nav-item-btn-border-bottom:3px solid #f3f3f3}.math-icons-holder{display:-ms-flexbox;display:flex;margin:0 4px 4px 4px;height:178px;-ms-flex-align:start;align-items:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-ms-flex-negative:0;flex-shrink:0;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;background-color:#fff;border:1px solid #d8d8d8;border-radius:2px}.letter-case-toggle-button-not-loaded{display:none}.letter-case-toggle-button-is-loaded{--button-border-radius:5px;--button-height:46px;--button-padding:16px;--button-border-radius:5px;--button-text-size:20px;--button-font-family:Poppins-Italic;--outlineLabel-color:#000;--outline-button-bg-color:#f3f3f3;--outline-border-color:#f3f3f3;--outline-button-font-color-hover:#fff;--outline-button-bg-color-hover:#006be0;display:inline;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.expression-icon{display:grid;margin:1px;--solid-button-bg-color:#fff;--solid-label-color:#000;--solid-button-border-radius:5px;--solid-button-outline-color:none;--icon-button-bg-color:#fff;--icon-button-border-radius:5px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--cel-icon-width:36px;--cel-icon-height:36px}.mq-editable-field{font-family:var(--math-keypad-font-family, OpenSans);font-size:var(--math-keypad-font-size, 1rem);color:#333}.math-equation-section.mq-editable-field.mq-focused{-webkit-box-shadow:none;box-shadow:none;border-color:#333;outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:var(--focus-ring-outline-offset, -4px)}.math-equation-section .mq-root-block{overflow:auto;min-height:92px;height:92px;padding:6px;}.math-equation-section .mq-root-block *{font-size:inherit !important;font-style:inherit !important;font-family:OpenSans !important}.math-equation-section .mq-root-block:focus{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:-2px}.math-equation-section{width:calc(100% - 8px);height:100%;margin:0 4px;background-color:#fff;border-radius:2px;border:1px solid #333;padding:2px}.footer-section{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:start;align-items:flex-start;padding:4px;gap:4px}.activity-icons{border-radius:var(--button-border-radius, 5px);font-weight:500;--button-padding:4px;--button-height:36px;--button-text-size:16px;--button-font-family:Poppins-Medium}.activity-icons.cancel{--button-min-width:80px;--button-width:82px}.activity-icons.done{--button-min-width:72px;--solid-button-bg-color:#006be0;--solid-label-color:#fff;--solid-button-hover-bg-color:#2150a3}.mobile-view-keypad .math-icons-holder{height:48px}.mobile-view-keypad .mq-math-mode .mq-root-block{height:100%;min-height:40px;max-height:83px}.mq-math-mode{font-size:100%}.keypad-holder .mq-math-mode .mq-scaled{display:-ms-inline-flexbox;display:inline-flex;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}'}}]);","name":"39.js","map":{"version":3,"sources":["39.js"],"names":["window","push","rvbt","module","__webpack_exports__","__webpack_require__","r","d","CelRichTextMathKeypad","_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__","_index_d8fafc4f_js__WEBPACK_IMPORTED_MODULE_1__","_utils_194224bf_js__WEBPACK_IMPORTED_MODULE_2__","_constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__","mathTabListItems","identifier","label","letterCasing","footerButtons","mappedIconName","eulers-number","imaginary-number","mathBranchExpressions","1","2","3","4","5","6","7","8","9","0","comma","decimal","lowercase-a","lowercase-b","lowercase-c","lowercase-d","lowercase-e","lowercase-f","lowercase-g","lowercase-h","lowercase-i","lowercase-j","lowercase-k","lowercase-l","lowercase-m","lowercase-n","lowercase-o","lowercase-p","lowercase-q","lowercase-r","lowercase-s","lowercase-t","lowercase-u","lowercase-v","lowercase-w","lowercase-x","lowercase-y","lowercase-z","uppercase-a","uppercase-b","uppercase-c","uppercase-d","uppercase-e","uppercase-f","uppercase-g","uppercase-h","uppercase-i","uppercase-j","uppercase-k","uppercase-l","uppercase-m","uppercase-n","uppercase-o","uppercase-p","uppercase-q","uppercase-r","uppercase-s","uppercase-t","uppercase-u","uppercase-v","uppercase-w","uppercase-x","uppercase-y","uppercase-z","plus","minus","multiply","dot-multiply","divide","left-parenth","right-parenth","pi","equal","not-equal","approximately","plus-minus","less-than","greater-than","less-than-equal","greater-than-equal","unknown-equality","similar","not-similar","congruent-to","not-congruent-to","right-arrow","degree","square","superscript","subscript","overline","fraction","square-root","square-root-1","cube-root","absolute-value","infinity","left-bracket","right-bracket","braces","angles","ceiling","floor","function-of-x","inverse-function-of-x","fog","e-to-the-nth","log-sub","log","ln","sum","angle","angle-measure","parallel","perpendicular","overline-right-arrow","over-left-right-arrow","over-frown","left-right-arrow","theta","prime","double-prime","triple-prime","triangle","circle","parallelogram","sin","cos","tan","csc","sec","cot","inverse-sin","inverse-cos","inverse-tan","inverse-csc","inverse-sec","inverse-cot","cis","mu","sigma","ncr","npr","conditional-probability","factorial","mathBranchExpressionsAriaLabel","mathBranchOperation","numbers","variables","lowercase","uppercase","basics","functions","geometry","trigonometry","statistics","expressionsWithKeyboardInteraction","MQ","getInterface","[object Object]","hostRef","Object","this","mathKeypadClose","selectedMathBranchExpression","selectedBranchName","selectedVariableCase","variablesToggleButtonText","buttonPressedText","lastSelectedExpressionIndex","lastFocusedCategory","latex","celIconBaseUrl","undefined","keypadMobileView","keypadLeftArrowDisabledLabel","keypadRightArrowDisabledLabel","eventObj","handleMathTypeSelection","detail","event","_a","_b","_c","_d","_e","_f","_g","_h","_j","allFocusableElements","Array","from","componentEl","querySelectorAll","currentIndex","indexOf","target","nextIndex","length","previousIndex","focusedElement","document","activeElement","key","preventDefault","mathFieldEditor","write","classList","contains","nextControl","shadowRoot","querySelector","focus","previousControl","shiftKey","paletteTextArea","lastSelectedExpression","isVariableToggleButton","focusMathCategoryItem","nextSectionItem","mathRootBlock","id","buttonType","setTimeout","emit","origin","keystroke","getAttribute","toggleVariableCase","includes","handleSelectedKeypadExpression","scrollIntoView","latexExpression","split","forEach","_latex","trim","cmd","cel_button","el","cel_icon_button","cel_sub_navigation","mathField","MathField","spaceBehavesLikeTab","handlers","edit","currentLaTexExpression","setAttribute","name","getIconName","iconName","ref","class","join","aria-live","itemList","data-cel-icon-base-url","data-horizontal-scroll-value","activeId","data-next-button-disabled-tooltip","data-previous-button-disabled-tooltip","data-title","lowercaseLabel","uppercaseLabel","data-label","data-identifier","data-toggle","data-variant","data-send-target-info-on-button-click","map","expression","data-src","formImageSource","data-padding","data-size","data-icon-button-aria-label","variant","data-button-aria-label","watchers","style"],"mappings":"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"},"input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[39],{\n\n/***/ \"rvbt\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cel_rich_text_math_keypad\", function() { return CelRichTextMathKeypad; });\n/* harmony import */ var _index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"RO4M\");\n/* harmony import */ var _index_d8fafc4f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"/Cwb\");\n/* harmony import */ var _utils_194224bf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"ldx1\");\n/* harmony import */ var _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"+Be3\");\n/* harmony import */ var _commonjsHelpers_ba3f0406_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"tzaC\");\n\n\n\n\n\n\nconst mathTabListItems = [\n  { identifier: 'numbers', label: 'Numbers' },\n  { identifier: 'variables', label: 'Variables' },\n  { identifier: 'basics', label: 'Basics' },\n  { identifier: 'functions', label: 'Functions' },\n  { identifier: 'geometry', label: 'Geometry' },\n  { identifier: 'trigonometry', label: 'Trigonometry' },\n  { identifier: 'statistics', label: 'Statistics' },\n];\nvar letterCasing;\n(function (letterCasing) {\n  letterCasing[\"uppercaseLabel\"] = \"Show Uppercase Keys\";\n  letterCasing[\"lowercaseLabel\"] = \"Show Lowercase Keys\";\n})(letterCasing || (letterCasing = {}));\nconst footerButtons = {\n  cancel: { name: 'Cancel', ariaLabel: 'Cancel', identifier: 'cancel' },\n  insert: { name: 'Insert', ariaLabel: 'Insert', identifier: 'Insert' },\n};\nconst mappedIconName = {\n  'eulers-number': 'lowercase-e',\n  'imaginary-number': 'lowercase-i',\n};\nconst mathBranchExpressions = {\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  '0': '0',\n  'comma': ',',\n  'decimal': '.',\n  'lowercase-a': 'a',\n  'lowercase-b': 'b',\n  'lowercase-c': 'c',\n  'lowercase-d': 'd',\n  'lowercase-e': 'e',\n  'lowercase-f': 'f',\n  'lowercase-g': 'g',\n  'lowercase-h': 'h',\n  'lowercase-i': 'i',\n  'lowercase-j': 'j',\n  'lowercase-k': 'k',\n  'lowercase-l': 'l',\n  'lowercase-m': 'm',\n  'lowercase-n': 'n',\n  'lowercase-o': 'o',\n  'lowercase-p': 'p',\n  'lowercase-q': 'q',\n  'lowercase-r': 'r',\n  'lowercase-s': 's',\n  'lowercase-t': 't',\n  'lowercase-u': 'u',\n  'lowercase-v': 'v',\n  'lowercase-w': 'w',\n  'lowercase-x': 'x',\n  'lowercase-y': 'y',\n  'lowercase-z': 'z',\n  'uppercase-a': 'A',\n  'uppercase-b': 'B',\n  'uppercase-c': 'C',\n  'uppercase-d': 'D',\n  'uppercase-e': 'E',\n  'uppercase-f': 'F',\n  'uppercase-g': 'G',\n  'uppercase-h': 'H',\n  'uppercase-i': 'I',\n  'uppercase-j': 'J',\n  'uppercase-k': 'K',\n  'uppercase-l': 'L',\n  'uppercase-m': 'M',\n  'uppercase-n': 'N',\n  'uppercase-o': 'O',\n  'uppercase-p': 'P',\n  'uppercase-q': 'Q',\n  'uppercase-r': 'R',\n  'uppercase-s': 'S',\n  'uppercase-t': 'T',\n  'uppercase-u': 'U',\n  'uppercase-v': 'V',\n  'uppercase-w': 'W',\n  'uppercase-x': 'X',\n  'uppercase-y': 'Y',\n  'uppercase-z': 'Z',\n  'plus': '+',\n  'minus': '-',\n  'multiply': '\\\\times',\n  'dot-multiply': '\\\\cdot',\n  'divide': '\\\\div',\n  'left-parenth': '(',\n  'right-parenth': ')',\n  'pi': '\\\\pi',\n  'equal': '=',\n  'not-equal': '\\\\neq',\n  'approximately': '\\\\approx',\n  'plus-minus': '\\\\pm',\n  'less-than': '<',\n  'greater-than': '>',\n  'less-than-equal': '\\\\leq',\n  'greater-than-equal': '\\\\geq',\n  'unknown-equality': '\\\\unknownequality',\n  'similar': '\\\\sim',\n  'not-similar': '\\\\notsimilar',\n  'congruent-to': '\\\\cong',\n  'not-congruent-to': '\\\\notcongruentto',\n  'right-arrow': '\\\\rightarrow',\n  'degree': '\\\\degree',\n  'square': '^2',\n  'superscript': '^',\n  'subscript': '_{ },Left',\n  'overline': '\\\\overline{ },Left',\n  'fraction': '\\\\frac{}{},Left,Left',\n  'square-root': '\\\\sqrt{ },Left',\n  'square-root-1': '\\\\sqrt[]{},Left,Left',\n  'cube-root': '\\\\sqrt[3]{},Left',\n  'absolute-value': '|',\n  'infinity': '\\\\infty',\n  'left-bracket': '[',\n  'right-bracket': ']',\n  'braces': '{',\n  'angles': '\\\\langle{ },Left',\n  'ceiling': '\\\\lceil\\\\rceil,Left',\n  'floor': '\\\\lfloor\\\\rfloor,Left',\n  'function-of-x': '\\\\f\\\\left(x\\\\right)',\n  'inverse-function-of-x': '\\\\f^{-1}\\\\left(x\\\\right)',\n  'fog': 'f\\\\cdot g',\n  'e-to-the-nth': 'e^{ },Left',\n  'log-sub': '\\\\log_{ },Left',\n  'log': '\\\\log',\n  'ln': '\\\\ln',\n  'sum': '\\\\\\sum_{ }^{ },Left,Left',\n  'angle': '\\\\angle',\n  'angle-measure': '\\m\\\\angle ',\n  'parallel': '\\\\parallel',\n  'perpendicular': '\\\\perp',\n  'overline-right-arrow': '\\\\overrightarrow{ },Left',\n  'over-left-right-arrow': '\\\\overleftrightarrow{ }',\n  'over-frown': '\\\\overfrown{ }',\n  'left-right-arrow': '\\\\leftrightarrow',\n  'theta': '\\\\theta',\n  'prime': '\\'',\n  'double-prime': '\\'\\'',\n  'triple-prime': '\\'\\'\\'',\n  'triangle': '\\\\triangle',\n  'circle': '\\\\odot',\n  'parallelogram': '\\\\parallelogram',\n  'sin': '\\\\sin',\n  'cos': '\\\\cos',\n  'tan': '\\\\tan',\n  'csc': '\\\\csc',\n  'sec': '\\\\sec',\n  'cot': '\\\\cot',\n  'inverse-sin': '\\\\sin^{-1}',\n  'inverse-cos': '\\\\cos^{-1}',\n  'inverse-tan': '\\\\tan^{-1}',\n  'inverse-csc': '\\\\csc^{-1}',\n  'inverse-sec': '\\\\sec^{-1}',\n  'inverse-cot': '\\\\cot^{-1}',\n  'cis': 'cis',\n  'mu': '\\\\mu',\n  'sigma': '\\\\sigma',\n  'ncr': ' _{ }C_{ },Left,Left,Left,Left',\n  'npr': '_{ }P_{ },Left,Left,Left,Left',\n  'conditional-probability': '\\\\vert',\n  'factorial': '!',\n  'eulers-number': 'e',\n  'imaginary-number': 'i',\n};\nconst mathBranchExpressionsAriaLabel = {\n  '1': 'One',\n  '2': 'Two',\n  '3': 'Three',\n  '4': 'Four',\n  '5': 'Five',\n  '6': 'Six',\n  '7': 'Seven',\n  '8': 'Eight',\n  '9': 'Nine',\n  '0': 'Zero',\n  'comma': 'Comma',\n  'decimal': 'Decimal',\n  'lowercase-a': 'Lowercase a',\n  'lowercase-b': 'Lowercase b',\n  'lowercase-c': 'Lowercase c',\n  'lowercase-d': 'Lowercase d',\n  'lowercase-e': 'Lowercase e',\n  'lowercase-f': 'Lowercase f',\n  'lowercase-g': 'Lowercase g',\n  'lowercase-h': 'Lowercase h',\n  'lowercase-i': 'Lowercase i',\n  'lowercase-j': 'Lowercase j',\n  'lowercase-k': 'Lowercase k',\n  'lowercase-l': 'Lowercase l',\n  'lowercase-m': 'Lowercase m',\n  'lowercase-n': 'Lowercase n',\n  'lowercase-o': 'Lowercase o',\n  'lowercase-p': 'Lowercase p',\n  'lowercase-q': 'Lowercase q',\n  'lowercase-r': 'Lowercase r',\n  'lowercase-s': 'Lowercase s',\n  'lowercase-t': 'Lowercase t',\n  'lowercase-u': 'Lowercase u',\n  'lowercase-v': 'Lowercase v',\n  'lowercase-w': 'Lowercase w',\n  'lowercase-x': 'Lowercase x',\n  'lowercase-y': 'Lowercase y',\n  'lowercase-z': 'Lowercase z',\n  'uppercase-a': 'Uppercase A',\n  'uppercase-b': 'Uppercase B',\n  'uppercase-c': 'Uppercase C',\n  'uppercase-d': 'Uppercase D',\n  'uppercase-e': 'Uppercase E',\n  'uppercase-f': 'Uppercase F',\n  'uppercase-g': 'Uppercase G',\n  'uppercase-h': 'Uppercase H',\n  'uppercase-i': 'Uppercase I',\n  'uppercase-j': 'Uppercase J',\n  'uppercase-k': 'Uppercase K',\n  'uppercase-l': 'Uppercase L',\n  'uppercase-m': 'Uppercase M',\n  'uppercase-n': 'Uppercase N',\n  'uppercase-o': 'Uppercase O',\n  'uppercase-p': 'Uppercase P',\n  'uppercase-q': 'Uppercase Q',\n  'uppercase-r': 'Uppercase R',\n  'uppercase-s': 'Uppercase S',\n  'uppercase-t': 'Uppercase T',\n  'uppercase-u': 'Uppercase U',\n  'uppercase-v': 'Uppercase V',\n  'uppercase-w': 'Uppercase W',\n  'uppercase-x': 'Uppercase X',\n  'uppercase-y': 'Uppercase Y',\n  'uppercase-z': 'Uppercase Z',\n  'plus': 'Plus',\n  'minus': 'Minus',\n  'multiply': 'Multiply',\n  'dot-multiply': 'Dot Multiply',\n  'divide': 'Divide',\n  'left-parenth': 'Left Parenthesis',\n  'right-parenth': 'Right Parenthesis',\n  'pi': 'Pi',\n  'equal': 'Equal',\n  'not-equal': 'Not Equal',\n  'approximately': 'Approximately',\n  'plus-minus': 'Plus or Minus',\n  'less-than': 'Less Than',\n  'greater-than': 'Greater Than',\n  'less-than-equal': 'Less Than Equal',\n  'greater-than-equal': 'Greater Than Equal',\n  'unknown-equality': 'Unknown Equality',\n  'similar': 'Similar',\n  'not-similar': 'Not Similar',\n  'congruent-to': 'Congruent To',\n  'not-congruent-to': 'Not Congruent To',\n  'right-arrow': 'Right Arrow',\n  'degree': 'Degree',\n  'square': 'Square',\n  'superscript': 'Superscript',\n  'subscript': 'Subscript',\n  'overline': 'Overline',\n  'fraction': 'Fraction',\n  'square-root': 'Square Root',\n  'square-root-1': 'Nth Root',\n  'cube-root': 'Cube Root',\n  'absolute-value': 'Absolute Value',\n  'infinity': 'Infinity',\n  'left-bracket': 'Left Bracket',\n  'right-bracket': 'Right Bracket',\n  'braces': 'Braces',\n  'angles': 'Angles',\n  'ceiling': 'Ceiling',\n  'floor': 'Floor',\n  'function-of-x': 'Function Of X',\n  'inverse-function-of-x': 'Inverse Function Of X',\n  'fog': 'Composite F of G',\n  'e-to-the-nth': 'Exponent',\n  'log-sub': 'Log Subscript',\n  'log': 'Log',\n  'ln': 'Natural Logarithm',\n  'sum': 'Sum',\n  'angle': 'Angle',\n  'angle-measure': 'Angle Measure',\n  'parallel': 'Parallel',\n  'perpendicular': 'Perpendicular',\n  'overline-right-arrow': 'Over Right Arrow',\n  'over-left-right-arrow': 'Over Left Right Arrow',\n  'over-frown': 'Over Frown',\n  'left-right-arrow': 'Left Right Arrow',\n  'theta': 'Theta',\n  'prime': 'Prime',\n  'double-prime': 'Double Prime',\n  'triple-prime': 'Triple Prime',\n  'triangle': 'Triangle',\n  'circle': 'Circle',\n  'parallelogram': 'Parallelogram',\n  'sin': 'Sine',\n  'cos': 'Cosine',\n  'tan': 'Tangent',\n  'csc': 'Cosecant',\n  'sec': 'Secant',\n  'cot': 'Cotangent',\n  'inverse-sin': 'Inverse Sine',\n  'inverse-cos': 'Inverse Cosine',\n  'inverse-tan': 'Inverse Tangent',\n  'inverse-csc': 'Inverse Cosecant',\n  'inverse-sec': 'Inverse Secant',\n  'inverse-cot': 'Inverse Cotangent',\n  'cis': 'Cosine i Sine',\n  'mu': 'Mu',\n  'sigma': 'Sigma',\n  'ncr': 'nCr',\n  'npr': 'nPr',\n  'conditional-probability': 'Conditional Probability',\n  'factorial': 'Factorial',\n  'eulers-number': 'Eulers Number',\n  'imaginary-number': 'Imaginary Number'\n};\nconst lowercaseAlphabet = ['lowercase-a', 'lowercase-b', 'lowercase-c', 'lowercase-d', 'lowercase-e', 'lowercase-f', 'lowercase-g', 'lowercase-h', 'lowercase-i', 'lowercase-j', 'lowercase-k', 'lowercase-l', 'lowercase-m', 'lowercase-n', 'lowercase-o', 'lowercase-p', 'lowercase-q', 'lowercase-r', 'lowercase-s', 'lowercase-t', 'lowercase-u', 'lowercase-v', 'lowercase-w', 'lowercase-x', 'lowercase-y', 'lowercase-z'];\nconst uppercaseAlphabet = ['uppercase-a', 'uppercase-b', 'uppercase-c', 'uppercase-d', 'uppercase-e', 'uppercase-f', 'uppercase-g', 'uppercase-h', 'uppercase-i', 'uppercase-j', 'uppercase-k', 'uppercase-l', 'uppercase-m', 'uppercase-n', 'uppercase-o', 'uppercase-p', 'uppercase-q', 'uppercase-r', 'uppercase-s', 'uppercase-t', 'uppercase-u', 'uppercase-v', 'uppercase-w', 'uppercase-x', 'uppercase-y', 'uppercase-z'];\n// The expressions commented out are currently not supported by MathQuill/MathLib\nconst mathBranchOperation = {\n  numbers: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'comma', 'decimal'],\n  variables: [{ lowercase: [...lowercaseAlphabet], uppercase: [...uppercaseAlphabet] }],\n  basics: ['plus', 'minus', 'multiply', 'divide', 'pi', 'equal', 'not-equal', 'approximately', 'dot-multiply', 'plus-minus', 'less-than', 'greater-than', 'less-than-equal', 'greater-than-equal', /* 'unknown-equality', */ 'similar', /* 'not-similar', */ 'congruent-to', /* 'not-congruent-to', */ 'right-arrow', 'degree', 'square', 'superscript', 'subscript', /* 'overline',*/ 'fraction', 'square-root', 'cube-root', 'square-root-1', 'absolute-value', 'infinity'],\n  functions: ['left-parenth', 'right-parenth', 'left-bracket', 'right-bracket', 'braces', /*'angles'*/ , 'ceiling', 'floor', 'comma', 'function-of-x', 'inverse-function-of-x', 'fog', 'eulers-number', 'e-to-the-nth', 'superscript', 'subscript', , 'log', 'log-sub', 'ln', 'sum'],\n  geometry: ['angle', 'angle-measure', 'parallel', 'perpendicular', /*'overline'*/ , 'overline-right-arrow', /* 'over-left-right-arrow', */ /* 'over-frown', */ 'right-arrow', 'left-right-arrow', 'theta', 'degree', 'prime', 'double-prime', 'triple-prime', 'triangle', 'circle', /* 'parallelogram' */],\n  trigonometry: ['sin', 'cos', 'tan', 'theta', 'inverse-sin', 'inverse-cos', 'inverse-tan', 'degree', 'csc', 'sec', 'cot', 'pi', 'inverse-csc', 'inverse-sec', 'inverse-cot', 'imaginary-number', 'cis', 'fraction'],\n  statistics: ['braces', 'comma', 'mu', 'sigma', 'ncr', 'npr', 'conditional-probability', 'factorial', /*'overline',*/ 'sum'],\n};\nconst expressionsWithKeyboardInteraction = [\n  'superscript',\n  'subscript',\n  'overline',\n  'fraction',\n  'square-root',\n  'square-root-1',\n  'cube-root',\n  'absolute-value',\n  'left-parenth',\n  'left-bracket',\n  'braces',\n  'angles',\n  'ceiling',\n  'floor',\n  'e-to-the-nth',\n  'log-sub',\n  'sum',\n  'overline-right-arrow',\n  'over-left-right-arrow',\n  'over-frown',\n  'sin',\n  'cos',\n  'tan',\n  'csc',\n  'sec',\n  'cot',\n  'cis',\n  'inverse-sin',\n  'inverse-cos',\n  'inverse-tan',\n  'inverse-csc',\n  'inverse-sec',\n  'inverse-cot',\n  'ncr',\n  'npr',\n];\n\nconst celRichTextMathKeypadCss = \"@font-face{font-family:Symbola;src:url(font/Symbola.eot);src:local(\\\"Symbola Regular\\\"), local(\\\"Symbola\\\"), url(font/Symbola.woff2) format(\\\"woff2\\\"), url(font/Symbola.woff) format(\\\"woff\\\"), url(font/Symbola.ttf) format(\\\"truetype\\\"), url(font/Symbola.otf) format(\\\"opentype\\\"), url(font/Symbola.svg#Symbola) format(\\\"svg\\\")}.mq-editable-field{display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor{border-left:1px solid black;margin-left:-1px;position:relative;z-index:1;padding:0;display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor.mq-blink{visibility:hidden}.mq-editable-field,.mq-math-mode .mq-editable-field{border:1px solid gray}.mq-editable-field.mq-focused,.mq-math-mode .mq-editable-field.mq-focused{-webkit-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;-moz-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;border-color:#709AC0;border-radius:1px}.mq-math-mode .mq-editable-field{margin:1px}.mq-editable-field .mq-latex-command-input{color:inherit;font-family:\\\"Courier New\\\", monospace;border:1px solid gray;padding-right:1px;margin-right:1px;margin-left:2px}.mq-editable-field .mq-latex-command-input.mq-empty{background:transparent}.mq-editable-field .mq-latex-command-input.mq-hasCursor{border-color:ActiveBorder}.mq-editable-field.mq-empty:after,.mq-editable-field.mq-text-mode:after,.mq-math-mode .mq-empty:after{visibility:hidden;content:'c'}.mq-editable-field .mq-cursor:only-child:after,.mq-editable-field .mq-textarea+.mq-cursor:last-child:after{visibility:hidden;content:'c'}.mq-editable-field .mq-text-mode .mq-cursor:only-child:after{content:''}.mq-editable-field.mq-text-mode{overflow-x:auto;overflow-y:hidden}.mq-root-block,.mq-math-mode .mq-root-block{display:-moz-inline-box;display:inline-block;width:100%;padding:2px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle}.mq-math-mode{font-variant:normal;font-weight:normal;font-style:normal;font-size:115%;line-height:1;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-non-leaf,.mq-math-mode .mq-scaled{display:-moz-inline-box;display:inline-block}.mq-math-mode var,.mq-math-mode .mq-text-mode,.mq-math-mode .mq-nonSymbola{font-family:\\\"Times New Roman\\\", Symbola, serif;line-height:.9}.mq-math-mode *{font-size:inherit;line-height:inherit;margin:0;padding:0;border-color:black;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box}.mq-math-mode .mq-empty{background:#ccc}.mq-math-mode .mq-empty.mq-root-block{background:transparent}.mq-math-mode.mq-empty{background:transparent}.mq-math-mode .mq-text-mode{display:inline-block}.mq-math-mode .mq-text-mode.mq-hasCursor{-webkit-box-shadow:inset darkgray 0 .1em .2em;box-shadow:inset darkgray 0 .1em .2em;padding:0 .1em;margin:0 -0.1em;min-width:1ex}.mq-math-mode .mq-font{font:1em \\\"Times New Roman\\\", Symbola, serif}.mq-math-mode .mq-font *{font-family:inherit;font-style:inherit}.mq-math-mode b,.mq-math-mode b.mq-font{font-weight:bolder}.mq-math-mode var,.mq-math-mode i,.mq-math-mode i.mq-font{font-style:italic}.mq-math-mode var.mq-f{margin-right:0.2em;margin-left:0.1em}.mq-math-mode .mq-roman var.mq-f{margin:0}.mq-math-mode big{font-size:200%}.mq-math-mode .mq-int>big{display:inline-block;-webkit-transform:scaleX(0.7);-moz-transform:scaleX(0.7);-ms-transform:scaleX(0.7);-o-transform:scaleX(0.7);transform:scaleX(0.7);vertical-align:-0.16em}.mq-math-mode .mq-int>.mq-supsub{font-size:80%;vertical-align:-1.1em;padding-right:.2em}.mq-math-mode .mq-int>.mq-supsub>.mq-sup>.mq-sup-inner{vertical-align:1.3em}.mq-math-mode .mq-int>.mq-supsub>.mq-sub{margin-left:-0.35em}.mq-math-mode .mq-roman{font-style:normal}.mq-math-mode .mq-sans-serif{font-family:sans-serif, Symbola, serif}.mq-math-mode .mq-monospace{font-family:monospace, Symbola, serif}.mq-math-mode .mq-overline{border-top:1px solid black;margin-top:1px}.mq-math-mode .mq-underline{border-bottom:1px solid black;margin-bottom:1px}.mq-math-mode .mq-binary-operator{padding:0 0.2em;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-supsub{text-align:left;font-size:90%;vertical-align:-0.5em}.mq-math-mode .mq-supsub.mq-sup-only{vertical-align:.5em}.mq-math-mode .mq-supsub.mq-sup-only .mq-sup{display:inline-block;vertical-align:text-bottom}.mq-math-mode .mq-supsub .mq-sup{display:block}.mq-math-mode .mq-supsub .mq-sub{display:block;float:left}.mq-math-mode .mq-supsub .mq-binary-operator{padding:0 .1em}.mq-math-mode .mq-supsub .mq-fraction{font-size:70%}.mq-math-mode sup.mq-nthroot{font-size:80%;vertical-align:0.8em;margin-right:-0.6em;margin-left:.2em;min-width:.5em}.mq-math-mode .mq-paren{padding:0 .1em;vertical-align:top;-webkit-transform-origin:center .06em;-moz-transform-origin:center .06em;-ms-transform-origin:center .06em;-o-transform-origin:center .06em;transform-origin:center .06em}.mq-math-mode .mq-paren.mq-ghost{color:silver}.mq-math-mode .mq-paren+span{margin-top:.1em;margin-bottom:.1em}.mq-math-mode .mq-array{vertical-align:middle;text-align:center}.mq-math-mode .mq-array>span{display:block}.mq-math-mode .mq-operator-name{font-family:Symbola, \\\"Times New Roman\\\", serif;line-height:.9;font-style:normal}.mq-math-mode var.mq-operator-name.mq-first{padding-left:.2em}.mq-math-mode var.mq-operator-name.mq-last,.mq-math-mode .mq-supsub.mq-after-operator-name{padding-right:.2em}.mq-math-mode .mq-fraction{font-size:90%;text-align:center;vertical-align:-0.4em;padding:0 .2em}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link{display:-moz-groupbox}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link,.mq-math-mode x:default{display:inline-block}.mq-math-mode .mq-numerator,.mq-math-mode .mq-denominator{display:block}.mq-math-mode .mq-numerator{padding:0 0.1em}.mq-math-mode .mq-denominator{border-top:1px solid;float:right;width:100%;padding:0.1em}.mq-math-mode .mq-sqrt-prefix{padding-top:0;position:relative;top:0.1em;vertical-align:top;-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;-o-transform-origin:top;transform-origin:top}.mq-math-mode .mq-sqrt-stem{border-top:1px solid;margin-top:1px;padding-left:.15em;padding-right:.2em;margin-right:.1em;padding-top:1px}.mq-math-mode .mq-vector-prefix{display:block;text-align:center;line-height:.25em;margin-bottom:-0.1em;font-size:0.75em}.mq-math-mode .mq-vector-stem{display:block}.mq-math-mode .mq-large-operator{vertical-align:-0.2em;padding:.2em;text-align:center}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator big,.mq-math-mode .mq-large-operator .mq-to{display:block}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator .mq-to{font-size:80%}.mq-math-mode .mq-large-operator .mq-from{float:right;width:100%}.mq-math-mode,.mq-math-mode .mq-editable-field{cursor:text;font-family:Symbola, \\\"Times New Roman\\\", serif}.mq-math-mode .mq-overarrow{border-top:1px solid black;margin-top:1px;padding-top:0.2em}.mq-math-mode .mq-overarrow:before{display:block;position:relative;top:-0.34em;font-size:0.5em;line-height:0em;content:'\\\\27A4';text-align:right}.mq-math-mode .mq-overarrow.mq-arrow-left:before{-moz-transform:scaleX(-1);-o-transform:scaleX(-1);-webkit-transform:scaleX(-1);transform:scaleX(-1);-webkit-filter:FlipH;filter:FlipH;-ms-filter:\\\"FlipH\\\"}.mq-math-mode .mq-selection,.mq-editable-field .mq-selection,.mq-math-mode .mq-selection .mq-non-leaf,.mq-editable-field .mq-selection .mq-non-leaf,.mq-math-mode .mq-selection .mq-scaled,.mq-editable-field .mq-selection .mq-scaled{background:#B4D5FE !important;background:Highlight !important;color:HighlightText;border-color:HighlightText}.mq-math-mode .mq-selection .mq-matrixed,.mq-editable-field .mq-selection .mq-matrixed{background:#39F !important}.mq-math-mode .mq-selection .mq-matrixed-container,.mq-editable-field .mq-selection .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='#3399FF') !important}.mq-math-mode .mq-selection.mq-blur,.mq-editable-field .mq-selection.mq-blur,.mq-math-mode .mq-selection.mq-blur .mq-non-leaf,.mq-editable-field .mq-selection.mq-blur .mq-non-leaf,.mq-math-mode .mq-selection.mq-blur .mq-scaled,.mq-editable-field .mq-selection.mq-blur .mq-scaled,.mq-math-mode .mq-selection.mq-blur .mq-matrixed,.mq-editable-field .mq-selection.mq-blur .mq-matrixed{background:#D4D4D4 !important;color:black;border-color:black}.mq-math-mode .mq-selection.mq-blur .mq-matrixed-container,.mq-editable-field .mq-selection.mq-blur .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='#D4D4D4') !important}.mq-editable-field .mq-textarea,.mq-math-mode .mq-textarea{position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.mq-editable-field .mq-textarea *,.mq-math-mode .mq-textarea *,.mq-editable-field .mq-selectable,.mq-math-mode .mq-selectable{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;position:absolute;clip:rect(1em 1em 1em 1em);-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0);resize:none;width:1px;height:1px}.mq-math-mode .mq-matrixed{background:white;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='white');margin-top:-0.1em}.lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block}.mq-textarea *{-webkit-transform:none !important;transform:none !important}.keypad-holder{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tab-section{display:block}.tab-section .math-options-tab{--cel-sub-nav-item-btn-background:#f3f3f3;--cel-sub-nav-item-btn-border-bottom:3px solid #f3f3f3}.math-icons-holder{display:-ms-flexbox;display:flex;margin:0 4px 4px 4px;height:178px;-ms-flex-align:start;align-items:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-ms-flex-negative:0;flex-shrink:0;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;background-color:#fff;border:1px solid #d8d8d8;border-radius:2px}.letter-case-toggle-button-not-loaded{display:none}.letter-case-toggle-button-is-loaded{--button-border-radius:5px;--button-height:46px;--button-padding:16px;--button-border-radius:5px;--button-text-size:20px;--button-font-family:Poppins-Italic;--outlineLabel-color:#000;--outline-button-bg-color:#f3f3f3;--outline-border-color:#f3f3f3;--outline-button-font-color-hover:#fff;--outline-button-bg-color-hover:#006be0;display:inline;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.expression-icon{display:grid;margin:1px;--solid-button-bg-color:#fff;--solid-label-color:#000;--solid-button-border-radius:5px;--solid-button-outline-color:none;--icon-button-bg-color:#fff;--icon-button-border-radius:5px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--cel-icon-width:36px;--cel-icon-height:36px}.mq-editable-field{font-family:var(--math-keypad-font-family, OpenSans);font-size:var(--math-keypad-font-size, 1rem);color:#333}.math-equation-section.mq-editable-field.mq-focused{-webkit-box-shadow:none;box-shadow:none;border-color:#333;outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:var(--focus-ring-outline-offset, -4px)}.math-equation-section .mq-root-block{overflow:auto;min-height:92px;height:92px;padding:6px;}.math-equation-section .mq-root-block *{font-size:inherit !important;font-style:inherit !important;font-family:OpenSans !important}.math-equation-section .mq-root-block:focus{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:-2px}.math-equation-section{width:calc(100% - 8px);height:100%;margin:0 4px;background-color:#fff;border-radius:2px;border:1px solid #333;padding:2px}.footer-section{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:start;align-items:flex-start;padding:4px;gap:4px}.activity-icons{border-radius:var(--button-border-radius, 5px);font-weight:500;--button-padding:4px;--button-height:36px;--button-text-size:16px;--button-font-family:Poppins-Medium}.activity-icons.cancel{--button-min-width:80px;--button-width:82px}.activity-icons.done{--button-min-width:72px;--solid-button-bg-color:#006be0;--solid-label-color:#fff;--solid-button-hover-bg-color:#2150a3}.mobile-view-keypad .math-icons-holder{height:48px}.mobile-view-keypad .mq-math-mode .mq-root-block{height:100%;min-height:40px;max-height:83px}.mq-math-mode{font-size:100%}.keypad-holder .mq-math-mode .mq-scaled{display:-ms-inline-flexbox;display:inline-flex;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}\";\n\nconst MQ = _index_d8fafc4f_js__WEBPACK_IMPORTED_MODULE_1__[/* M */ \"a\"].getInterface();\nconst CelRichTextMathKeypad = class {\n  constructor(hostRef) {\n    Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"i\"])(this, hostRef);\n    this.mathKeypadClose = Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"d\"])(this, \"celRichTextMathKeypadClose\", 7);\n    this.selectedMathBranchExpression = [];\n    this.selectedBranchName = 'numbers';\n    this.selectedVariableCase = 'lowercase';\n    this.variablesToggleButtonText = 'ABC';\n    this.buttonPressedText = '';\n    this.lastSelectedExpressionIndex = 0;\n    this.lastFocusedCategory = '';\n    this.latex = '';\n    this.celIconBaseUrl = undefined;\n    this.keypadMobileView = false;\n    this.keypadLeftArrowDisabledLabel = '';\n    this.keypadRightArrowDisabledLabel = '';\n  }\n  handleCelSubNavigationItemClick(eventObj) {\n    this.handleMathTypeSelection(eventObj.detail.identifier);\n  }\n  /* Added the following code in order to handle the '$' hot key causing switch between the text mode and math mode in the mathQuill editor.\n    Since user may use in certain cases $ symbol from the keyboard input as we are allowing free user inputs from keyboard for the mathQuill textarea.\n  */\n  handleKeyDown(event) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const allFocusableElements = Array.from(this.componentEl.querySelectorAll('.expression-icon'));\n    const currentIndex = allFocusableElements.indexOf(event.target);\n    const nextIndex = (currentIndex + 1) % allFocusableElements.length;\n    const previousIndex = (currentIndex - 1 + allFocusableElements.length) % allFocusableElements.length;\n    const focusedElement = document.activeElement;\n    switch (event.key) {\n      /* Added the following code in order to handle the '$' hot key causing switch between the text mode and math mode in the mathQuill editor.\n      Since user may use in certain cases $ symbol from the keyboard input as we are allowing free user inputs from keyboard for the mathQuill textarea.\n      */\n      case ('$'):\n        event.preventDefault();\n        this.mathFieldEditor.write('\\\\$');\n        break;\n      // Ensures that focus is brought back to last selected element when text area is auto focused.\n      // Few expressions auto focus on text area when enterkey is pressed.\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* b */ \"o\"]:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          this.lastSelectedExpressionIndex = currentIndex;\n        }\n        break;\n      //Arrow key functionality for expressions in the math keypad only\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* A */ \"a\"]:\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* e */ \"r\"]:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          const nextControl = allFocusableElements[nextIndex];\n          event.preventDefault();\n          (_b = (_a = nextControl === null || nextControl === void 0 ? void 0 : nextControl.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('button')) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        break;\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* c */ \"p\"]:\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* d */ \"q\"]:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          const previousControl = allFocusableElements[previousIndex];\n          event.preventDefault();\n          (_d = (_c = previousControl === null || previousControl === void 0 ? void 0 : previousControl.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('button')) === null || _d === void 0 ? void 0 : _d.focus();\n        }\n        break;\n      case _constants_a06dfd18_js__WEBPACK_IMPORTED_MODULE_3__[/* T */ \"m\"]:\n        //Handle when tab is pressed when in the expressions, focus should go to the textarea\n        if (!event.shiftKey) {\n          if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n            event.preventDefault();\n            const nextSectionItem = this.paletteTextArea;\n            nextSectionItem === null || nextSectionItem === void 0 ? void 0 : nextSectionItem.focus();\n            this.lastSelectedExpressionIndex = currentIndex;\n          }\n          // Prevents cursor from moving within text area when tabbing.\n          else if (event.target === this.paletteTextArea) {\n            event.preventDefault();\n            this.mathRootBlock.focus();\n          }\n          // Prevents focus moving back to text area and ensures cancel button is focused\n          else if (event.target === this.mathRootBlock) {\n            event.preventDefault();\n            const contentField = (_g = (_f = (_e = this.componentEl) === null || _e === void 0 ? void 0 : _e.querySelector('.cancel')) === null || _f === void 0 ? void 0 : _f.shadowRoot) === null || _g === void 0 ? void 0 : _g.querySelector('.button');\n            contentField.focus();\n          }\n        }\n        //Handle When shift+tab is pressed when in the textbox, focus should go back to the last selected expression\n        else if (event.key === 'Tab' && event.shiftKey) {\n          if (focusedElement == this.paletteTextArea) {\n            event.preventDefault();\n            const lastSelectedExpression = allFocusableElements[this.lastSelectedExpressionIndex];\n            (_j = (_h = lastSelectedExpression === null || lastSelectedExpression === void 0 ? void 0 : lastSelectedExpression.shadowRoot) === null || _h === void 0 ? void 0 : _h.querySelector('button')) === null || _j === void 0 ? void 0 : _j.focus();\n          }\n          // Shift focus back to the expression category on SHIFT + TAB\n          else if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n            event.preventDefault();\n            const isVariableToggleButton = this.componentEl.querySelector('.letter-case-toggle-button-is-loaded');\n            if (isVariableToggleButton) {\n              isVariableToggleButton.shadowRoot.querySelector('button').focus();\n            }\n            else {\n              this.focusMathCategoryItem();\n            }\n          }\n          else if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('letter-case-toggle-button-is-loaded')) {\n            event.preventDefault();\n            this.focusMathCategoryItem();\n          }\n        }\n        break;\n      //do nothing\n    }\n  }\n  //Support for last selected expression when returning to the expressions from the textarea\n  handleTouch(event) {\n    var _a, _b;\n    const allFocusableElements = Array.from(this.componentEl.querySelectorAll('.expression-icon'));\n    const currentIndex = allFocusableElements.indexOf(event.target);\n    const focusedElement = document.activeElement;\n    if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n      //Set the last selected expression index when an expression is selected\n      if (this.lastFocusedCategory === 'textarea') {\n        const lastSelectedExpression = allFocusableElements[this.lastSelectedExpressionIndex];\n        (_b = (_a = lastSelectedExpression === null || lastSelectedExpression === void 0 ? void 0 : lastSelectedExpression.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('button')) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n      this.lastSelectedExpressionIndex = currentIndex;\n      this.lastFocusedCategory = 'expressions';\n    }\n    if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('mq-root-block')) {\n      this.lastFocusedCategory = 'textarea';\n    }\n  }\n  handleCelButtonOnClick(eventObj) {\n    var _a;\n    const { detail: { id: buttonType } } = eventObj;\n    setTimeout(() => {\n      this.buttonPressedText = '';\n    });\n    switch (buttonType) {\n      case footerButtons.cancel.identifier:\n        this.mathKeypadClose.emit({ origin: 'close', latex: '' });\n        break;\n      case footerButtons.insert.identifier:\n        // Added the following code in order to ensure that latex command provided without any values through keyboard input are inserted e.g. '\\sqrt'\n        const inputModeElement = (_a = this.mathRootBlock) === null || _a === void 0 ? void 0 : _a.querySelector('.mq-latex-command-input');\n        if (inputModeElement) {\n          this.mathFieldEditor.keystroke('Tab');\n        }\n        this.mathKeypadClose.emit({ origin: 'save', latex: this.componentEl.getAttribute('data-latex') });\n        break;\n      case \"toggle-button\":\n        this.toggleVariableCase();\n        this.buttonPressedText = `Show ${this.selectedVariableCase} keys button pressed` + `,\\n${this.selectedVariableCase} variables are showing`;\n        break;\n      default:\n        if (buttonType === undefined || buttonType === '') {\n          //Do nothing when button identifier is null. Handles button click triggered from cel-sub-navigation\n          break;\n        }\n        if (this.selectedMathBranchExpression.includes(buttonType)) {\n          this.handleSelectedKeypadExpression(mathBranchExpressions[buttonType]);\n          this.buttonPressedText = `${mathBranchExpressionsAriaLabel[buttonType]} button pressed`;\n          if (expressionsWithKeyboardInteraction.includes(buttonType)) {\n            this.mathFieldEditor.focus();\n          }\n          break;\n        }\n        else if (this.selectedMathBranchExpression[0][this.selectedVariableCase].includes(buttonType)) {\n          this.handleSelectedKeypadExpression(mathBranchExpressions[buttonType]);\n          this.buttonPressedText = `${mathBranchExpressionsAriaLabel[buttonType]} button pressed`;\n          break;\n        }\n        break;\n    }\n  }\n  //Scrolls equations into view when uses keypad to input a long equation.\n  handleLatexChange() {\n    const cursor = this.componentEl.querySelector('.mq-cursor');\n    cursor.scrollIntoView();\n  }\n  handleSelectedKeypadExpression(latexExpression) {\n    if (latexExpression === ',') {\n      this.mathFieldEditor.write(latexExpression);\n    }\n    else {\n      latexExpression.split(',').forEach(_latex => {\n        let latex = _latex.trim();\n        if (latex.length === 1) {\n          this.mathFieldEditor.cmd(latex);\n        }\n        else if (latex === 'Left' || latex === 'Right') {\n          this.mathFieldEditor.keystroke(latex);\n        }\n        else {\n          this.mathFieldEditor.write(latex);\n        }\n      });\n    }\n  }\n  connectedCallback() {\n    this.cel_button = Object(_utils_194224bf_js__WEBPACK_IMPORTED_MODULE_2__[/* t */ \"j\"])('cel-button', 'cel-rich-text-math-keypad', this.el);\n    this.cel_icon_button = Object(_utils_194224bf_js__WEBPACK_IMPORTED_MODULE_2__[/* t */ \"j\"])('cel-icon-button', 'cel-rich-text-math-keypad', this.el);\n    this.cel_sub_navigation = Object(_utils_194224bf_js__WEBPACK_IMPORTED_MODULE_2__[/* t */ \"j\"])('cel-sub-navigation', 'cel-rich-text-math-keypad', this.el);\n  }\n  componentDidLoad() {\n    var _a, _b, _c, _d;\n    let mathField = this.componentEl.querySelector(\".math-equation-section\");\n    this.mathFieldEditor = MQ.MathField(mathField, {\n      spaceBehavesLikeTab: false,\n      handlers: {\n        edit: () => {\n          const currentLaTexExpression = this.mathFieldEditor.latex();\n          this.componentEl.setAttribute('data-latex', currentLaTexExpression);\n        },\n      }\n    });\n    this.mathFieldEditor.latex(this.latex);\n    this.paletteTextArea = (_a = this.componentEl) === null || _a === void 0 ? void 0 : _a.querySelector('.mq-textarea > textarea');\n    this.mathRootBlock = (_b = this.componentEl) === null || _b === void 0 ? void 0 : _b.querySelector('.mq-root-block');\n    (_c = this.paletteTextArea) === null || _c === void 0 ? void 0 : _c.setAttribute('aria-label', 'Math Input Field');\n    (_d = this.mathRootBlock) === null || _d === void 0 ? void 0 : _d.setAttribute('tabindex', '0');\n  }\n  componentWillLoad() {\n    this.handleMathTypeSelection(mathTabListItems[0].identifier);\n  }\n  handleMathTypeSelection(buttonType) {\n    this.selectedBranchName = buttonType;\n    this.selectedMathBranchExpression = mathBranchOperation[buttonType];\n  }\n  formImageSource(name) {\n    return (`../assets/math-palette-icons/${this.getIconName(name)}.svg`);\n  }\n  getIconName(iconName) {\n    return mappedIconName[iconName] ? mappedIconName[iconName] : iconName;\n  }\n  focusMathCategoryItem() {\n    const mathOptionsTab = this.componentEl.querySelector('.math-options-tab');\n    const activeMathTypeButton = mathOptionsTab.shadowRoot.querySelector('.active-item > button');\n    activeMathTypeButton.focus();\n  }\n  toggleVariableCase() {\n    if (this.selectedVariableCase == 'uppercase') {\n      this.selectedVariableCase = 'lowercase';\n      this.variablesToggleButtonText = 'ABC';\n    }\n    else {\n      this.selectedVariableCase = 'uppercase';\n      this.variablesToggleButtonText = 'abc';\n    }\n  }\n  render() {\n    return (Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"a\"], { ref: (el) => (this.componentEl = el) }, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", { class: ['keypad-holder',\n        this.keypadMobileView ? 'mobile-view-keypad' : ''\n      ].join(' ') }, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", { class: 'cel-visually-hidden', \"aria-live\": 'polite' }, this.buttonPressedText), Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", { class: 'tab-section' }, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", null, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_sub_navigation, { class: 'math-options-tab', itemList: mathTabListItems, \"data-cel-icon-base-url\": this.celIconBaseUrl, \"data-horizontal-scroll-value\": 80, activeId: mathTabListItems[0].identifier, keypadLeftArrowDisabledLabel: true, \"data-next-button-disabled-tooltip\": this.keypadRightArrowDisabledLabel, \"data-previous-button-disabled-tooltip\": this.keypadLeftArrowDisabledLabel })), Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", { class: 'math-icons-holder' }, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", null, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_button, { class: [\n        'letter-case-toggle-button-not-loaded',\n        this.selectedBranchName === 'variables' ? 'letter-case-toggle-button-is-loaded' : ''\n      ].join(' '), \"data-title\": this.selectedVariableCase === 'uppercase' ? letterCasing.lowercaseLabel : letterCasing.uppercaseLabel, \"data-label\": this.variablesToggleButtonText, \"data-identifier\": 'toggle-button', \"data-toggle\": 'false', \"data-variant\": 'outline', \"data-send-target-info-on-button-click\": 'true' })), this.selectedBranchName === 'variables' ? (this.selectedMathBranchExpression.map((expression) => (expression[this.selectedVariableCase].map((expression) => (Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_icon_button, { class: 'expression-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}math-palette-icons/${this.getIconName(expression)}.svg` : this.formImageSource(expression), \"data-label\": expression, \"data-padding\": '5px', \"data-size\": 'mlarge', \"data-icon-button-aria-label\": mathBranchExpressionsAriaLabel[expression], \"data-send-target-info-on-button-click\": true, \"data-identifier\": expression })))))) :\n      this.selectedMathBranchExpression.map((expression) => (Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_icon_button, { class: 'expression-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}math-palette-icons/${this.getIconName(expression)}.svg` : this.formImageSource(expression), \"data-label\": expression, \"data-padding\": '5px', \"data-size\": 'mlarge', \"data-icon-button-aria-label\": mathBranchExpressionsAriaLabel[expression], \"data-send-target-info-on-button-click\": true, \"data-identifier\": expression }))))), Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"span\", { class: 'math-equation-section' }), Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(\"div\", { class: 'footer-section' }, Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_button, { \"data-label\": footerButtons.cancel.name, \"data-identifier\": footerButtons.cancel.identifier, \"data-send-target-info-on-button-click\": 'true', variant: 'outline', \"data-button-aria-label\": footerButtons.cancel.ariaLabel, class: 'activity-icons cancel' }), Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"g\"])(this.cel_button, { \"data-label\": footerButtons.insert.name, \"data-identifier\": footerButtons.insert.identifier, \"data-send-target-info-on-button-click\": 'true', \"data-button-aria-label\": footerButtons.insert.ariaLabel, class: 'activity-icons done' })))));\n  }\n  get el() { return Object(_index_9a8c46b4_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"f\"])(this); }\n  static get watchers() { return {\n    \"latex\": [\"handleLatexChange\"]\n  }; }\n};\nCelRichTextMathKeypad.style = celRichTextMathKeypadCss;\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/SavvasTutorial/accessibility-training/node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js??ref--7-0!/Users/mattyZ/Desktop/Projects/SavvasTutorial/accessibility-training/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--7-1!/Users/mattyZ/Desktop/Projects/SavvasTutorial/accessibility-training/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/ivy/index.js!/Users/mattyZ/Desktop/Projects/SavvasTutorial/accessibility-training/node_modules/source-map-loader/dist/cjs.js!/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-rich-text-math-keypad.entry.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6G;AACvD;AACM;AACsE;AAC1F;;AAExC;AACA,GAAG,0CAA0C;AAC7C,GAAG,8CAA8C;AACjD,GAAG,wCAAwC;AAC3C,GAAG,8CAA8C;AACjD,GAAG,4CAA4C;AAC/C,GAAG,oDAAoD;AACvD,GAAG,gDAAgD;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,WAAW,4DAA4D;AACvE,WAAW,4DAA4D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE;AACpB,0BAA0B,EAAE;AAC5B,yBAAyB;AACzB,yBAAyB,EAAE;AAC3B,8BAA8B;AAC9B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,cAAc;AACd,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA,sBAAsB,EAAE;AACxB,qBAAqB,EAAE;AACvB;AACA;AACA,kBAAkB,EAAE,EAAE,EAAE;AACxB;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C,iDAAiD,EAAE;AACnD,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B,yBAAyB,GAAG;AAC5B,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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,6BAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qEAAqE;AACxG;AACA;AACA;AACA,yCAAyC,0BAA0B,8BAA8B,0BAA0B;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sBAAsB,oEAAgB;AACtC,2BAA2B,oEAAgB;AAC3C,8BAA8B,oEAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oEAAC,CAAC,4DAAI,GAAG,uCAAuC,EAAE,oEAAC,SAAS;AACxE;AACA,mBAAmB,EAAE,oEAAC,SAAS,sDAAsD,2BAA2B,oEAAC,SAAS,uBAAuB,EAAE,oEAAC,cAAc,oEAAC,2BAA2B,8WAA8W,IAAI,oEAAC,SAAS,6BAA6B,EAAE,oEAAC,cAAc,oEAAC,mBAAmB;AAC5nB;AACA;AACA,8TAA8T,iKAAiK,oEAAC,wBAAwB,gEAAgE,oBAAoB,qBAAqB,6BAA6B,2QAA2Q;AACz4B,6DAA6D,oEAAC,wBAAwB,gEAAgE,oBAAoB,qBAAqB,6BAA6B,2QAA2Q,OAAO,oEAAC,UAAU,iCAAiC,GAAG,oEAAC,SAAS,0BAA0B,EAAE,oEAAC,mBAAmB,6PAA6P,GAAG,oEAAC,mBAAmB,uOAAuO;AACllC;AACA,YAAY,QAAQ,oEAAU,OAAO;AACrC,yBAAyB;AACzB;AACA,IAAI;AACJ;AACA;;AAE8D","file":"x","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { M as MathEditor } from './index-d8fafc4f.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { T as TAB, d as ARROW_UP, c as ARROW_LEFT, e as ARROW_DOWN, A as ARROW_RIGHT, b as ENTER } from './constants-a06dfd18.js';\nimport './_commonjsHelpers-ba3f0406.js';\n\nconst mathTabListItems = [\n  { identifier: 'numbers', label: 'Numbers' },\n  { identifier: 'variables', label: 'Variables' },\n  { identifier: 'basics', label: 'Basics' },\n  { identifier: 'functions', label: 'Functions' },\n  { identifier: 'geometry', label: 'Geometry' },\n  { identifier: 'trigonometry', label: 'Trigonometry' },\n  { identifier: 'statistics', label: 'Statistics' },\n];\nvar letterCasing;\n(function (letterCasing) {\n  letterCasing[\"uppercaseLabel\"] = \"Show Uppercase Keys\";\n  letterCasing[\"lowercaseLabel\"] = \"Show Lowercase Keys\";\n})(letterCasing || (letterCasing = {}));\nconst footerButtons = {\n  cancel: { name: 'Cancel', ariaLabel: 'Cancel', identifier: 'cancel' },\n  insert: { name: 'Insert', ariaLabel: 'Insert', identifier: 'Insert' },\n};\nconst mappedIconName = {\n  'eulers-number': 'lowercase-e',\n  'imaginary-number': 'lowercase-i',\n};\nconst mathBranchExpressions = {\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  '0': '0',\n  'comma': ',',\n  'decimal': '.',\n  'lowercase-a': 'a',\n  'lowercase-b': 'b',\n  'lowercase-c': 'c',\n  'lowercase-d': 'd',\n  'lowercase-e': 'e',\n  'lowercase-f': 'f',\n  'lowercase-g': 'g',\n  'lowercase-h': 'h',\n  'lowercase-i': 'i',\n  'lowercase-j': 'j',\n  'lowercase-k': 'k',\n  'lowercase-l': 'l',\n  'lowercase-m': 'm',\n  'lowercase-n': 'n',\n  'lowercase-o': 'o',\n  'lowercase-p': 'p',\n  'lowercase-q': 'q',\n  'lowercase-r': 'r',\n  'lowercase-s': 's',\n  'lowercase-t': 't',\n  'lowercase-u': 'u',\n  'lowercase-v': 'v',\n  'lowercase-w': 'w',\n  'lowercase-x': 'x',\n  'lowercase-y': 'y',\n  'lowercase-z': 'z',\n  'uppercase-a': 'A',\n  'uppercase-b': 'B',\n  'uppercase-c': 'C',\n  'uppercase-d': 'D',\n  'uppercase-e': 'E',\n  'uppercase-f': 'F',\n  'uppercase-g': 'G',\n  'uppercase-h': 'H',\n  'uppercase-i': 'I',\n  'uppercase-j': 'J',\n  'uppercase-k': 'K',\n  'uppercase-l': 'L',\n  'uppercase-m': 'M',\n  'uppercase-n': 'N',\n  'uppercase-o': 'O',\n  'uppercase-p': 'P',\n  'uppercase-q': 'Q',\n  'uppercase-r': 'R',\n  'uppercase-s': 'S',\n  'uppercase-t': 'T',\n  'uppercase-u': 'U',\n  'uppercase-v': 'V',\n  'uppercase-w': 'W',\n  'uppercase-x': 'X',\n  'uppercase-y': 'Y',\n  'uppercase-z': 'Z',\n  'plus': '+',\n  'minus': '-',\n  'multiply': '\\\\times',\n  'dot-multiply': '\\\\cdot',\n  'divide': '\\\\div',\n  'left-parenth': '(',\n  'right-parenth': ')',\n  'pi': '\\\\pi',\n  'equal': '=',\n  'not-equal': '\\\\neq',\n  'approximately': '\\\\approx',\n  'plus-minus': '\\\\pm',\n  'less-than': '<',\n  'greater-than': '>',\n  'less-than-equal': '\\\\leq',\n  'greater-than-equal': '\\\\geq',\n  'unknown-equality': '\\\\unknownequality',\n  'similar': '\\\\sim',\n  'not-similar': '\\\\notsimilar',\n  'congruent-to': '\\\\cong',\n  'not-congruent-to': '\\\\notcongruentto',\n  'right-arrow': '\\\\rightarrow',\n  'degree': '\\\\degree',\n  'square': '^2',\n  'superscript': '^',\n  'subscript': '_{ },Left',\n  'overline': '\\\\overline{ },Left',\n  'fraction': '\\\\frac{}{},Left,Left',\n  'square-root': '\\\\sqrt{ },Left',\n  'square-root-1': '\\\\sqrt[]{},Left,Left',\n  'cube-root': '\\\\sqrt[3]{},Left',\n  'absolute-value': '|',\n  'infinity': '\\\\infty',\n  'left-bracket': '[',\n  'right-bracket': ']',\n  'braces': '{',\n  'angles': '\\\\langle{ },Left',\n  'ceiling': '\\\\lceil\\\\rceil,Left',\n  'floor': '\\\\lfloor\\\\rfloor,Left',\n  'function-of-x': '\\\\f\\\\left(x\\\\right)',\n  'inverse-function-of-x': '\\\\f^{-1}\\\\left(x\\\\right)',\n  'fog': 'f\\\\cdot g',\n  'e-to-the-nth': 'e^{ },Left',\n  'log-sub': '\\\\log_{ },Left',\n  'log': '\\\\log',\n  'ln': '\\\\ln',\n  'sum': '\\\\\\sum_{ }^{ },Left,Left',\n  'angle': '\\\\angle',\n  'angle-measure': '\\m\\\\angle ',\n  'parallel': '\\\\parallel',\n  'perpendicular': '\\\\perp',\n  'overline-right-arrow': '\\\\overrightarrow{ },Left',\n  'over-left-right-arrow': '\\\\overleftrightarrow{ }',\n  'over-frown': '\\\\overfrown{ }',\n  'left-right-arrow': '\\\\leftrightarrow',\n  'theta': '\\\\theta',\n  'prime': '\\'',\n  'double-prime': '\\'\\'',\n  'triple-prime': '\\'\\'\\'',\n  'triangle': '\\\\triangle',\n  'circle': '\\\\odot',\n  'parallelogram': '\\\\parallelogram',\n  'sin': '\\\\sin',\n  'cos': '\\\\cos',\n  'tan': '\\\\tan',\n  'csc': '\\\\csc',\n  'sec': '\\\\sec',\n  'cot': '\\\\cot',\n  'inverse-sin': '\\\\sin^{-1}',\n  'inverse-cos': '\\\\cos^{-1}',\n  'inverse-tan': '\\\\tan^{-1}',\n  'inverse-csc': '\\\\csc^{-1}',\n  'inverse-sec': '\\\\sec^{-1}',\n  'inverse-cot': '\\\\cot^{-1}',\n  'cis': 'cis',\n  'mu': '\\\\mu',\n  'sigma': '\\\\sigma',\n  'ncr': ' _{ }C_{ },Left,Left,Left,Left',\n  'npr': '_{ }P_{ },Left,Left,Left,Left',\n  'conditional-probability': '\\\\vert',\n  'factorial': '!',\n  'eulers-number': 'e',\n  'imaginary-number': 'i',\n};\nconst mathBranchExpressionsAriaLabel = {\n  '1': 'One',\n  '2': 'Two',\n  '3': 'Three',\n  '4': 'Four',\n  '5': 'Five',\n  '6': 'Six',\n  '7': 'Seven',\n  '8': 'Eight',\n  '9': 'Nine',\n  '0': 'Zero',\n  'comma': 'Comma',\n  'decimal': 'Decimal',\n  'lowercase-a': 'Lowercase a',\n  'lowercase-b': 'Lowercase b',\n  'lowercase-c': 'Lowercase c',\n  'lowercase-d': 'Lowercase d',\n  'lowercase-e': 'Lowercase e',\n  'lowercase-f': 'Lowercase f',\n  'lowercase-g': 'Lowercase g',\n  'lowercase-h': 'Lowercase h',\n  'lowercase-i': 'Lowercase i',\n  'lowercase-j': 'Lowercase j',\n  'lowercase-k': 'Lowercase k',\n  'lowercase-l': 'Lowercase l',\n  'lowercase-m': 'Lowercase m',\n  'lowercase-n': 'Lowercase n',\n  'lowercase-o': 'Lowercase o',\n  'lowercase-p': 'Lowercase p',\n  'lowercase-q': 'Lowercase q',\n  'lowercase-r': 'Lowercase r',\n  'lowercase-s': 'Lowercase s',\n  'lowercase-t': 'Lowercase t',\n  'lowercase-u': 'Lowercase u',\n  'lowercase-v': 'Lowercase v',\n  'lowercase-w': 'Lowercase w',\n  'lowercase-x': 'Lowercase x',\n  'lowercase-y': 'Lowercase y',\n  'lowercase-z': 'Lowercase z',\n  'uppercase-a': 'Uppercase A',\n  'uppercase-b': 'Uppercase B',\n  'uppercase-c': 'Uppercase C',\n  'uppercase-d': 'Uppercase D',\n  'uppercase-e': 'Uppercase E',\n  'uppercase-f': 'Uppercase F',\n  'uppercase-g': 'Uppercase G',\n  'uppercase-h': 'Uppercase H',\n  'uppercase-i': 'Uppercase I',\n  'uppercase-j': 'Uppercase J',\n  'uppercase-k': 'Uppercase K',\n  'uppercase-l': 'Uppercase L',\n  'uppercase-m': 'Uppercase M',\n  'uppercase-n': 'Uppercase N',\n  'uppercase-o': 'Uppercase O',\n  'uppercase-p': 'Uppercase P',\n  'uppercase-q': 'Uppercase Q',\n  'uppercase-r': 'Uppercase R',\n  'uppercase-s': 'Uppercase S',\n  'uppercase-t': 'Uppercase T',\n  'uppercase-u': 'Uppercase U',\n  'uppercase-v': 'Uppercase V',\n  'uppercase-w': 'Uppercase W',\n  'uppercase-x': 'Uppercase X',\n  'uppercase-y': 'Uppercase Y',\n  'uppercase-z': 'Uppercase Z',\n  'plus': 'Plus',\n  'minus': 'Minus',\n  'multiply': 'Multiply',\n  'dot-multiply': 'Dot Multiply',\n  'divide': 'Divide',\n  'left-parenth': 'Left Parenthesis',\n  'right-parenth': 'Right Parenthesis',\n  'pi': 'Pi',\n  'equal': 'Equal',\n  'not-equal': 'Not Equal',\n  'approximately': 'Approximately',\n  'plus-minus': 'Plus or Minus',\n  'less-than': 'Less Than',\n  'greater-than': 'Greater Than',\n  'less-than-equal': 'Less Than Equal',\n  'greater-than-equal': 'Greater Than Equal',\n  'unknown-equality': 'Unknown Equality',\n  'similar': 'Similar',\n  'not-similar': 'Not Similar',\n  'congruent-to': 'Congruent To',\n  'not-congruent-to': 'Not Congruent To',\n  'right-arrow': 'Right Arrow',\n  'degree': 'Degree',\n  'square': 'Square',\n  'superscript': 'Superscript',\n  'subscript': 'Subscript',\n  'overline': 'Overline',\n  'fraction': 'Fraction',\n  'square-root': 'Square Root',\n  'square-root-1': 'Nth Root',\n  'cube-root': 'Cube Root',\n  'absolute-value': 'Absolute Value',\n  'infinity': 'Infinity',\n  'left-bracket': 'Left Bracket',\n  'right-bracket': 'Right Bracket',\n  'braces': 'Braces',\n  'angles': 'Angles',\n  'ceiling': 'Ceiling',\n  'floor': 'Floor',\n  'function-of-x': 'Function Of X',\n  'inverse-function-of-x': 'Inverse Function Of X',\n  'fog': 'Composite F of G',\n  'e-to-the-nth': 'Exponent',\n  'log-sub': 'Log Subscript',\n  'log': 'Log',\n  'ln': 'Natural Logarithm',\n  'sum': 'Sum',\n  'angle': 'Angle',\n  'angle-measure': 'Angle Measure',\n  'parallel': 'Parallel',\n  'perpendicular': 'Perpendicular',\n  'overline-right-arrow': 'Over Right Arrow',\n  'over-left-right-arrow': 'Over Left Right Arrow',\n  'over-frown': 'Over Frown',\n  'left-right-arrow': 'Left Right Arrow',\n  'theta': 'Theta',\n  'prime': 'Prime',\n  'double-prime': 'Double Prime',\n  'triple-prime': 'Triple Prime',\n  'triangle': 'Triangle',\n  'circle': 'Circle',\n  'parallelogram': 'Parallelogram',\n  'sin': 'Sine',\n  'cos': 'Cosine',\n  'tan': 'Tangent',\n  'csc': 'Cosecant',\n  'sec': 'Secant',\n  'cot': 'Cotangent',\n  'inverse-sin': 'Inverse Sine',\n  'inverse-cos': 'Inverse Cosine',\n  'inverse-tan': 'Inverse Tangent',\n  'inverse-csc': 'Inverse Cosecant',\n  'inverse-sec': 'Inverse Secant',\n  'inverse-cot': 'Inverse Cotangent',\n  'cis': 'Cosine i Sine',\n  'mu': 'Mu',\n  'sigma': 'Sigma',\n  'ncr': 'nCr',\n  'npr': 'nPr',\n  'conditional-probability': 'Conditional Probability',\n  'factorial': 'Factorial',\n  'eulers-number': 'Eulers Number',\n  'imaginary-number': 'Imaginary Number'\n};\nconst lowercaseAlphabet = ['lowercase-a', 'lowercase-b', 'lowercase-c', 'lowercase-d', 'lowercase-e', 'lowercase-f', 'lowercase-g', 'lowercase-h', 'lowercase-i', 'lowercase-j', 'lowercase-k', 'lowercase-l', 'lowercase-m', 'lowercase-n', 'lowercase-o', 'lowercase-p', 'lowercase-q', 'lowercase-r', 'lowercase-s', 'lowercase-t', 'lowercase-u', 'lowercase-v', 'lowercase-w', 'lowercase-x', 'lowercase-y', 'lowercase-z'];\nconst uppercaseAlphabet = ['uppercase-a', 'uppercase-b', 'uppercase-c', 'uppercase-d', 'uppercase-e', 'uppercase-f', 'uppercase-g', 'uppercase-h', 'uppercase-i', 'uppercase-j', 'uppercase-k', 'uppercase-l', 'uppercase-m', 'uppercase-n', 'uppercase-o', 'uppercase-p', 'uppercase-q', 'uppercase-r', 'uppercase-s', 'uppercase-t', 'uppercase-u', 'uppercase-v', 'uppercase-w', 'uppercase-x', 'uppercase-y', 'uppercase-z'];\n// The expressions commented out are currently not supported by MathQuill/MathLib\nconst mathBranchOperation = {\n  numbers: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'comma', 'decimal'],\n  variables: [{ lowercase: [...lowercaseAlphabet], uppercase: [...uppercaseAlphabet] }],\n  basics: ['plus', 'minus', 'multiply', 'divide', 'pi', 'equal', 'not-equal', 'approximately', 'dot-multiply', 'plus-minus', 'less-than', 'greater-than', 'less-than-equal', 'greater-than-equal', /* 'unknown-equality', */ 'similar', /* 'not-similar', */ 'congruent-to', /* 'not-congruent-to', */ 'right-arrow', 'degree', 'square', 'superscript', 'subscript', /* 'overline',*/ 'fraction', 'square-root', 'cube-root', 'square-root-1', 'absolute-value', 'infinity'],\n  functions: ['left-parenth', 'right-parenth', 'left-bracket', 'right-bracket', 'braces', /*'angles'*/ , 'ceiling', 'floor', 'comma', 'function-of-x', 'inverse-function-of-x', 'fog', 'eulers-number', 'e-to-the-nth', 'superscript', 'subscript', , 'log', 'log-sub', 'ln', 'sum'],\n  geometry: ['angle', 'angle-measure', 'parallel', 'perpendicular', /*'overline'*/ , 'overline-right-arrow', /* 'over-left-right-arrow', */ /* 'over-frown', */ 'right-arrow', 'left-right-arrow', 'theta', 'degree', 'prime', 'double-prime', 'triple-prime', 'triangle', 'circle', /* 'parallelogram' */],\n  trigonometry: ['sin', 'cos', 'tan', 'theta', 'inverse-sin', 'inverse-cos', 'inverse-tan', 'degree', 'csc', 'sec', 'cot', 'pi', 'inverse-csc', 'inverse-sec', 'inverse-cot', 'imaginary-number', 'cis', 'fraction'],\n  statistics: ['braces', 'comma', 'mu', 'sigma', 'ncr', 'npr', 'conditional-probability', 'factorial', /*'overline',*/ 'sum'],\n};\nconst expressionsWithKeyboardInteraction = [\n  'superscript',\n  'subscript',\n  'overline',\n  'fraction',\n  'square-root',\n  'square-root-1',\n  'cube-root',\n  'absolute-value',\n  'left-parenth',\n  'left-bracket',\n  'braces',\n  'angles',\n  'ceiling',\n  'floor',\n  'e-to-the-nth',\n  'log-sub',\n  'sum',\n  'overline-right-arrow',\n  'over-left-right-arrow',\n  'over-frown',\n  'sin',\n  'cos',\n  'tan',\n  'csc',\n  'sec',\n  'cot',\n  'cis',\n  'inverse-sin',\n  'inverse-cos',\n  'inverse-tan',\n  'inverse-csc',\n  'inverse-sec',\n  'inverse-cot',\n  'ncr',\n  'npr',\n];\n\nconst celRichTextMathKeypadCss = \"@font-face{font-family:Symbola;src:url(font/Symbola.eot);src:local(\\\"Symbola Regular\\\"), local(\\\"Symbola\\\"), url(font/Symbola.woff2) format(\\\"woff2\\\"), url(font/Symbola.woff) format(\\\"woff\\\"), url(font/Symbola.ttf) format(\\\"truetype\\\"), url(font/Symbola.otf) format(\\\"opentype\\\"), url(font/Symbola.svg#Symbola) format(\\\"svg\\\")}.mq-editable-field{display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor{border-left:1px solid black;margin-left:-1px;position:relative;z-index:1;padding:0;display:-moz-inline-box;display:inline-block}.mq-editable-field .mq-cursor.mq-blink{visibility:hidden}.mq-editable-field,.mq-math-mode .mq-editable-field{border:1px solid gray}.mq-editable-field.mq-focused,.mq-math-mode .mq-editable-field.mq-focused{-webkit-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;-moz-box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;box-shadow:#8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;border-color:#709AC0;border-radius:1px}.mq-math-mode .mq-editable-field{margin:1px}.mq-editable-field .mq-latex-command-input{color:inherit;font-family:\\\"Courier New\\\", monospace;border:1px solid gray;padding-right:1px;margin-right:1px;margin-left:2px}.mq-editable-field .mq-latex-command-input.mq-empty{background:transparent}.mq-editable-field .mq-latex-command-input.mq-hasCursor{border-color:ActiveBorder}.mq-editable-field.mq-empty:after,.mq-editable-field.mq-text-mode:after,.mq-math-mode .mq-empty:after{visibility:hidden;content:'c'}.mq-editable-field .mq-cursor:only-child:after,.mq-editable-field .mq-textarea+.mq-cursor:last-child:after{visibility:hidden;content:'c'}.mq-editable-field .mq-text-mode .mq-cursor:only-child:after{content:''}.mq-editable-field.mq-text-mode{overflow-x:auto;overflow-y:hidden}.mq-root-block,.mq-math-mode .mq-root-block{display:-moz-inline-box;display:inline-block;width:100%;padding:2px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle}.mq-math-mode{font-variant:normal;font-weight:normal;font-style:normal;font-size:115%;line-height:1;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-non-leaf,.mq-math-mode .mq-scaled{display:-moz-inline-box;display:inline-block}.mq-math-mode var,.mq-math-mode .mq-text-mode,.mq-math-mode .mq-nonSymbola{font-family:\\\"Times New Roman\\\", Symbola, serif;line-height:.9}.mq-math-mode *{font-size:inherit;line-height:inherit;margin:0;padding:0;border-color:black;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box}.mq-math-mode .mq-empty{background:#ccc}.mq-math-mode .mq-empty.mq-root-block{background:transparent}.mq-math-mode.mq-empty{background:transparent}.mq-math-mode .mq-text-mode{display:inline-block}.mq-math-mode .mq-text-mode.mq-hasCursor{-webkit-box-shadow:inset darkgray 0 .1em .2em;box-shadow:inset darkgray 0 .1em .2em;padding:0 .1em;margin:0 -0.1em;min-width:1ex}.mq-math-mode .mq-font{font:1em \\\"Times New Roman\\\", Symbola, serif}.mq-math-mode .mq-font *{font-family:inherit;font-style:inherit}.mq-math-mode b,.mq-math-mode b.mq-font{font-weight:bolder}.mq-math-mode var,.mq-math-mode i,.mq-math-mode i.mq-font{font-style:italic}.mq-math-mode var.mq-f{margin-right:0.2em;margin-left:0.1em}.mq-math-mode .mq-roman var.mq-f{margin:0}.mq-math-mode big{font-size:200%}.mq-math-mode .mq-int>big{display:inline-block;-webkit-transform:scaleX(0.7);-moz-transform:scaleX(0.7);-ms-transform:scaleX(0.7);-o-transform:scaleX(0.7);transform:scaleX(0.7);vertical-align:-0.16em}.mq-math-mode .mq-int>.mq-supsub{font-size:80%;vertical-align:-1.1em;padding-right:.2em}.mq-math-mode .mq-int>.mq-supsub>.mq-sup>.mq-sup-inner{vertical-align:1.3em}.mq-math-mode .mq-int>.mq-supsub>.mq-sub{margin-left:-0.35em}.mq-math-mode .mq-roman{font-style:normal}.mq-math-mode .mq-sans-serif{font-family:sans-serif, Symbola, serif}.mq-math-mode .mq-monospace{font-family:monospace, Symbola, serif}.mq-math-mode .mq-overline{border-top:1px solid black;margin-top:1px}.mq-math-mode .mq-underline{border-bottom:1px solid black;margin-bottom:1px}.mq-math-mode .mq-binary-operator{padding:0 0.2em;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-supsub{text-align:left;font-size:90%;vertical-align:-0.5em}.mq-math-mode .mq-supsub.mq-sup-only{vertical-align:.5em}.mq-math-mode .mq-supsub.mq-sup-only .mq-sup{display:inline-block;vertical-align:text-bottom}.mq-math-mode .mq-supsub .mq-sup{display:block}.mq-math-mode .mq-supsub .mq-sub{display:block;float:left}.mq-math-mode .mq-supsub .mq-binary-operator{padding:0 .1em}.mq-math-mode .mq-supsub .mq-fraction{font-size:70%}.mq-math-mode sup.mq-nthroot{font-size:80%;vertical-align:0.8em;margin-right:-0.6em;margin-left:.2em;min-width:.5em}.mq-math-mode .mq-paren{padding:0 .1em;vertical-align:top;-webkit-transform-origin:center .06em;-moz-transform-origin:center .06em;-ms-transform-origin:center .06em;-o-transform-origin:center .06em;transform-origin:center .06em}.mq-math-mode .mq-paren.mq-ghost{color:silver}.mq-math-mode .mq-paren+span{margin-top:.1em;margin-bottom:.1em}.mq-math-mode .mq-array{vertical-align:middle;text-align:center}.mq-math-mode .mq-array>span{display:block}.mq-math-mode .mq-operator-name{font-family:Symbola, \\\"Times New Roman\\\", serif;line-height:.9;font-style:normal}.mq-math-mode var.mq-operator-name.mq-first{padding-left:.2em}.mq-math-mode var.mq-operator-name.mq-last,.mq-math-mode .mq-supsub.mq-after-operator-name{padding-right:.2em}.mq-math-mode .mq-fraction{font-size:90%;text-align:center;vertical-align:-0.4em;padding:0 .2em}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link{display:-moz-groupbox}.mq-math-mode .mq-fraction,.mq-math-mode .mq-large-operator,.mq-math-mode x:-moz-any-link,.mq-math-mode x:default{display:inline-block}.mq-math-mode .mq-numerator,.mq-math-mode .mq-denominator{display:block}.mq-math-mode .mq-numerator{padding:0 0.1em}.mq-math-mode .mq-denominator{border-top:1px solid;float:right;width:100%;padding:0.1em}.mq-math-mode .mq-sqrt-prefix{padding-top:0;position:relative;top:0.1em;vertical-align:top;-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;-o-transform-origin:top;transform-origin:top}.mq-math-mode .mq-sqrt-stem{border-top:1px solid;margin-top:1px;padding-left:.15em;padding-right:.2em;margin-right:.1em;padding-top:1px}.mq-math-mode .mq-vector-prefix{display:block;text-align:center;line-height:.25em;margin-bottom:-0.1em;font-size:0.75em}.mq-math-mode .mq-vector-stem{display:block}.mq-math-mode .mq-large-operator{vertical-align:-0.2em;padding:.2em;text-align:center}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator big,.mq-math-mode .mq-large-operator .mq-to{display:block}.mq-math-mode .mq-large-operator .mq-from,.mq-math-mode .mq-large-operator .mq-to{font-size:80%}.mq-math-mode .mq-large-operator .mq-from{float:right;width:100%}.mq-math-mode,.mq-math-mode .mq-editable-field{cursor:text;font-family:Symbola, \\\"Times New Roman\\\", serif}.mq-math-mode .mq-overarrow{border-top:1px solid black;margin-top:1px;padding-top:0.2em}.mq-math-mode .mq-overarrow:before{display:block;position:relative;top:-0.34em;font-size:0.5em;line-height:0em;content:'\\\\27A4';text-align:right}.mq-math-mode .mq-overarrow.mq-arrow-left:before{-moz-transform:scaleX(-1);-o-transform:scaleX(-1);-webkit-transform:scaleX(-1);transform:scaleX(-1);-webkit-filter:FlipH;filter:FlipH;-ms-filter:\\\"FlipH\\\"}.mq-math-mode .mq-selection,.mq-editable-field .mq-selection,.mq-math-mode .mq-selection .mq-non-leaf,.mq-editable-field .mq-selection .mq-non-leaf,.mq-math-mode .mq-selection .mq-scaled,.mq-editable-field .mq-selection .mq-scaled{background:#B4D5FE !important;background:Highlight !important;color:HighlightText;border-color:HighlightText}.mq-math-mode .mq-selection .mq-matrixed,.mq-editable-field .mq-selection .mq-matrixed{background:#39F !important}.mq-math-mode .mq-selection .mq-matrixed-container,.mq-editable-field .mq-selection .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='#3399FF') !important}.mq-math-mode .mq-selection.mq-blur,.mq-editable-field .mq-selection.mq-blur,.mq-math-mode .mq-selection.mq-blur .mq-non-leaf,.mq-editable-field .mq-selection.mq-blur .mq-non-leaf,.mq-math-mode .mq-selection.mq-blur .mq-scaled,.mq-editable-field .mq-selection.mq-blur .mq-scaled,.mq-math-mode .mq-selection.mq-blur .mq-matrixed,.mq-editable-field .mq-selection.mq-blur .mq-matrixed{background:#D4D4D4 !important;color:black;border-color:black}.mq-math-mode .mq-selection.mq-blur .mq-matrixed-container,.mq-editable-field .mq-selection.mq-blur .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='#D4D4D4') !important}.mq-editable-field .mq-textarea,.mq-math-mode .mq-textarea{position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.mq-editable-field .mq-textarea *,.mq-math-mode .mq-textarea *,.mq-editable-field .mq-selectable,.mq-math-mode .mq-selectable{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;position:absolute;clip:rect(1em 1em 1em 1em);-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0);resize:none;width:1px;height:1px}.mq-math-mode .mq-matrixed{background:white;display:-moz-inline-box;display:inline-block}.mq-math-mode .mq-matrixed-container{filter:progid:DXImageTransform.Microsoft.Chroma(color='white');margin-top:-0.1em}.lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block}.mq-textarea *{-webkit-transform:none !important;transform:none !important}.keypad-holder{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tab-section{display:block}.tab-section .math-options-tab{--cel-sub-nav-item-btn-background:#f3f3f3;--cel-sub-nav-item-btn-border-bottom:3px solid #f3f3f3}.math-icons-holder{display:-ms-flexbox;display:flex;margin:0 4px 4px 4px;height:178px;-ms-flex-align:start;align-items:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-ms-flex-negative:0;flex-shrink:0;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;background-color:#fff;border:1px solid #d8d8d8;border-radius:2px}.letter-case-toggle-button-not-loaded{display:none}.letter-case-toggle-button-is-loaded{--button-border-radius:5px;--button-height:46px;--button-padding:16px;--button-border-radius:5px;--button-text-size:20px;--button-font-family:Poppins-Italic;--outlineLabel-color:#000;--outline-button-bg-color:#f3f3f3;--outline-border-color:#f3f3f3;--outline-button-font-color-hover:#fff;--outline-button-bg-color-hover:#006be0;display:inline;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.expression-icon{display:grid;margin:1px;--solid-button-bg-color:#fff;--solid-label-color:#000;--solid-button-border-radius:5px;--solid-button-outline-color:none;--icon-button-bg-color:#fff;--icon-button-border-radius:5px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--cel-icon-width:36px;--cel-icon-height:36px}.mq-editable-field{font-family:var(--math-keypad-font-family, OpenSans);font-size:var(--math-keypad-font-size, 1rem);color:#333}.math-equation-section.mq-editable-field.mq-focused{-webkit-box-shadow:none;box-shadow:none;border-color:#333;outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:var(--focus-ring-outline-offset, -4px)}.math-equation-section .mq-root-block{overflow:auto;min-height:92px;height:92px;padding:6px;}.math-equation-section .mq-root-block *{font-size:inherit !important;font-style:inherit !important;font-family:OpenSans !important}.math-equation-section .mq-root-block:focus{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:-2px}.math-equation-section{width:calc(100% - 8px);height:100%;margin:0 4px;background-color:#fff;border-radius:2px;border:1px solid #333;padding:2px}.footer-section{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:start;align-items:flex-start;padding:4px;gap:4px}.activity-icons{border-radius:var(--button-border-radius, 5px);font-weight:500;--button-padding:4px;--button-height:36px;--button-text-size:16px;--button-font-family:Poppins-Medium}.activity-icons.cancel{--button-min-width:80px;--button-width:82px}.activity-icons.done{--button-min-width:72px;--solid-button-bg-color:#006be0;--solid-label-color:#fff;--solid-button-hover-bg-color:#2150a3}.mobile-view-keypad .math-icons-holder{height:48px}.mobile-view-keypad .mq-math-mode .mq-root-block{height:100%;min-height:40px;max-height:83px}.mq-math-mode{font-size:100%}.keypad-holder .mq-math-mode .mq-scaled{display:-ms-inline-flexbox;display:inline-flex;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}\";\n\nconst MQ = MathEditor.getInterface();\nconst CelRichTextMathKeypad = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mathKeypadClose = createEvent(this, \"celRichTextMathKeypadClose\", 7);\n    this.selectedMathBranchExpression = [];\n    this.selectedBranchName = 'numbers';\n    this.selectedVariableCase = 'lowercase';\n    this.variablesToggleButtonText = 'ABC';\n    this.buttonPressedText = '';\n    this.lastSelectedExpressionIndex = 0;\n    this.lastFocusedCategory = '';\n    this.latex = '';\n    this.celIconBaseUrl = undefined;\n    this.keypadMobileView = false;\n    this.keypadLeftArrowDisabledLabel = '';\n    this.keypadRightArrowDisabledLabel = '';\n  }\n  handleCelSubNavigationItemClick(eventObj) {\n    this.handleMathTypeSelection(eventObj.detail.identifier);\n  }\n  /* Added the following code in order to handle the '$' hot key causing switch between the text mode and math mode in the mathQuill editor.\n    Since user may use in certain cases $ symbol from the keyboard input as we are allowing free user inputs from keyboard for the mathQuill textarea.\n  */\n  handleKeyDown(event) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const allFocusableElements = Array.from(this.componentEl.querySelectorAll('.expression-icon'));\n    const currentIndex = allFocusableElements.indexOf(event.target);\n    const nextIndex = (currentIndex + 1) % allFocusableElements.length;\n    const previousIndex = (currentIndex - 1 + allFocusableElements.length) % allFocusableElements.length;\n    const focusedElement = document.activeElement;\n    switch (event.key) {\n      /* Added the following code in order to handle the '$' hot key causing switch between the text mode and math mode in the mathQuill editor.\n      Since user may use in certain cases $ symbol from the keyboard input as we are allowing free user inputs from keyboard for the mathQuill textarea.\n      */\n      case ('$'):\n        event.preventDefault();\n        this.mathFieldEditor.write('\\\\$');\n        break;\n      // Ensures that focus is brought back to last selected element when text area is auto focused.\n      // Few expressions auto focus on text area when enterkey is pressed.\n      case ENTER:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          this.lastSelectedExpressionIndex = currentIndex;\n        }\n        break;\n      //Arrow key functionality for expressions in the math keypad only\n      case ARROW_RIGHT:\n      case ARROW_DOWN:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          const nextControl = allFocusableElements[nextIndex];\n          event.preventDefault();\n          (_b = (_a = nextControl === null || nextControl === void 0 ? void 0 : nextControl.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('button')) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        break;\n      case ARROW_LEFT:\n      case ARROW_UP:\n        if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n          const previousControl = allFocusableElements[previousIndex];\n          event.preventDefault();\n          (_d = (_c = previousControl === null || previousControl === void 0 ? void 0 : previousControl.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('button')) === null || _d === void 0 ? void 0 : _d.focus();\n        }\n        break;\n      case TAB:\n        //Handle when tab is pressed when in the expressions, focus should go to the textarea\n        if (!event.shiftKey) {\n          if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n            event.preventDefault();\n            const nextSectionItem = this.paletteTextArea;\n            nextSectionItem === null || nextSectionItem === void 0 ? void 0 : nextSectionItem.focus();\n            this.lastSelectedExpressionIndex = currentIndex;\n          }\n          // Prevents cursor from moving within text area when tabbing.\n          else if (event.target === this.paletteTextArea) {\n            event.preventDefault();\n            this.mathRootBlock.focus();\n          }\n          // Prevents focus moving back to text area and ensures cancel button is focused\n          else if (event.target === this.mathRootBlock) {\n            event.preventDefault();\n            const contentField = (_g = (_f = (_e = this.componentEl) === null || _e === void 0 ? void 0 : _e.querySelector('.cancel')) === null || _f === void 0 ? void 0 : _f.shadowRoot) === null || _g === void 0 ? void 0 : _g.querySelector('.button');\n            contentField.focus();\n          }\n        }\n        //Handle When shift+tab is pressed when in the textbox, focus should go back to the last selected expression\n        else if (event.key === 'Tab' && event.shiftKey) {\n          if (focusedElement == this.paletteTextArea) {\n            event.preventDefault();\n            const lastSelectedExpression = allFocusableElements[this.lastSelectedExpressionIndex];\n            (_j = (_h = lastSelectedExpression === null || lastSelectedExpression === void 0 ? void 0 : lastSelectedExpression.shadowRoot) === null || _h === void 0 ? void 0 : _h.querySelector('button')) === null || _j === void 0 ? void 0 : _j.focus();\n          }\n          // Shift focus back to the expression category on SHIFT + TAB\n          else if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n            event.preventDefault();\n            const isVariableToggleButton = this.componentEl.querySelector('.letter-case-toggle-button-is-loaded');\n            if (isVariableToggleButton) {\n              isVariableToggleButton.shadowRoot.querySelector('button').focus();\n            }\n            else {\n              this.focusMathCategoryItem();\n            }\n          }\n          else if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('letter-case-toggle-button-is-loaded')) {\n            event.preventDefault();\n            this.focusMathCategoryItem();\n          }\n        }\n        break;\n      //do nothing\n    }\n  }\n  //Support for last selected expression when returning to the expressions from the textarea\n  handleTouch(event) {\n    var _a, _b;\n    const allFocusableElements = Array.from(this.componentEl.querySelectorAll('.expression-icon'));\n    const currentIndex = allFocusableElements.indexOf(event.target);\n    const focusedElement = document.activeElement;\n    if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('expression-icon')) {\n      //Set the last selected expression index when an expression is selected\n      if (this.lastFocusedCategory === 'textarea') {\n        const lastSelectedExpression = allFocusableElements[this.lastSelectedExpressionIndex];\n        (_b = (_a = lastSelectedExpression === null || lastSelectedExpression === void 0 ? void 0 : lastSelectedExpression.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('button')) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n      this.lastSelectedExpressionIndex = currentIndex;\n      this.lastFocusedCategory = 'expressions';\n    }\n    if (focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.classList.contains('mq-root-block')) {\n      this.lastFocusedCategory = 'textarea';\n    }\n  }\n  handleCelButtonOnClick(eventObj) {\n    var _a;\n    const { detail: { id: buttonType } } = eventObj;\n    setTimeout(() => {\n      this.buttonPressedText = '';\n    });\n    switch (buttonType) {\n      case footerButtons.cancel.identifier:\n        this.mathKeypadClose.emit({ origin: 'close', latex: '' });\n        break;\n      case footerButtons.insert.identifier:\n        // Added the following code in order to ensure that latex command provided without any values through keyboard input are inserted e.g. '\\sqrt'\n        const inputModeElement = (_a = this.mathRootBlock) === null || _a === void 0 ? void 0 : _a.querySelector('.mq-latex-command-input');\n        if (inputModeElement) {\n          this.mathFieldEditor.keystroke('Tab');\n        }\n        this.mathKeypadClose.emit({ origin: 'save', latex: this.componentEl.getAttribute('data-latex') });\n        break;\n      case \"toggle-button\":\n        this.toggleVariableCase();\n        this.buttonPressedText = `Show ${this.selectedVariableCase} keys button pressed` + `,\\n${this.selectedVariableCase} variables are showing`;\n        break;\n      default:\n        if (buttonType === undefined || buttonType === '') {\n          //Do nothing when button identifier is null. Handles button click triggered from cel-sub-navigation\n          break;\n        }\n        if (this.selectedMathBranchExpression.includes(buttonType)) {\n          this.handleSelectedKeypadExpression(mathBranchExpressions[buttonType]);\n          this.buttonPressedText = `${mathBranchExpressionsAriaLabel[buttonType]} button pressed`;\n          if (expressionsWithKeyboardInteraction.includes(buttonType)) {\n            this.mathFieldEditor.focus();\n          }\n          break;\n        }\n        else if (this.selectedMathBranchExpression[0][this.selectedVariableCase].includes(buttonType)) {\n          this.handleSelectedKeypadExpression(mathBranchExpressions[buttonType]);\n          this.buttonPressedText = `${mathBranchExpressionsAriaLabel[buttonType]} button pressed`;\n          break;\n        }\n        break;\n    }\n  }\n  //Scrolls equations into view when uses keypad to input a long equation.\n  handleLatexChange() {\n    const cursor = this.componentEl.querySelector('.mq-cursor');\n    cursor.scrollIntoView();\n  }\n  handleSelectedKeypadExpression(latexExpression) {\n    if (latexExpression === ',') {\n      this.mathFieldEditor.write(latexExpression);\n    }\n    else {\n      latexExpression.split(',').forEach(_latex => {\n        let latex = _latex.trim();\n        if (latex.length === 1) {\n          this.mathFieldEditor.cmd(latex);\n        }\n        else if (latex === 'Left' || latex === 'Right') {\n          this.mathFieldEditor.keystroke(latex);\n        }\n        else {\n          this.mathFieldEditor.write(latex);\n        }\n      });\n    }\n  }\n  connectedCallback() {\n    this.cel_button = transformTagName('cel-button', 'cel-rich-text-math-keypad', this.el);\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-rich-text-math-keypad', this.el);\n    this.cel_sub_navigation = transformTagName('cel-sub-navigation', 'cel-rich-text-math-keypad', this.el);\n  }\n  componentDidLoad() {\n    var _a, _b, _c, _d;\n    let mathField = this.componentEl.querySelector(\".math-equation-section\");\n    this.mathFieldEditor = MQ.MathField(mathField, {\n      spaceBehavesLikeTab: false,\n      handlers: {\n        edit: () => {\n          const currentLaTexExpression = this.mathFieldEditor.latex();\n          this.componentEl.setAttribute('data-latex', currentLaTexExpression);\n        },\n      }\n    });\n    this.mathFieldEditor.latex(this.latex);\n    this.paletteTextArea = (_a = this.componentEl) === null || _a === void 0 ? void 0 : _a.querySelector('.mq-textarea > textarea');\n    this.mathRootBlock = (_b = this.componentEl) === null || _b === void 0 ? void 0 : _b.querySelector('.mq-root-block');\n    (_c = this.paletteTextArea) === null || _c === void 0 ? void 0 : _c.setAttribute('aria-label', 'Math Input Field');\n    (_d = this.mathRootBlock) === null || _d === void 0 ? void 0 : _d.setAttribute('tabindex', '0');\n  }\n  componentWillLoad() {\n    this.handleMathTypeSelection(mathTabListItems[0].identifier);\n  }\n  handleMathTypeSelection(buttonType) {\n    this.selectedBranchName = buttonType;\n    this.selectedMathBranchExpression = mathBranchOperation[buttonType];\n  }\n  formImageSource(name) {\n    return (`../assets/math-palette-icons/${this.getIconName(name)}.svg`);\n  }\n  getIconName(iconName) {\n    return mappedIconName[iconName] ? mappedIconName[iconName] : iconName;\n  }\n  focusMathCategoryItem() {\n    const mathOptionsTab = this.componentEl.querySelector('.math-options-tab');\n    const activeMathTypeButton = mathOptionsTab.shadowRoot.querySelector('.active-item > button');\n    activeMathTypeButton.focus();\n  }\n  toggleVariableCase() {\n    if (this.selectedVariableCase == 'uppercase') {\n      this.selectedVariableCase = 'lowercase';\n      this.variablesToggleButtonText = 'ABC';\n    }\n    else {\n      this.selectedVariableCase = 'uppercase';\n      this.variablesToggleButtonText = 'abc';\n    }\n  }\n  render() {\n    return (h(Host, { ref: (el) => (this.componentEl = el) }, h(\"div\", { class: ['keypad-holder',\n        this.keypadMobileView ? 'mobile-view-keypad' : ''\n      ].join(' ') }, h(\"div\", { class: 'cel-visually-hidden', \"aria-live\": 'polite' }, this.buttonPressedText), h(\"div\", { class: 'tab-section' }, h(\"div\", null, h(this.cel_sub_navigation, { class: 'math-options-tab', itemList: mathTabListItems, \"data-cel-icon-base-url\": this.celIconBaseUrl, \"data-horizontal-scroll-value\": 80, activeId: mathTabListItems[0].identifier, keypadLeftArrowDisabledLabel: true, \"data-next-button-disabled-tooltip\": this.keypadRightArrowDisabledLabel, \"data-previous-button-disabled-tooltip\": this.keypadLeftArrowDisabledLabel })), h(\"div\", { class: 'math-icons-holder' }, h(\"div\", null, h(this.cel_button, { class: [\n        'letter-case-toggle-button-not-loaded',\n        this.selectedBranchName === 'variables' ? 'letter-case-toggle-button-is-loaded' : ''\n      ].join(' '), \"data-title\": this.selectedVariableCase === 'uppercase' ? letterCasing.lowercaseLabel : letterCasing.uppercaseLabel, \"data-label\": this.variablesToggleButtonText, \"data-identifier\": 'toggle-button', \"data-toggle\": 'false', \"data-variant\": 'outline', \"data-send-target-info-on-button-click\": 'true' })), this.selectedBranchName === 'variables' ? (this.selectedMathBranchExpression.map((expression) => (expression[this.selectedVariableCase].map((expression) => (h(this.cel_icon_button, { class: 'expression-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}math-palette-icons/${this.getIconName(expression)}.svg` : this.formImageSource(expression), \"data-label\": expression, \"data-padding\": '5px', \"data-size\": 'mlarge', \"data-icon-button-aria-label\": mathBranchExpressionsAriaLabel[expression], \"data-send-target-info-on-button-click\": true, \"data-identifier\": expression })))))) :\n      this.selectedMathBranchExpression.map((expression) => (h(this.cel_icon_button, { class: 'expression-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}math-palette-icons/${this.getIconName(expression)}.svg` : this.formImageSource(expression), \"data-label\": expression, \"data-padding\": '5px', \"data-size\": 'mlarge', \"data-icon-button-aria-label\": mathBranchExpressionsAriaLabel[expression], \"data-send-target-info-on-button-click\": true, \"data-identifier\": expression }))))), h(\"span\", { class: 'math-equation-section' }), h(\"div\", { class: 'footer-section' }, h(this.cel_button, { \"data-label\": footerButtons.cancel.name, \"data-identifier\": footerButtons.cancel.identifier, \"data-send-target-info-on-button-click\": 'true', variant: 'outline', \"data-button-aria-label\": footerButtons.cancel.ariaLabel, class: 'activity-icons cancel' }), h(this.cel_button, { \"data-label\": footerButtons.insert.name, \"data-identifier\": footerButtons.insert.identifier, \"data-send-target-info-on-button-click\": 'true', \"data-button-aria-label\": footerButtons.insert.ariaLabel, class: 'activity-icons done' })))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"latex\": [\"handleLatexChange\"]\n  }; }\n};\nCelRichTextMathKeypad.style = celRichTextMathKeypadCss;\n\nexport { CelRichTextMathKeypad as cel_rich_text_math_keypad };\n"]}}