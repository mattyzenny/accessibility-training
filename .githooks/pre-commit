#!/bin/bash

FILE_TO_TRACK="src/app/Resources/resources.component.ts"
JSON_FILE="git-backend/updates.json"

# Loop through each definition and track lines
for definition in "${definitions[@]}"; do
  # Extract startLine and endLine for each definition
  START_LINE=${definition["startLine"]}
  END_LINE=${definition["endLine"]}

  # Get the latest commit timestamp for the specified lines
  LAST_UPDATE=$(git log -1 --date=iso-strict --format="%cd" -L $START_LINE,$END_LINE:$FILE_TO_TRACK)

  # If the file has changed in this commit, update updates.json
  if git diff --cached --name-only | grep -q "$FILE_TO_TRACK"; then
    jq --arg file "$FILE_TO_TRACK" --arg date "$LAST_UPDATE" \
       '.[$file] = $date' "$JSON_FILE" > temp.json && mv temp.json "$JSON_FILE"

    echo "âœ… Updated $FILE_TO_TRACK timestamp for lines $START_LINE-$END_LINE in $JSON_FILE"
    git add "$JSON_FILE"  # Stage the updates.json file for commit
  fi
done

# Fetch from the accessibility-training repository (local or remote)
git fetch accessibility-training

# Get the last commit message from the 'accessibility-training' master branch
COMMIT_MESSAGE=$(git log accessibility-training/master -1 --pretty=format:"%s")

# Export the COMMIT_MESSAGE to make it available in the subshell
export COMMIT_MESSAGE

# Navigate to git-backend and commit/push updates.json
cd git-backend || exit 1  # Change path if necessary
git add updates.json
git commit -m "Auto-update: - ${COMMIT_MESSAGE} - Changed updates.json"
git push origin main