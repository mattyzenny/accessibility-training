{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-rich-text-footer.entry.js"],"names":["CelRichTextFooter","hostRef","this","textChanges","componentLoaded","rteErrorMessage","saveState","undefined","isMathEditorActive","isTextPersistApplicable","isTextChanged","rteCurrentStates","message","status","reset","currentCharCount","celRteEditorStore","celIconBaseUrl","rteContents","debounceInterval","maxCharLength","showFooterButton","footerButtonDisabled","rteButtonLabel","rteMode","savingText","eventObj","detail","id","buttonType","clearTimeout","autoSaveTimer","handleMaxCharErrorMessage","saveTextChange","currentRteText","cel_icon","el","cel_button","onChange","source","onCountChange","onTextChange","rteStatus","handleStateChange","initialValues","charCount","rteText","editorStatus","emit","state","activeMathEditorStatus","setTimeout","action","content","saveAction","JSON","parse","error","saving","success","savedText","handleFooterButtonState","statusError","console","_a","_b","class","join","role","PRIMARY","style"],"mappings":"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","file":"35.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { S as StatusTypes, s as statusText } from './cel-rich-text.interface-83978736.js';\nimport { C as CelIconColors } from './cel-icon-constants-33baae7b.js';\nimport './constants-a06dfd18.js';\n\nconst celRichTextFooterCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}.sc-quill-cel-rich-text-footer-right{margin-left:auto;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.sc-quill-cel-rich-text-footer-right .saved-status-text{font-family:OpenSans;font-size:var(--cel-rte-saved-status-font-size, 0.75rem);line-height:16px;color:#333}.sc-quill-cel-rich-text-footer-right .sc-quill-cel-rich-text-status-container{padding:0 16px}.sc-quill-cel-rich-text-footer-right .sc-quill-cel-rich-text-persist-button{--button-height:var(--rich-text-footer-button-height, 26px);--button-min-width:var(--rich-text-footer-button-min-width, 67px);--button-text-size:var(--rich-text-footer-button-text-size, 0.875rem);--button-padding:var(--rich-text-footer-button-padding, 0)}.sc-quill-cel-rich-text-error-msg-container{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;user-select:none}.sc-quill-cel-rich-text-error-msg-container .sc-quill-cel-rich-text-error-msg-text{font-family:OpenSans-Bold;font-size:var(--cel-rte-error-msg-font-size, 0.75rem);margin-left:4px;color:#cc333f;line-height:16px}.sc-quill-cel-rich-text-bottom-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:8px 0}.sc-quill-cel-rich-text-bottom-container.count-hidden{float:right}.sc-quill-cel-rich-text-char-count{font-family:OpenSans;font-weight:400;font-size:var(--cel-rte-char-count-font-size, 0.75rem);line-height:16px;color:#333}.sc-quill-cel-rich-text-char-count.error{color:#cc333f}\";\n\nconst CelRichTextFooter = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.textChanges = createEvent(this, \"saveTextChanges\", 7);\n    this.componentLoaded = createEvent(this, \"celRichTextFooterLoaded\", 7);\n    this.rteErrorMessage = createEvent(this, \"rteErrorMessage\", 7);\n    this.saveState = undefined;\n    this.isMathEditorActive = false;\n    this.isTextPersistApplicable = true;\n    this.isTextChanged = false;\n    this.rteCurrentStates = { message: '', status: StatusTypes.reset };\n    this.currentCharCount = undefined;\n    this.celRteEditorStore = undefined;\n    this.celIconBaseUrl = '';\n    this.rteContents = '';\n    this.debounceInterval = 0;\n    this.maxCharLength = 0;\n    this.showFooterButton = false;\n    this.footerButtonDisabled = true;\n    this.rteButtonLabel = 'Done';\n    this.rteMode = 'editor';\n  }\n  handleFooterButtonDisabledChange() {\n    if (this.rteMode === 'editor' && this.saveState !== statusText.savingText && this.isTextPersistApplicable) {\n      this.isTextChanged = !this.footerButtonDisabled;\n    }\n  }\n  handleCelButtonOnClick(eventObj) {\n    const { detail: { id: buttonType } } = eventObj;\n    if (buttonType === 'editor-text-persist-button' && this.isTextPersistApplicable && this.isTextChanged) {\n      clearTimeout(this.autoSaveTimer);\n      this.handleMaxCharErrorMessage();\n      this.saveTextChange('buttonClick', this.currentRteText);\n    }\n  }\n  connectedCallback() {\n    this.cel_icon = transformTagName('cel-icon', 'cel-rich-text-footer', this.el);\n    this.cel_button = transformTagName('cel-button', 'cel-rich-text-footer', this.el);\n  }\n  // Called only once after render();\n  componentDidLoad() {\n    this.celRteEditorStore.onChange('textChange', ({ currentCharCount, currentRteText, source }) => {\n      this.currentRteText = currentRteText;\n      this.onCountChange(currentCharCount);\n      this.onTextChange(source);\n    });\n    this.celRteEditorStore.onChange('rteStatus', (rteStatus) => {\n      this.handleStateChange(rteStatus);\n    });\n    this.celRteEditorStore.onChange('handleFooter', (initialValues) => {\n      const { charCount, rteText } = initialValues;\n      this.currentCharCount = charCount;\n      this.currentRteText = rteText;\n    });\n    this.celRteEditorStore.onChange('activeMathEditorStatus', (editorStatus) => {\n      this.isMathEditorActive = editorStatus;\n    });\n    this.isTextChanged = !this.footerButtonDisabled;\n    this.componentLoaded.emit(true);\n  }\n  onCountChange(currentCharCount) {\n    this.currentCharCount = currentCharCount;\n    this.isTextPersistApplicable = !((this.maxCharLength > 0) && (this.currentCharCount > this.maxCharLength));\n    this.handleMaxCharErrorMessage();\n  }\n  onTextChange(source) {\n    const { state: { activeMathEditorStatus } } = this.celRteEditorStore;\n    this.isTextChanged = (this.rteContents !== this.currentRteText);\n    if (this.isTextPersistApplicable && (this.debounceInterval > 0) && !activeMathEditorStatus && source === 'user') {\n      clearTimeout(this.autoSaveTimer);\n      this.autoSaveTimer = setTimeout(() => {\n        this.saveTextChange('debounce', this.currentRteText);\n      }, this.debounceInterval);\n    }\n    else {\n      clearTimeout(this.autoSaveTimer);\n    }\n  }\n  saveTextChange(action, content) {\n    this.saveAction = action;\n    this.isTextChanged = false;\n    this.saveState = statusText.savingText;\n    this.rteContents = (this.currentCharCount !== 0) ? content : '';\n    this.textChanges.emit({ action, content: this.rteContents });\n  }\n  handleStateChange(rteStatus) {\n    try {\n      if (typeof rteStatus === 'object')\n        this.rteCurrentStates = rteStatus;\n      if (typeof rteStatus === 'string')\n        this.rteCurrentStates = JSON.parse(rteStatus);\n      const { status = null } = this.rteCurrentStates;\n      const { error, saving, success, reset } = StatusTypes;\n      switch (status) {\n        case error: {\n          this.isTextChanged = true;\n          this.saveState = '';\n          this.rteErrorMessage.emit(this.rteCurrentStates);\n          break;\n        }\n        case saving:\n          this.saveState = statusText.savingText;\n          break;\n        case success: {\n          this.saveState = statusText.savedText;\n          setTimeout(() => {\n            this.saveState = '';\n          }, 2000); // After 2 sec the status message will get hidden\n          this.handleFooterButtonState();\n          break;\n        }\n        case reset: {\n          this.saveState = '';\n          this.handleFooterButtonState();\n          this.rteErrorMessage.emit(this.rteCurrentStates);\n        }\n        // DO NOTHING\n      }\n      this.celRteEditorStore.state.status = status;\n    }\n    catch (statusError) {\n      console.error('RTE status handling exception', statusError);\n    }\n  }\n  handleFooterButtonState() {\n    if (((this.currentCharCount === 0) && this.footerButtonDisabled)) {\n      this.isTextChanged = !this.footerButtonDisabled;\n    }\n    else if (this.currentCharCount > 0) {\n      this.isTextChanged = true;\n    }\n    else {\n      this.isTextChanged = (this.saveAction === 'debounce');\n    }\n  }\n  handleMaxCharErrorMessage() {\n    if ((this.maxCharLength > 0) && !this.isTextPersistApplicable) {\n      this.rteCurrentStates = {\n        message: `Response must not exceed ${this.maxCharLength} character limit.`,\n        status: StatusTypes.error\n      };\n    }\n    else {\n      this.rteCurrentStates = {\n        message: '',\n        status: StatusTypes.reset\n      };\n    }\n    this.handleStateChange(this.rteCurrentStates);\n  }\n  render() {\n    var _a, _b;\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"div\", { class: [\"sc-quill-cel-rich-text-bottom-container\", ((((_a = this.rteCurrentStates) === null || _a === void 0 ? void 0 : _a.status) !== StatusTypes.error) && this.maxCharLength <= 0) ? \"count-hidden\" : \"\"].join(' ') }, this.maxCharLength > 0 ?\n      h(\"span\", { class: ['sc-quill-cel-rich-text-char-count', ((this.maxCharLength > 0) && !this.isTextPersistApplicable) ? 'error' : ''].join(' ') }, this.currentCharCount, \"/\", this.maxCharLength) : null, h(\"span\", { class: \"sc-quill-cel-rich-text-footer-right\" }, (this.saveState && this.rteCurrentStates.status != StatusTypes.error) ? h(\"span\", { class: \"sc-quill-cel-rich-text-status-container\", role: \"alert\" }, this.saveState === statusText.savedText ? h(\"span\", { class: \"cel-visually-hidden\" }, this.maxCharLength - this.currentCharCount, \" Characters remaining\") : null, h(\"span\", { class: \"saved-status-text\" }, this.saveState, this.saveState === statusText.savingText ? h(\"span\", { \"aria-hidden\": \"true\" }, \"...\") : null))\n      : null, this.showFooterButton ?\n      h(this.cel_button, { class: \"sc-quill-cel-rich-text-persist-button\", \"data-button-aria-label\": this.rteButtonLabel, \"data-label\": this.rteButtonLabel, \"data-size\": \"small\", \"data-disabled\": !(this.isTextPersistApplicable && this.isTextChanged && !this.isMathEditorActive), \"data-color\": CelIconColors.PRIMARY, \"data-send-target-info-on-button-click\": \"true\", \"data-identifier\": \"editor-text-persist-button\" }) : null)), this.rteCurrentStates.status === StatusTypes.error ?\n      h(\"div\", { class: \"sc-quill-cel-rich-text-error-msg-container\" }, h(\"span\", null, h(this.cel_icon, { \"aria-hidden\": \"true\", \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}alert-circle.svg` : '', \"data-name\": \"alert-circle\", \"data-color\": \"error\", \"data-size\": \"regular\" })), h(\"span\", { role: \"alert\", class: \"sc-quill-cel-rich-text-error-msg-text\" }, (_b = this.rteCurrentStates) === null || _b === void 0 ? void 0 : _b.message)) : null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"footerButtonDisabled\": [\"handleFooterButtonDisabledChange\"]\n  }; }\n};\nCelRichTextFooter.style = celRichTextFooterCss;\n\nexport { CelRichTextFooter as cel_rich_text_footer };\n"],"sourceRoot":"webpack:///"}