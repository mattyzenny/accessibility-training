{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-circle-graph.entry.js"],"names":["CelCircleGraph","hostRef","this","circleGraphMouseEnter","circleGraphMouseLeave","circleGraphItemFocus","circleGraphItemBlur","circleGraphItemClick","currentAngle","currentFocusAngle","activeItem","undefined","circleGraphItems","circleGraphStyles","focusRingWidth","focusRingOffset","chartWidth","innerRadius","dividerWidth","borderWidth","showSpacing","secondaryLabelItems","showSecondaryLabel","graphSectionAriaLabel","event","target","el","Array","from","shadowRoot","querySelectorAll","map","ring","classList","remove","add","graphPaths","button","push","createSectionPath","percentage","sectionPercentage","path","outerRadius","join","innerDividerOffset","calculateDividerAngleOffset","outerDividerOffset","startOuterArc","polarToCoordinates","centerX","centerY","endInnerArc","endOuterArc","startInnerArc","largeArcFlag","x","y","calculateBorderWidthOffset","innerAngleOffset","calculateFocusAngleOffset","outerAngleOffset","finalPoint","radius","Math","asin","PI","showBorders","angleInDegrees","angleInRadians","cos","sin","item","barChart","querySelector","id","type","emit","fillColor","window","matchMedia","matches","style","backgroundColor","customHoverColor","customFillColor","index","focusRing","calculateGraphPaths","class","width","height","onMouseEnter","onMouseEnterMouseLeave","onMouseLeave","onClick","onClickSection","onFocus","onFocusSection","onBlur","onBlurSection","title","ariaLabel","length","xmlns","d","createFocusPath","stroke","fill","cx","cy","r","borderColor"],"mappings":"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","file":"16.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\n\nconst celCircleGraphCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block;pointer-events:none}.graph-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.button-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.secondary-label{font-family:var(--cel-circle-chart-secondary-label-font-family, \\\"Poppins-Medium\\\");font-size:var(--cel-circle-chart-secondary-label-font-size, 0.75rem);color:var(--cel-circle-chart-secondary-label-color, #333);padding:var(--cel-circle-chart-secondary-label-padding, 4px 0 0 0);margin:0;display:var(--cel-circle-chart-secondary-label-display, flex);-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:var(--cel-circle-chart-secondary-label-flex-wrap, wrap);flex-wrap:var(--cel-circle-chart-secondary-label-flex-wrap, wrap);white-space:var(--cel-circle-chart-white-space, break-spaces);-ms-flex-pack:var(--cel-circle-chart-justify-secondary-label, flex-start);justify-content:var(--cel-circle-chart-justify-secondary-label, flex-start)}button{border:none;padding:0;position:absolute;cursor:pointer;pointer-events:all;-webkit-tap-highlight-color:transparent}.single-value-spacer{border:none;padding:0;position:absolute;background-color:var(--cel-circle-chart-single-value-support-color, #e2e2e2)}button:focus{border:none;outline:none}.focusring{position:absolute;pointer-events:none}.border-ring{position:absolute;pointer-events:none}.show{visibility:visible}.hide{visibility:hidden}\";\n\nconst CelCircleGraph = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.circleGraphMouseEnter = createEvent(this, \"celCircleGraphMouseEnter\", 7);\n    this.circleGraphMouseLeave = createEvent(this, \"celCircleGraphMouseLeave\", 7);\n    this.circleGraphItemFocus = createEvent(this, \"celCircleGraphItemFocus\", 7);\n    this.circleGraphItemBlur = createEvent(this, \"celCircleGraphItemBlur\", 7);\n    this.circleGraphItemClick = createEvent(this, \"celCircleGraphItemClick\", 7);\n    this.currentAngle = 0;\n    this.currentFocusAngle = 0;\n    this.activeItem = undefined;\n    this.circleGraphItems = [];\n    this.circleGraphStyles = {\n      focusRingWidth: 4,\n      focusRingOffset: 8,\n      chartWidth: 300,\n      innerRadius: 75,\n      dividerWidth: 4,\n      borderWidth: 0\n    };\n    this.showSpacing = false;\n    this.secondaryLabelItems = null;\n    this.showSecondaryLabel = false;\n    this.graphSectionAriaLabel = 'Circle Chart';\n  }\n  /**\n   * listener to close collapsed menu on outside click\n   */\n  handleOutsideClick(event) {\n    if (event.target != this.el) {\n      let focusRingList = Array.from(this.el.shadowRoot.querySelectorAll('.focusring'));\n      focusRingList.map((ring) => {\n        ring.classList.remove('show');\n        ring.classList.add('hide');\n        return ring;\n      });\n    }\n  }\n  calculateGraphPaths() {\n    this.graphPaths = [];\n    this.circleGraphItems.map((button) => {\n      this.graphPaths.push(this.createSectionPath(button.percentage));\n    });\n  }\n  createSectionPath(sectionPercentage) {\n    let path = '';\n    if (sectionPercentage >= 100) {\n      let outerRadius = this.circleGraphStyles.chartWidth / 2;\n      path = [\n        'M', outerRadius * 2, outerRadius,\n        'a', outerRadius, outerRadius, 0, 1, 1, -1 * this.circleGraphStyles.chartWidth, 0,\n        'a', outerRadius, outerRadius, 0, 1, 1, this.circleGraphStyles.chartWidth, 0,\n        'L', outerRadius + this.circleGraphStyles.innerRadius, outerRadius,\n        'a', this.circleGraphStyles.innerRadius, this.circleGraphStyles.innerRadius, 0, 1, 1, -2 * this.circleGraphStyles.innerRadius, 0,\n        'a', this.circleGraphStyles.innerRadius, this.circleGraphStyles.innerRadius, 0, 1, 1, 2 * this.circleGraphStyles.innerRadius, 0,\n        'L', outerRadius * 2, outerRadius\n      ].join(' ');\n    }\n    else if (sectionPercentage != 0) {\n      let innerDividerOffset = this.calculateDividerAngleOffset(this.circleGraphStyles.innerRadius);\n      let outerDividerOffset = this.calculateDividerAngleOffset(this.circleGraphStyles.chartWidth / 2);\n      let outerRadius = this.circleGraphStyles.chartWidth / 2;\n      let startOuterArc = this.polarToCoordinates(this.centerX, this.centerY, outerRadius, this.currentAngle + outerDividerOffset);\n      let endInnerArc = this.polarToCoordinates(this.centerX, this.centerY, this.circleGraphStyles.innerRadius, this.currentAngle + innerDividerOffset);\n      this.currentAngle += ((sectionPercentage / 100) * 360);\n      let endOuterArc = this.polarToCoordinates(this.centerX, this.centerY, outerRadius, this.currentAngle - outerDividerOffset);\n      let startInnerArc = this.polarToCoordinates(this.centerX, this.centerY, this.circleGraphStyles.innerRadius, this.currentAngle - innerDividerOffset);\n      let largeArcFlag = (sectionPercentage > 50 ? 1 : 0);\n      path = [\n        'M', startOuterArc.x, startOuterArc.y,\n        'A', outerRadius, outerRadius, 0, largeArcFlag, 1, endOuterArc.x, endOuterArc.y,\n        'L', startInnerArc.x, startInnerArc.y,\n        'A', this.circleGraphStyles.innerRadius, this.circleGraphStyles.innerRadius, 0, largeArcFlag, 0, endInnerArc.x, endInnerArc.y,\n        'L', startOuterArc.x, startOuterArc.y\n      ].join(' ');\n    }\n    return path;\n  }\n  createFocusPath(sectionPercentage) {\n    let outerRadius = this.circleGraphStyles.chartWidth / 2 - this.circleGraphStyles.focusRingOffset - this.calculateBorderWidthOffset() - this.circleGraphStyles.focusRingWidth / 2;\n    let innerRadius = this.circleGraphStyles.innerRadius + this.circleGraphStyles.focusRingOffset + this.calculateBorderWidthOffset() + this.circleGraphStyles.focusRingWidth / 2;\n    let innerAngleOffset = this.calculateFocusAngleOffset(innerRadius) + this.calculateDividerAngleOffset(innerRadius);\n    let outerAngleOffset = this.calculateFocusAngleOffset(outerRadius) + this.calculateDividerAngleOffset(outerRadius);\n    let startOuterArc = this.polarToCoordinates(this.centerX, this.centerY, outerRadius, this.currentFocusAngle + outerAngleOffset);\n    let endInnerArc = this.polarToCoordinates(this.centerX, this.centerY, innerRadius, this.currentFocusAngle + innerAngleOffset);\n    let finalPoint = this.polarToCoordinates(this.centerX, this.centerY, outerRadius + this.circleGraphStyles.focusRingWidth / 2, this.currentFocusAngle + outerAngleOffset);\n    this.currentFocusAngle += ((sectionPercentage / 100) * 360);\n    let endOuterArc = this.polarToCoordinates(this.centerX, this.centerY, outerRadius, this.currentFocusAngle - outerAngleOffset);\n    let startInnerArc = this.polarToCoordinates(this.centerX, this.centerY, innerRadius, this.currentFocusAngle - innerAngleOffset);\n    let largeArcFlag = (sectionPercentage - this.circleGraphStyles.focusRingOffset * 100 / this.circleGraphStyles.chartWidth > 50 ? 1 : 0);\n    let path = [\n      'M', startOuterArc.x, startOuterArc.y,\n      'A', outerRadius, outerRadius, 0, largeArcFlag, 1, endOuterArc.x, endOuterArc.y,\n      'L', startInnerArc.x, startInnerArc.y,\n      'A', innerRadius, innerRadius, 0, largeArcFlag, 0, endInnerArc.x, endInnerArc.y,\n      'L', finalPoint.x, finalPoint.y\n    ].join(' ');\n    return path;\n  }\n  calculateFocusAngleOffset(radius) {\n    return 2 * Math.asin(0.5 * (this.circleGraphStyles.focusRingOffset + this.circleGraphStyles.focusRingWidth / 2) / radius) * 180 / Math.PI;\n  }\n  calculateBorderWidthOffset() {\n    if (this.circleGraphStyles.showBorders)\n      return this.circleGraphStyles.borderWidth / 2;\n    else\n      return 0;\n  }\n  calculateDividerAngleOffset(radius) {\n    if (this.showSpacing)\n      return Math.asin(0.5 * this.circleGraphStyles.dividerWidth / radius) * 180 / Math.PI;\n    else\n      return 0;\n  }\n  polarToCoordinates(centerX, centerY, radius, angleInDegrees) {\n    let angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  }\n  onMouseEnterMouseLeave(event, item) {\n    const barChart = this.el.shadowRoot.querySelector(`.slice-${item.id}`);\n    if (event.type === 'mouseenter') {\n      this.circleGraphMouseEnter.emit(item);\n      if (item.fillColor === 'custom' && window.matchMedia('(hover: hover)').matches) {\n        barChart.style.backgroundColor = item.customHoverColor;\n      }\n    }\n    else if (event.type === 'mouseleave') {\n      this.circleGraphMouseLeave.emit(item);\n      if (item.fillColor === 'custom') {\n        barChart.style.backgroundColor = item.customFillColor;\n      }\n    }\n  }\n  onFocusSection(item, index) {\n    let focusRing = this.el.shadowRoot.querySelector(`.focusring${index}`);\n    focusRing.classList.remove('hide');\n    focusRing.classList.add('show');\n    this.circleGraphItemFocus.emit(item);\n    return;\n  }\n  onBlurSection(item, index) {\n    let focusRing = this.el.shadowRoot.querySelector(`.focusring${index}`);\n    focusRing.classList.remove('show');\n    focusRing.classList.add('hide');\n    this.circleGraphItemBlur.emit(item);\n    return;\n  }\n  onClickSection(item, index) {\n    let focusRingList = Array.from(this.el.shadowRoot.querySelectorAll('.focusring'));\n    focusRingList.map((ring) => {\n      ring.classList.remove('show');\n      ring.classList.add('hide');\n      return ring;\n    });\n    let focusRing = this.el.shadowRoot.querySelector(`.focusring${index}`);\n    focusRing.classList.remove('hide');\n    focusRing.classList.add('show');\n    this.circleGraphItemClick.emit(item);\n  }\n  render() {\n    this.currentAngle = 0;\n    this.currentFocusAngle = 0;\n    this.centerX = this.circleGraphStyles.chartWidth / 2;\n    this.centerY = this.circleGraphStyles.chartWidth / 2;\n    this.calculateGraphPaths();\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"section\", { class: \"graph-wrapper\", \"aria-label\": this.graphSectionAriaLabel, style: {\n        width: `${this.circleGraphStyles.chartWidth}px`,\n      } }, h(\"div\", { class: \"button-wrapper\", style: {\n        width: `${this.circleGraphStyles.chartWidth}px`,\n        height: `${this.circleGraphStyles.chartWidth}px`\n      } }, this.circleGraphItems.map((item, index) => {\n      return (item.percentage != 0 ?\n        h(\"button\", { onMouseEnter: (event) => this.onMouseEnterMouseLeave(event, item), onMouseLeave: (event) => this.onMouseEnterMouseLeave(event, item), class: `circle-slice slice-${item.id} ${item.fillColor} interactive`, onClick: () => this.onClickSection(item, index), onFocus: () => this.onFocusSection(item, index), onBlur: () => this.onBlurSection(item, index), title: item.ariaLabel, style: {\n            width: `${this.circleGraphStyles.chartWidth}px`,\n            height: `${this.circleGraphStyles.chartWidth}px`,\n            backgroundColor: item.fillColor === 'custom' ? item.customFillColor : 'none',\n            'clip-path': `path(${item.percentage >= 100 ? 'evenodd,' : ''}'${this.graphPaths[index]}')`,\n          } })\n        :\n          null);\n    }), this.circleGraphItems.length === 1 && ((this.showSpacing && this.circleGraphItems[0].percentage <= 99) || (!this.showSpacing && this.circleGraphItems[0].percentage < 100)) && this.circleGraphItems[0].percentage > 0 ?\n      h(\"span\", { class: \"single-value-spacer\", style: {\n          width: `${this.circleGraphStyles.chartWidth}px`,\n          height: `${this.circleGraphStyles.chartWidth}px`,\n          'clip-path': `path('${this.createSectionPath(100 - this.circleGraphItems[0].percentage)}')`,\n        } }) : null, this.circleGraphItems.map((button, index) => {\n      return (button.percentage != 0 ?\n        h(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: `${this.circleGraphStyles.chartWidth}`, width: `${this.circleGraphStyles.chartWidth}`, class: `focusring hide focusring${index}` }, button.percentage <= 100 ?\n          h(\"path\", { d: this.createFocusPath(button.percentage), stroke: \"black\", \"stroke-width\": `${this.circleGraphStyles.focusRingWidth}`, fill: \"transparent\" })\n          :\n            h(\"g\", null, h(\"circle\", { cx: `${this.centerX}`, cy: `${this.centerY}`, \"stroke-width\": `${this.circleGraphStyles.focusRingWidth}`, fill: \"none\", stroke: \"black\", r: `${this.circleGraphStyles.innerRadius + this.circleGraphStyles.focusRingOffset + this.circleGraphStyles.borderWidth / 2 + this.circleGraphStyles.focusRingWidth / 2}` }), h(\"circle\", { cx: `${this.centerX}`, cy: `${this.centerY}`, \"stroke-width\": `${this.circleGraphStyles.focusRingWidth}`, fill: \"none\", stroke: \"black\", r: `${this.circleGraphStyles.chartWidth / 2 - this.circleGraphStyles.focusRingOffset - this.circleGraphStyles.borderWidth / 2 - this.circleGraphStyles.focusRingWidth / 2}` })))\n        : null);\n    }), this.circleGraphStyles.showBorders ?\n      h(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: `${this.circleGraphStyles.chartWidth + this.circleGraphStyles.borderWidth}`, width: `${this.circleGraphStyles.chartWidth + this.circleGraphStyles.borderWidth}`, class: \"border-ring\" }, h(\"circle\", { cx: `${this.centerX + this.circleGraphStyles.borderWidth / 2}`, cy: `${this.centerY + this.circleGraphStyles.borderWidth / 2}`, \"stroke-width\": `${this.circleGraphStyles.borderWidth}`, fill: \"none\", stroke: `${this.circleGraphStyles.borderColor}`, r: `${this.circleGraphStyles.innerRadius}` }), h(\"circle\", { cx: `${this.centerX + this.circleGraphStyles.borderWidth / 2}`, cy: `${this.centerY + this.circleGraphStyles.borderWidth / 2}`, \"stroke-width\": `${this.circleGraphStyles.borderWidth}`, fill: \"none\", stroke: `${this.circleGraphStyles.borderColor}`, r: `${this.circleGraphStyles.chartWidth / 2}` }))\n      : null), this.showSecondaryLabel ?\n      h(\"p\", { class: \"secondary-label\" }, this.secondaryLabelItems.map((item, index) => {\n        return (h(\"span\", { class: \"secondary-label-item\" }, `${item}${index === this.secondaryLabelItems.length - 1 ? '' : ', '}`));\n      }))\n      : null)));\n  }\n  get el() { return getElement(this); }\n};\nCelCircleGraph.style = celCircleGraphCss;\n\nexport { CelCircleGraph as cel_circle_graph };\n"],"sourceRoot":"webpack:///"}