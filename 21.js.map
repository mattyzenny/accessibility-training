{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/constants-a06dfd18.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/utils-194224bf.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-multi-checkbox.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;;AAE+mB;;;;;;;;;;;;;AClDhqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkL;;AAElL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,yEAAyE;AACzE,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAQ;AACjB;AACA;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAW;AACpB;AACA;AACA;AACA;AACA,SAAS,wDAAK;AACd,SAAS,wDAAQ;AACjB,SAAS,wDAAa;AACtB;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiQ;;;;;;;;;;;;;AC9LjQ;AAAA;AAAA;AAAA;AAAA;AAA6G;AACjD;AACG;;AAE/D,2DAA2D,sDAAsD,wDAAwD,8DAA8D,WAAW,2DAA2D,qCAAqC,yDAAyD,uDAAuD,+CAA+C,+CAA+C,8DAA8D,wDAAwD,2DAA2D,oBAAoB,wDAAwD,gEAAgE,0DAA0D,2CAA2C,uBAAuB,gDAAgD,kDAAkD,oDAAoD,gEAAgE,mEAAmE,kDAAkD,kDAAkD,6CAA6C,8CAA8C,8CAA8C,gDAAgD,0DAA0D,mBAAmB,8CAA8C,mEAAmE,gEAAgE,oCAAoC,kBAAkB,yCAAyC,yEAAyE,qEAAqE,gEAAgE,0EAA0E,0CAA0C,sCAAsC,uCAAuC,oBAAoB,gDAAgD,kDAAkD,oDAAoD,mEAAmE,8DAA8D,0BAA0B,uDAAuD,uBAAuB,kDAAkD,sDAAsD,kDAAkD,oDAAoD,2CAA2C,oCAAoC,kBAAkB,kCAAkC,0DAA0D,gBAAgB,6BAA6B,iBAAiB,iDAAiD,yDAAyD,mCAAmC,uBAAuB,aAAa,MAAM,kBAAkB,uBAAuB,kCAAkC,qBAAqB,mBAAmB,6BAA6B,qBAAqB,WAAW,gBAAgB,kBAAkB,mBAAmB,UAAU,OAAO,yBAAyB,WAAW,KAAK,yBAAyB,WAAW,QAAQ,yBAAyB,WAAW,MAAM,yBAAyB,WAAW,OAAO,sBAAsB,WAAW,sBAAsB,yBAAyB,yBAAyB,uBAAuB,yBAAyB,0BAA0B,yBAAyB,wBAAwB,0BAA0B,sBAAsB,qBAAqB,kBAAkB,mBAAmB,kBAAkB,MAAM,qBAAqB,eAAe,WAAW,8DAA8D,iBAAiB,oBAAoB,aAAa,0BAA0B,sBAAsB,iEAAiE,gBAAgB,qFAAqF,6EAA6E,2DAA2D,gEAAgE,yBAAyB,0DAA0D,kDAAkD,sEAAsE,mEAAmE,8DAA8D,wEAAwE,qEAAqE,gEAAgE,gEAAgE,eAAe,0EAA0E,qBAAqB,UAAU,SAAS,mDAAmD,cAAc,sEAAsE,8DAA8D,gBAAgB,8BAA8B,sBAAsB,iBAAiB,iBAAiB,sEAAsE,iDAAiD,mBAAmB,gBAAgB,aAAa,6FAA6F,qFAAqF,0EAA0E,kEAAkE,8CAA8C,oDAAoD,wEAAwE,+DAA+D,4DAA4D,uDAAuD,UAAU,SAAS,kDAAkD,sBAAsB,sBAAsB,wDAAwD,gBAAgB;;AAEhlN;AACA;AACA,IAAI,4DAAgB;AACpB,qBAAqB,4DAAW;AAChC,mCAAmC,4DAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,GAAG,8BAA8B,EAAE,4DAAC,SAAS,sJAAsJ,mBAAmB,4DAAC,SAAS,uQAAuQ,EAAE,4DAAC,0BAA0B,6GAA6G,wDAAe,6MAA6M;AAC/1B;AACA,QAAQ,4DAAC,QAAQ,0FAA0F;AAC3G;AACA,iBAAiB,4DAAC;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAC,QAAQ,uMAAuM,EAAE,4DAAC,0BAA0B,gOAAgO;AAC/d;AACA,OAAO;AACP;AACA,YAAY,QAAQ,4DAAU,OAAO;AACrC,yBAAyB;AACzB;AACA;AACA,IAAI;AACJ;AACA;;AAEkD","file":"21.js","sourcesContent":["const ENTER = 'Enter';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_LEFT = 'ArrowLeft';\nconst SPACEBAR = 'Spacebar';\nconst SPACEBAR_CHAR = ' ';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_UP = 'ArrowUp';\nconst TAB = 'Tab';\nconst ESCAPE = 'Escape';\nconst KEYCODE = {\n  BOLD: 66,\n  ITALIC: 73,\n  UNDERLINE: 85,\n  UNDO: 89,\n  REDO: 90,\n};\nconst FOCUS_TYPE_EVENT = 'focus';\nconst MOUSE_ENTER_TYPE_EVENT = 'enter';\nconst HIDE_TOOLTIP_TYPE_EVENT = 'hide-tooltip';\nconst FROM_DATE_TYPE = 'type-from-date';\nconst TO_DATE_TYPE = 'type-to-date';\nconst HEADER_CHECKBOX = 'header-checkbox';\nconst RIGHT_MODAL_BUTTON = 'right-modal-button';\nconst LEFT_MODAL_BUTTON = 'left-modal-button';\nconst CANCEL_MODAL_BUTTON = 'cancel-modal-button';\nconst ACCEPT_MODAL_BUTTON = 'accept-modal-button';\nconst LEFT_ICON_MODAL_BUTTON = 'left-icon-modal-button';\nconst OPEN_MODAL_BUTTON = 'open-modal-button';\nconst CLOSE_MODAL_ICON_BUTTON = 'close-modal-icon-button';\nconst ERROR_CLOSE_ICON_BUTTON = 'error-close-icon-button';\nconst MULTI_SELECT_APPLY_BUTTON = 'multi-select-apply-button';\nconst MULTI_SELECT_CLEAR_BUTTON = 'multi-select-clear-button';\nconst MULTI_SELECT_LEFT_BUTTON = 'multi-select-left-button';\nconst HEADER_ICON_BUTTON = 'header-icon-button';\nvar DataVisualizationColorKeys;\n(function (DataVisualizationColorKeys) {\n  DataVisualizationColorKeys[\"RED\"] = \"red\";\n  DataVisualizationColorKeys[\"YELLOW\"] = \"yellow\";\n  DataVisualizationColorKeys[\"BLUE\"] = \"blue\";\n  DataVisualizationColorKeys[\"GREEN\"] = \"green\";\n  DataVisualizationColorKeys[\"WHITE\"] = \"white\";\n  DataVisualizationColorKeys[\"CUSTOM\"] = \"custom\";\n})(DataVisualizationColorKeys || (DataVisualizationColorKeys = {}));\nvar ProgressStepStatus;\n(function (ProgressStepStatus) {\n  ProgressStepStatus[\"COMPLETE\"] = \"complete\";\n  ProgressStepStatus[\"ACTIVE\"] = \"active\";\n  ProgressStepStatus[\"INACTIVE\"] = \"inactive\";\n})(ProgressStepStatus || (ProgressStepStatus = {}));\n\nexport { ARROW_RIGHT as A, CANCEL_MODAL_BUTTON as C, DataVisualizationColorKeys as D, ESCAPE as E, FROM_DATE_TYPE as F, HEADER_CHECKBOX as H, KEYCODE as K, LEFT_MODAL_BUTTON as L, MOUSE_ENTER_TYPE_EVENT as M, OPEN_MODAL_BUTTON as O, RIGHT_MODAL_BUTTON as R, SPACEBAR_CHAR as S, TAB as T, SPACEBAR as a, ENTER as b, ARROW_LEFT as c, ARROW_UP as d, ARROW_DOWN as e, TO_DATE_TYPE as f, ERROR_CLOSE_ICON_BUTTON as g, HIDE_TOOLTIP_TYPE_EVENT as h, FOCUS_TYPE_EVENT as i, ACCEPT_MODAL_BUTTON as j, LEFT_ICON_MODAL_BUTTON as k, CLOSE_MODAL_ICON_BUTTON as l, HEADER_ICON_BUTTON as m, MULTI_SELECT_LEFT_BUTTON as n, MULTI_SELECT_CLEAR_BUTTON as o, MULTI_SELECT_APPLY_BUTTON as p };\n","import { T as TAB, E as ESCAPE, S as SPACEBAR_CHAR, a as SPACEBAR, b as ENTER, A as ARROW_RIGHT, c as ARROW_LEFT, d as ARROW_UP, e as ARROW_DOWN } from './constants-a06dfd18.js';\n\nfunction setTitleAttributeByOverflow(elements) {\n  elements.forEach(function (element) {\n    if (element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth) {\n      element.setAttribute('title', element.textContent);\n    }\n    else {\n      element.removeAttribute('title');\n    }\n  });\n}\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c != '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst createColorClasses = (color) => {\n  return color ? {\n    'cel-color': true,\n    [`cel-color-${color}`]: true,\n  }\n    : null;\n};\nconst dragElement = (el) => {\n  let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  // otherwise, move the DIV from anywhere inside the DIV:\n  el.onmousedown = dragMouseDown;\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    el.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    el.onmousemove = elementDrag;\n  }\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    el.style.top = (el.offsetTop - pos2) + 'px';\n    el.style.left = (el.offsetLeft - pos1) + 'px';\n  }\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    el.onmouseup = null;\n    el.onmousemove = null;\n  }\n};\nconst transformTagName = (tagToBeTransformed, knownUntransformedTag, knownUntransformedTagElementReference) => {\n  const actualCurrentTag = knownUntransformedTagElementReference.tagName.toLowerCase(); // 'PREFIX-cel-navbar-SUFFIX'\n  const [prefix, suffix] = actualCurrentTag.split(knownUntransformedTag); // ['PREFIX-', '-SUFFIX']\n  return prefix + tagToBeTransformed + suffix; // 'PREFIX-cel_icon_button-SUFFIX'\n};\nconst handleKeyDownEvent = (event, keyBoardActionsObject) => {\n  switch (event.key) {\n    case ARROW_DOWN:\n    case ARROW_UP:\n      if (keyBoardActionsObject.arrowUpDown !== undefined) {\n        keyBoardActionsObject.arrowUpDown(event);\n      }\n      break;\n    case ARROW_LEFT:\n    case ARROW_RIGHT:\n      if (keyBoardActionsObject.arrowLeftRight !== undefined) {\n        keyBoardActionsObject.arrowLeftRight(event);\n      }\n      break;\n    case ENTER:\n    case SPACEBAR:\n    case SPACEBAR_CHAR:\n      if (keyBoardActionsObject.spaceEnter !== undefined) {\n        keyBoardActionsObject.spaceEnter();\n      }\n      break;\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape();\n      }\n    case TAB:\n      if (keyBoardActionsObject.tab !== undefined) {\n        keyBoardActionsObject.tab();\n      }\n      break;\n  }\n};\nconst getRGBColorFromImage = (imgEl) => {\n  const defaultRGB = { r: 255, g: 255, b: 255 }; // for non-supporting envs\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  let data;\n  let width;\n  let height;\n  let rgb = { r: 0, g: 0, b: 0 };\n  if (!context) {\n    return defaultRGB;\n  }\n  height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n  width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n  context.drawImage(imgEl, 0, 0);\n  try {\n    data = context.getImageData(0, 0, width, height);\n  }\n  catch (e) {\n    /* security error, img on diff domain */\n    return defaultRGB;\n  }\n  rgb.r = data.data[0];\n  rgb.g = data.data[1];\n  rgb.b = data.data[2];\n  return rgb;\n};\n/*\n    * Generic Focus Functionality\n*/\nfunction handleTabTrapping(event, element, focusableElementsArray, keyBoardActionsObject) {\n  var _a, _b, _c, _d;\n  switch (event.key) {\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape(event);\n      }\n      break;\n    case TAB:\n      const activeElement = ((_a = element.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) ||\n        ((_c = (_b = document.activeElement.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement.shadowRoot) === null || _c === void 0 ? void 0 : _c.activeElement) ||\n        ((_d = document.activeElement.shadowRoot) === null || _d === void 0 ? void 0 : _d.activeElement) ||\n        document.activeElement;\n      if (!event.shiftKey && activeElement === focusableElementsArray[focusableElementsArray.length - 1]) {\n        event.preventDefault();\n        focusFirstFocusable(focusableElementsArray[0]);\n        if (keyBoardActionsObject.tab !== undefined) {\n          keyBoardActionsObject.tab(event);\n        }\n      }\n      else if (event.shiftKey && activeElement === focusableElementsArray[0]) {\n        event.preventDefault();\n        focusLastFocusable(focusableElementsArray[focusableElementsArray.length - 1]);\n        if (keyBoardActionsObject.shiftTab !== undefined) {\n          keyBoardActionsObject.shiftTab(event);\n        }\n      }\n      break;\n  }\n}\nfunction focusFirstFocusable(firstFocusableElement) {\n  if (firstFocusableElement.shadowRoot) {\n    firstFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    firstFocusableElement.focus();\n  }\n}\nfunction focusLastFocusable(lastFocusableElement) {\n  if (lastFocusableElement.shadowRoot) {\n    lastFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    lastFocusableElement.focus();\n  }\n}\nfunction setFocusableElements(hostElement) {\n  let hasShadowRoot = !!hostElement.shadowRoot;\n  if (!hasShadowRoot) {\n    let focusableElementsArray = hostElement.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n  else {\n    let focusableElementsArray = hostElement.shadowRoot.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n}\n\nexport { setFocusableElements as a, handleTabTrapping as b, getClassMap as c, dragElement as d, createColorClasses as e, focusFirstFocusable as f, getRGBColorFromImage as g, handleKeyDownEvent as h, setTitleAttributeByOverflow as s, transformTagName as t };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { H as HEADER_CHECKBOX } from './constants-a06dfd18.js';\n\nconst celMultiCheckboxCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block}.checkbox-item{width:100%;--checkbox-label-maxWidth:var(--checkbox-item-maxWidth, 100%)}.multi-container{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;border-radius:var(--multi-checkbox-container-border-radius, 2px);overflow:hidden;-webkit-box-shadow:var(--multi-checkbox-box-shadow, 0 3px 5px 0 rgba(0, 0, 0, 0.36));box-shadow:var(--multi-checkbox-box-shadow, 0 3px 5px 0 rgba(0, 0, 0, 0.36));min-width:var(--multi-checkbox-container-min-width, 240px);background-color:var(--multi-checkbox-container-bg-color, #fff)}.multi-columns-container{-webkit-box-shadow:var(--multi-checkbox-box-shadow, none);box-shadow:var(--multi-checkbox-box-shadow, none);width:var(multi-checkbox-column-container-width, -webkit-fit-content);width:var(multi-checkbox-column-container-width, -moz-fit-content);width:var(multi-checkbox-column-container-width, fit-content);height:var(multi-checkbox-column-container-height, -webkit-fit-content);height:var(multi-checkbox-column-container-height, -moz-fit-content);height:var(multi-checkbox-column-container-height, fit-content);background-color:var(--multi-checkbox-container-bg-color, none)}.border-bottom{border-bottom:1px solid var(--top-container-border-bottom-color, #e2e2e2)}.item-list-container{padding:0;margin:0;max-height:var(--multi-checkbox-max-height, 25rem);overflow:auto;font-family:var(--checkbox-label-container-font-family, \\\"OpenSans\\\");font-size:var(--checkbox-label-container-font-size, 0.875rem)}.item-container{-webkit-box-sizing:border-box;box-sizing:border-box;padding:10px 8px}.header-checkbox{font-family:var(--header-checkbox-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--header-checkbox-font-size, 1rem)}.columns-container{list-style:none;display:grid;grid-template-columns:var(--multi-checkbox-template-columns, repeat(2, -webkit-max-content));grid-template-columns:var(--multi-checkbox-template-columns, repeat(2, max-content));grid-auto-columns:var(--multi-checkbox-auto-columns, -webkit-max-content);grid-auto-columns:var(--multi-checkbox-auto-columns, max-content);grid-row-gap:var(--multi-checkbox-row-gap, 0);grid-column-gap:var(--multi-checkbox-column-gap, 0);grid-template-rows:var(--multi-checkbox-template-rows, repeat(8, auto));-ms-flex-align:var(--multi-checkbox-grid-align-items, stretch);align-items:var(--multi-checkbox-grid-align-items, stretch);grid-auto-flow:var(--multi-checkbox-auto-flow, column);padding:0;margin:0;max-height:var(--multi-checkbox-max-height, none)}@media (hover: hover){.item-container:hover{background-color:var(--checkbox-item-bg-color, #cdcdcd);cursor:pointer}}\";\n\nconst CelMultiCheckbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.celChange = createEvent(this, \"celMultiCheckboxChange\", 7);\n    this.filteredListLengthEvent = createEvent(this, \"celMultiCheckboxFilteredListLength\", 7);\n    this.filteredList = [];\n    this.filter = '';\n    this.truncateLength = 43;\n    this.itemList = [];\n    this.hideAll = undefined;\n    this.multiCheckboxAriaLabel = 'multi checkbox';\n    this.emptyResultLabel = '';\n    this.maxCheckboxEnabled = undefined;\n    this.showLoader = false;\n    this.enableColumns = false;\n  }\n  connectedCallback() {\n    this.cel_checkbox_item = transformTagName('cel-checkbox-item', 'cel-multi-checkbox', this.el);\n  }\n  handleItemListChange() {\n    this.celChange.emit(this.itemList);\n  }\n  handleFilterChange() {\n    this.filteredList = this.itemList.filter((item) => item.label.toLowerCase().includes(this.filter.toLowerCase()));\n    const checked = this.filteredList.filter(item => item.checked).length;\n    const disabled = this.filteredList.filter(item => item.disabled).length;\n    if (!this.headerCelCheckbox)\n      return;\n    if (checked < this.filteredList.length - disabled) {\n      this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false;\n    }\n    else {\n      this.headerCelCheckbox.shadowRoot.querySelector('input').checked = true;\n    }\n    if (this.filter === '') {\n      this.filteredList = [];\n    }\n    this.filteredListLengthEvent.emit(this.filteredList.length);\n  }\n  componentDidLoad() {\n    const checked = this.scanList(this.itemList);\n    if (!this.headerCelCheckbox)\n      return;\n    switch (checked) {\n      case 0:\n        this.headerCelCheckbox.shadowRoot ? (this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false) : null;\n        break;\n      case this.itemList.length:\n        this.headerCelCheckbox.shadowRoot.querySelector('input').checked = true;\n        break;\n      // DO NOTHING\n    }\n  }\n  handleMultiSelect() {\n    this.deselectAll();\n    if (!this.headerCelCheckbox)\n      return;\n    this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false;\n    if (this.itemList.every(i => i.checked)) {\n      this.itemList.map(i => i.checked = false);\n    }\n  }\n  handleHeaderCheckboxChange(event) {\n    if (event.detail.checkboxType == 'header-checkbox') {\n      this.toggleAll(event);\n    }\n  }\n  handleCelCheckboxChange(event) {\n    //update master item list\n    const updatedList = this.itemList.map((item) => {\n      if (event.detail.identifier === item.identifier) {\n        return { ...item, checked: event.detail.checked };\n      }\n      else {\n        return item;\n      }\n    });\n    //update filtered list if there is one\n    if (this.filter && this.filter !== '') {\n      const updatedFilteredList = this.filteredList.map((item) => {\n        if (event.detail.identifier === item.identifier) {\n          return { ...item, checked: event.detail.checked };\n        }\n        else {\n          return item;\n        }\n      });\n      this.filteredList = updatedFilteredList;\n    }\n    this.itemList = updatedList;\n  }\n  passClick(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').click();\n    }\n  }\n  passMouseEnter(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').dispatchEvent(new MouseEvent('mouseenter'));\n    }\n  }\n  passMouseLeave(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').dispatchEvent(new MouseEvent('mouseleave'));\n    }\n  }\n  scanList(itemList) {\n    let count = 0;\n    for (let i = 0; i < itemList.length; i++) {\n      if (itemList[i].checked) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n  toggleAll(event) {\n    event.detail.checked ? this.selectAll() : this.deselectAll();\n  }\n  selectAll() {\n    const updatedList = this.itemList.map((item) => {\n      if (item.label.toLowerCase().includes(this.filter.toLowerCase()) && !item.disabled) {\n        return { ...item, checked: true };\n      }\n      else {\n        return item;\n      }\n    });\n    this.itemList = updatedList;\n  }\n  deselectAll() {\n    if (this.filter) {\n      const updatedList = this.itemList.map((item) => {\n        if (item.label.toLowerCase().includes(this.filter.toLowerCase()) && !item.disabled) {\n          return { ...item, checked: false };\n        }\n        else {\n          return item;\n        }\n      });\n      this.itemList = updatedList;\n    }\n    else {\n      const allDeselected = this.itemList.map((item) => {\n        if (!item.disabled) {\n          return { ...item, checked: false };\n        }\n        else {\n          return item;\n        }\n      });\n      this.itemList = allDeselected;\n    }\n  }\n  checkSearchResult(itemList, filter) {\n    let isSearchEmpty = true;\n    itemList.forEach((data) => {\n      if (filter && data.label.toLocaleLowerCase().includes(this.filter.toLocaleLowerCase())) {\n        isSearchEmpty = false;\n      }\n    });\n    return isSearchEmpty;\n  }\n  getDataLabel() {\n    if (!this.filter || this.filter === '') {\n      return 'Select All';\n    }\n    else\n      return 'Select All Visible';\n  }\n  getSelectAllCheckboxState(itemList) {\n    if (itemList.length === 0)\n      return false;\n    const checkItemList = (this.filter) ? [...this.filteredList] : [...this.itemList];\n    const anyDisabled = checkItemList.some(item => item.disabled);\n    const allChecked = checkItemList.every(item => item.checked);\n    this.syncFilteredState();\n    return allChecked || (anyDisabled && checkItemList.every(item => item.checked || item.disabled));\n  }\n  syncFilteredState() {\n    if (this.filter)\n      this.handleFilterChange();\n  }\n  componentWillLoad() {\n    this.syncFilteredState();\n  }\n  render() {\n    const noDataFound = this.checkSearchResult(this.itemList, this.filter);\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"div\", { class: ['multi-container', this.enableColumns ? 'multi-columns-container' : ''].join(' '), role: \"group\", \"aria-label\": this.multiCheckboxAriaLabel }, !this.hideAll ? (h(\"div\", { class: ['header-container item-container border-bottom', this.getSelectAllCheckboxState(this.itemList) ? 'checked' : ''].join(' '), onMouseOver: (ev) => this.passMouseEnter(ev), onMouseLeave: (ev) => this.passMouseLeave(ev), onClick: (ev) => this.passClick(ev) }, h(this.cel_checkbox_item, { \"data-identifier\": 'cci-header-checkbox', ref: (el) => (this.headerCelCheckbox = el), \"data-checkbox-type\": HEADER_CHECKBOX, \"data-checked\": this.getSelectAllCheckboxState(this.itemList), class: 'header-checkbox', \"data-label\": this.getDataLabel(), \"data-truncate-length\": this.truncateLength, \"data-disabled\": this.showLoader }))) : null, this.showLoader ?\n      null\n      : h(\"ul\", { class: ['item-list-container', this.enableColumns ? 'columns-container' : ''].join(' ') }, this.itemList.map((item, i, row) => {\n        if (this.filter && noDataFound && i + 1 === row.length) {\n          return h(\"li\", null, this.emptyResultLabel);\n        }\n        if (this.filter && !item.label.toLocaleLowerCase().includes(this.filter.toLocaleLowerCase())) {\n          return;\n        }\n        {\n          return (h(\"li\", { class: ['item-container', item.checked ? 'checked' : ''].join(' '), onClick: (ev) => this.passClick(ev), onMouseOver: (ev) => this.passMouseEnter(ev), onMouseLeave: (ev) => this.passMouseLeave(ev) }, h(this.cel_checkbox_item, { class: 'checkbox-item', \"data-identifier\": item.identifier, \"data-label\": item.label, \"data-checked\": item.checked, \"data-disabled\": item.disabled, \"data-truncate-length\": this.truncateLength, \"data-subtext\": item.subtext })));\n        }\n      })))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"itemList\": [\"handleItemListChange\"],\n    \"filter\": [\"handleFilterChange\"]\n  }; }\n};\nCelMultiCheckbox.style = celMultiCheckboxCss;\n\nexport { CelMultiCheckbox as cel_multi_checkbox };\n"],"sourceRoot":"webpack:///"}