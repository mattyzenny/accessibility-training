{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-rich-text-toolbar-icon.entry.js"],"names":["CelRichTextToolbarIcon","hostRef","this","selectedToolbarIcon","isPressedByUser","pressed","enableIcon","celRteEditorStore","undefined","celRteToolbarStore","celIconSrc","rteIconGroupType","rteIconType","addIconGroupSeparator","celIconPadding","eventObj","state","handleToolbar","cel_icon_button","el","onChange","changedState","emit","toolType","labelMessage","enableState","toolbarIconEl","class","join","size","WHITE","GRAYDARKER","DISABLED","getToolbarIconByType","style"],"mappings":"4FAAA,8HAMA,MAEMA,EAAyB,MAC7B,YAAYC,GACV,YAAiBC,KAAMD,GACvBC,KAAKC,oBAAsB,YAAYD,KAAM,sBAAuB,GACpEA,KAAKE,iBAAkB,EACvBF,KAAKG,SAAU,EACfH,KAAKI,YAAa,EAClBJ,KAAKK,uBAAoBC,EACzBN,KAAKO,wBAAqBD,EAC1BN,KAAKQ,WAAa,GAClBR,KAAKS,sBAAmBH,EACxBN,KAAKU,iBAAcJ,EACnBN,KAAKW,2BAAwBL,EAC7BN,KAAKY,oBAAiBN,EAExB,uBAAuBO,GACrBb,KAAKE,iBAAkB,EACvBF,KAAKK,kBAAkBS,MAAMC,cAAgBF,EAE/C,oBACEb,KAAKgB,gBAAkB,YAAiB,kBAAmB,6BAA8BhB,KAAKiB,IAEhG,mBACEjB,KAAKG,UAAYH,KAAKO,mBAAmBO,MAAMd,KAAKU,aACpDV,KAAKO,mBAAmBW,SAASlB,KAAKU,YAAcS,IAClDnB,KAAKG,QAAUgB,EACXnB,KAAKE,kBACPF,KAAKE,iBAAkB,EACvBF,KAAKC,oBAAoBmB,KAAK,CAAEC,SAAUrB,KAAKU,YAAaY,aAAc,IAAmBtB,KAAKU,aAAcP,QAASH,KAAKG,aAGlIH,KAAKO,mBAAmBW,SAAS,oBAAsBK,IACrDvB,KAAKI,WAAamB,IAGtB,uBACE,IAAIC,EAAgB,KACpB,OAAQxB,KAAKS,kBACX,IAAK,OACL,IAAK,aACHe,EAAiB,WAAD,CAAGxB,KAAKgB,gBAAiB,CAAES,MAAO,CAC9C,wCAAyC,IAAgBzB,KAAKU,aAC9DV,KAAKG,QAAU,uBAAyB,IACxCuB,KAAK,KAAM,8BAA+B,IAAqB1B,KAAKU,aAAc,YAAa,IAAgBV,KAAKU,aAAc,cAAe,OAAQ,WAAYV,KAAKQ,WAAa,GAAGR,KAAKQ,aAAa,IAAgBR,KAAKU,mBAAqB,KAAM,YAAa,IAAUiB,KAAM,eAAgB3B,KAAKY,eAAgB,eAAgBZ,KAAKG,QAAU,OAAS,QAAS,iBAAkBH,KAAKI,WAAY,aAAcJ,KAAKG,QAAU,IAAcyB,MAAQ,IAAcC,WAAY,kBAAmB7B,KAAKU,cAC3f,MAEF,IAAK,OACHc,EAAiB,WAAD,CAAGxB,KAAKgB,gBAAiB,CAAES,MAAO,CAC9C,wCAAyC,IAAgBzB,KAAKU,cAC9DgB,KAAK,KAAM,8BAA+B,IAAqB1B,KAAKU,aAAc,WAAYV,KAAKQ,WAAa,GAAGR,KAAKQ,aAAa,IAAgBR,KAAKU,mBAAqB,KAAM,YAAa,IAAgBV,KAAKU,aAAc,iBAAkBV,KAAKI,WAAY,aAAcJ,KAAKI,WAAa,IAAcyB,WAAa,IAAcC,SAAU,YAAa,IAAUH,KAAM,eAAgB3B,KAAKY,eAAgB,kBAAmBZ,KAAKU,cACzb,MAEF,IAAK,WACHc,EAAiB,WAAD,CAAGxB,KAAKgB,gBAAiB,CAAES,MAAO,CAC9C,wCAAyC,IAAgBzB,KAAKU,cAC9DgB,KAAK,KAAM,8BAA+B,GAAG,IAAqB1B,KAAKU,eAAgB,WAAYV,KAAKQ,WAAa,GAAGR,KAAKQ,aAAa,IAAgBR,KAAKU,mBAAqB,KAAM,YAAa,IAAgBV,KAAKU,aAAc,YAAa,IAAUiB,KAAM,eAAgB3B,KAAKY,eAAgB,iBAAmBZ,KAAKG,UAAYH,KAAKI,WAAa,aAAcJ,KAAKG,QAAU,IAAc0B,WAAa,IAAcC,SAAU,kBAAmB9B,KAAKU,cAKld,OAAOc,EAET,SACE,OAAQ,WAAD,CAAG,IAAM,CAAE,mBAAoB,SAAWxB,KAAK+B,wBAAwD,IAA/B/B,KAAKW,sBAAkC,YAAE,OAAQ,CAAEc,MAAO,6CAAgD,MAE3L,SAAW,OAAO,YAAWzB,QAE/BF,EAAuBkC,MArEW","file":"40.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { b as toolbarIconTooltip, a as toolbarIconName, d as toolbarIconAriaLabel, i as iconProps } from './cel-rich-text.interface-83978736.js';\nimport { C as CelIconColors } from './cel-icon-constants-33baae7b.js';\nimport './constants-a06dfd18.js';\n\nconst celRichTextToolbarIconCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}.sc-quill-cel-rich-text-toolbar-button{--icon-button-border-radius:5px;--icon-button-hover-bg-color:#e2e2e2;--icon-button-disabled-bg-color:#f3f3f3;margin:0 2px;--cel-icon-width:16px;--cel-icon-height:16px}.sc-quill-cel-rich-text-toolbar-button.toolbar-icon-pressed{--icon-button-hover-bg-color:#2150a3;--icon-button-bg-color:#2150a3}.sc-quill-cel-rich-text-toolbar-separator{padding-right:2px;border-right:1px solid #cdcdcd;font-size:29px}\";\n\nconst CelRichTextToolbarIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.selectedToolbarIcon = createEvent(this, \"selectedToolbarIcon\", 7);\n    this.isPressedByUser = false;\n    this.pressed = false;\n    this.enableIcon = true;\n    this.celRteEditorStore = undefined;\n    this.celRteToolbarStore = undefined;\n    this.celIconSrc = '';\n    this.rteIconGroupType = undefined;\n    this.rteIconType = undefined;\n    this.addIconGroupSeparator = undefined;\n    this.celIconPadding = undefined;\n  }\n  handleCelButtonOnClick(eventObj) {\n    this.isPressedByUser = true;\n    this.celRteEditorStore.state.handleToolbar = eventObj;\n  }\n  connectedCallback() {\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-rich-text-toolbar-icon', this.el);\n  }\n  componentDidLoad() {\n    this.pressed = !!this.celRteToolbarStore.state[this.rteIconType];\n    this.celRteToolbarStore.onChange(this.rteIconType, (changedState) => {\n      this.pressed = changedState;\n      if (this.isPressedByUser) {\n        this.isPressedByUser = false;\n        this.selectedToolbarIcon.emit({ toolType: this.rteIconType, labelMessage: toolbarIconTooltip[this.rteIconType], pressed: this.pressed });\n      }\n    });\n    this.celRteToolbarStore.onChange('enableToolbarIcon', (enableState) => {\n      this.enableIcon = enableState;\n    });\n  }\n  getToolbarIconByType() {\n    let toolbarIconEl = null;\n    switch (this.rteIconGroupType) {\n      case 'list':\n      case 'textFormat': {\n        toolbarIconEl = (h(this.cel_icon_button, { class: [\n            'sc-quill-cel-rich-text-toolbar-button', toolbarIconName[this.rteIconType],\n            this.pressed ? \"toolbar-icon-pressed\" : '',\n          ].join(' '), \"data-icon-button-aria-label\": toolbarIconAriaLabel[this.rteIconType], \"data-name\": toolbarIconName[this.rteIconType], \"data-toggle\": 'true', \"data-src\": this.celIconSrc ? `${this.celIconSrc}${toolbarIconName[this.rteIconType]}.svg` : null, \"data-size\": iconProps.size, \"data-padding\": this.celIconPadding, \"data-pressed\": this.pressed ? 'true' : 'false', \"data-disabled\": !this.enableIcon, \"data-color\": this.pressed ? CelIconColors.WHITE : CelIconColors.GRAYDARKER, \"data-identifier\": this.rteIconType }));\n        break;\n      }\n      case 'math': {\n        toolbarIconEl = (h(this.cel_icon_button, { class: [\n            'sc-quill-cel-rich-text-toolbar-button', toolbarIconName[this.rteIconType],\n          ].join(' '), \"data-icon-button-aria-label\": toolbarIconAriaLabel[this.rteIconType], \"data-src\": this.celIconSrc ? `${this.celIconSrc}${toolbarIconName[this.rteIconType]}.svg` : null, \"data-name\": toolbarIconName[this.rteIconType], \"data-disabled\": !this.enableIcon, \"data-color\": this.enableIcon ? CelIconColors.GRAYDARKER : CelIconColors.DISABLED, \"data-size\": iconProps.size, \"data-padding\": this.celIconPadding, \"data-identifier\": this.rteIconType }));\n        break;\n      }\n      case 'undoRedo': {\n        toolbarIconEl = (h(this.cel_icon_button, { class: [\n            'sc-quill-cel-rich-text-toolbar-button', toolbarIconName[this.rteIconType]\n          ].join(' '), \"data-icon-button-aria-label\": `${toolbarIconAriaLabel[this.rteIconType]}`, \"data-src\": this.celIconSrc ? `${this.celIconSrc}${toolbarIconName[this.rteIconType]}.svg` : null, \"data-name\": toolbarIconName[this.rteIconType], \"data-size\": iconProps.size, \"data-padding\": this.celIconPadding, \"data-disabled\": (!this.pressed || !this.enableIcon), \"data-color\": this.pressed ? CelIconColors.GRAYDARKER : CelIconColors.DISABLED, \"data-identifier\": this.rteIconType }));\n        break;\n      }\n      // DO NOTHING\n    }\n    return toolbarIconEl;\n  }\n  render() {\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, this.getToolbarIconByType(), (this.addIconGroupSeparator === true) ? h(\"span\", { class: 'sc-quill-cel-rich-text-toolbar-separator' }) : null));\n  }\n  get el() { return getElement(this); }\n};\nCelRichTextToolbarIcon.style = celRichTextToolbarIconCss;\n\nexport { CelRichTextToolbarIcon as cel_rich_text_toolbar_icon };\n"],"sourceRoot":"webpack:///"}