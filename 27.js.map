{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-multi-checkbox.entry.js"],"names":["CelMultiCheckbox","hostRef","this","celChange","filteredListLengthEvent","filteredList","filter","truncateLength","itemList","hideAll","undefined","multiCheckboxAriaLabel","emptyResultLabel","maxCheckboxEnabled","showLoader","enableColumns","cel_checkbox_item","el","emit","item","label","toLowerCase","includes","checked","length","disabled","headerCelCheckbox","shadowRoot","querySelector","scanList","deselectAll","every","i","map","event","detail","checkboxType","toggleAll","updatedList","identifier","updatedFilteredList","target","className","firstChild","click","dispatchEvent","MouseEvent","count","selectAll","allDeselected","isSearchEmpty","forEach","data","toLocaleLowerCase","checkItemList","anyDisabled","some","allChecked","syncFilteredState","handleFilterChange","noDataFound","checkSearchResult","class","join","role","getSelectAllCheckboxState","onMouseOver","ev","passMouseEnter","onMouseLeave","passMouseLeave","onClick","passClick","ref","getDataLabel","row","subtext","style"],"mappings":"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","file":"27.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { H as HEADER_CHECKBOX } from './constants-a06dfd18.js';\n\nconst celMultiCheckboxCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:inline-block}.checkbox-item{width:100%;--checkbox-label-maxWidth:var(--checkbox-item-maxWidth, 100%)}.multi-container{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;border-radius:var(--multi-checkbox-container-border-radius, 2px);overflow:hidden;-webkit-box-shadow:var(--multi-checkbox-box-shadow, 0 3px 5px 0 rgba(0, 0, 0, 0.36));box-shadow:var(--multi-checkbox-box-shadow, 0 3px 5px 0 rgba(0, 0, 0, 0.36));min-width:var(--multi-checkbox-container-min-width, 240px);background-color:var(--multi-checkbox-container-bg-color, #fff)}.multi-columns-container{-webkit-box-shadow:var(--multi-checkbox-box-shadow, none);box-shadow:var(--multi-checkbox-box-shadow, none);width:var(multi-checkbox-column-container-width, -webkit-fit-content);width:var(multi-checkbox-column-container-width, -moz-fit-content);width:var(multi-checkbox-column-container-width, fit-content);height:var(multi-checkbox-column-container-height, -webkit-fit-content);height:var(multi-checkbox-column-container-height, -moz-fit-content);height:var(multi-checkbox-column-container-height, fit-content);background-color:var(--multi-checkbox-container-bg-color, none)}.border-bottom{border-bottom:1px solid var(--top-container-border-bottom-color, #e2e2e2)}.item-list-container{padding:0;margin:0;max-height:var(--multi-checkbox-max-height, 25rem);overflow:auto;font-family:var(--checkbox-label-container-font-family, \\\"OpenSans\\\");font-size:var(--checkbox-label-container-font-size, 0.875rem)}.item-container{-webkit-box-sizing:border-box;box-sizing:border-box;padding:10px 8px}.header-checkbox{font-family:var(--header-checkbox-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--header-checkbox-font-size, 1rem)}.columns-container{list-style:none;display:grid;grid-template-columns:var(--multi-checkbox-template-columns, repeat(2, -webkit-max-content));grid-template-columns:var(--multi-checkbox-template-columns, repeat(2, max-content));grid-auto-columns:var(--multi-checkbox-auto-columns, -webkit-max-content);grid-auto-columns:var(--multi-checkbox-auto-columns, max-content);grid-row-gap:var(--multi-checkbox-row-gap, 0);grid-column-gap:var(--multi-checkbox-column-gap, 0);grid-template-rows:var(--multi-checkbox-template-rows, repeat(8, auto));-ms-flex-align:var(--multi-checkbox-grid-align-items, stretch);align-items:var(--multi-checkbox-grid-align-items, stretch);grid-auto-flow:var(--multi-checkbox-auto-flow, column);padding:0;margin:0;max-height:var(--multi-checkbox-max-height, none)}@media (hover: hover){.item-container:hover{background-color:var(--checkbox-item-bg-color, #cdcdcd);cursor:pointer}}\";\n\nconst CelMultiCheckbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.celChange = createEvent(this, \"celMultiCheckboxChange\", 7);\n    this.filteredListLengthEvent = createEvent(this, \"celMultiCheckboxFilteredListLength\", 7);\n    this.filteredList = [];\n    this.filter = '';\n    this.truncateLength = 43;\n    this.itemList = [];\n    this.hideAll = undefined;\n    this.multiCheckboxAriaLabel = 'multi checkbox';\n    this.emptyResultLabel = '';\n    this.maxCheckboxEnabled = undefined;\n    this.showLoader = false;\n    this.enableColumns = false;\n  }\n  connectedCallback() {\n    this.cel_checkbox_item = transformTagName('cel-checkbox-item', 'cel-multi-checkbox', this.el);\n  }\n  handleItemListChange() {\n    this.celChange.emit(this.itemList);\n  }\n  handleFilterChange() {\n    this.filteredList = this.itemList.filter((item) => item.label.toLowerCase().includes(this.filter.toLowerCase()));\n    const checked = this.filteredList.filter(item => item.checked).length;\n    const disabled = this.filteredList.filter(item => item.disabled).length;\n    if (!this.headerCelCheckbox)\n      return;\n    if (checked < this.filteredList.length - disabled) {\n      this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false;\n    }\n    else {\n      this.headerCelCheckbox.shadowRoot.querySelector('input').checked = true;\n    }\n    if (this.filter === '') {\n      this.filteredList = [];\n    }\n    this.filteredListLengthEvent.emit(this.filteredList.length);\n  }\n  componentDidLoad() {\n    const checked = this.scanList(this.itemList);\n    if (!this.headerCelCheckbox)\n      return;\n    switch (checked) {\n      case 0:\n        this.headerCelCheckbox.shadowRoot ? (this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false) : null;\n        break;\n      case this.itemList.length:\n        this.headerCelCheckbox.shadowRoot.querySelector('input').checked = true;\n        break;\n      // DO NOTHING\n    }\n  }\n  handleMultiSelect() {\n    this.deselectAll();\n    if (!this.headerCelCheckbox)\n      return;\n    this.headerCelCheckbox.shadowRoot.querySelector('input').checked = false;\n    if (this.itemList.every(i => i.checked)) {\n      this.itemList.map(i => i.checked = false);\n    }\n  }\n  handleHeaderCheckboxChange(event) {\n    if (event.detail.checkboxType == 'header-checkbox') {\n      this.toggleAll(event);\n    }\n  }\n  handleCelCheckboxChange(event) {\n    //update master item list\n    const updatedList = this.itemList.map((item) => {\n      if (event.detail.identifier === item.identifier) {\n        return { ...item, checked: event.detail.checked };\n      }\n      else {\n        return item;\n      }\n    });\n    //update filtered list if there is one\n    if (this.filter && this.filter !== '') {\n      const updatedFilteredList = this.filteredList.map((item) => {\n        if (event.detail.identifier === item.identifier) {\n          return { ...item, checked: event.detail.checked };\n        }\n        else {\n          return item;\n        }\n      });\n      this.filteredList = updatedFilteredList;\n    }\n    this.itemList = updatedList;\n  }\n  passClick(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').click();\n    }\n  }\n  passMouseEnter(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').dispatchEvent(new MouseEvent('mouseenter'));\n    }\n  }\n  passMouseLeave(event) {\n    const target = event.target;\n    if (target.className.includes('item-container')) {\n      const celCheckbox = target.firstChild;\n      celCheckbox.shadowRoot.querySelector('label').dispatchEvent(new MouseEvent('mouseleave'));\n    }\n  }\n  scanList(itemList) {\n    let count = 0;\n    for (let i = 0; i < itemList.length; i++) {\n      if (itemList[i].checked) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n  toggleAll(event) {\n    event.detail.checked ? this.selectAll() : this.deselectAll();\n  }\n  selectAll() {\n    const updatedList = this.itemList.map((item) => {\n      if (item.label.toLowerCase().includes(this.filter.toLowerCase()) && !item.disabled) {\n        return { ...item, checked: true };\n      }\n      else {\n        return item;\n      }\n    });\n    this.itemList = updatedList;\n  }\n  deselectAll() {\n    if (this.filter) {\n      const updatedList = this.itemList.map((item) => {\n        if (item.label.toLowerCase().includes(this.filter.toLowerCase()) && !item.disabled) {\n          return { ...item, checked: false };\n        }\n        else {\n          return item;\n        }\n      });\n      this.itemList = updatedList;\n    }\n    else {\n      const allDeselected = this.itemList.map((item) => {\n        if (!item.disabled) {\n          return { ...item, checked: false };\n        }\n        else {\n          return item;\n        }\n      });\n      this.itemList = allDeselected;\n    }\n  }\n  checkSearchResult(itemList, filter) {\n    let isSearchEmpty = true;\n    itemList.forEach((data) => {\n      if (filter && data.label.toLocaleLowerCase().includes(this.filter.toLocaleLowerCase())) {\n        isSearchEmpty = false;\n      }\n    });\n    return isSearchEmpty;\n  }\n  getDataLabel() {\n    if (!this.filter || this.filter === '') {\n      return 'Select All';\n    }\n    else\n      return 'Select All Visible';\n  }\n  getSelectAllCheckboxState(itemList) {\n    if (itemList.length === 0)\n      return false;\n    const checkItemList = (this.filter) ? [...this.filteredList] : [...this.itemList];\n    const anyDisabled = checkItemList.some(item => item.disabled);\n    const allChecked = checkItemList.every(item => item.checked);\n    this.syncFilteredState();\n    return allChecked || (anyDisabled && checkItemList.every(item => item.checked || item.disabled));\n  }\n  syncFilteredState() {\n    if (this.filter)\n      this.handleFilterChange();\n  }\n  componentWillLoad() {\n    this.syncFilteredState();\n  }\n  render() {\n    const noDataFound = this.checkSearchResult(this.itemList, this.filter);\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"div\", { class: ['multi-container', this.enableColumns ? 'multi-columns-container' : ''].join(' '), role: \"group\", \"aria-label\": this.multiCheckboxAriaLabel }, !this.hideAll ? (h(\"div\", { class: ['header-container item-container border-bottom', this.getSelectAllCheckboxState(this.itemList) ? 'checked' : ''].join(' '), onMouseOver: (ev) => this.passMouseEnter(ev), onMouseLeave: (ev) => this.passMouseLeave(ev), onClick: (ev) => this.passClick(ev) }, h(this.cel_checkbox_item, { \"data-identifier\": 'cci-header-checkbox', ref: (el) => (this.headerCelCheckbox = el), \"data-checkbox-type\": HEADER_CHECKBOX, \"data-checked\": this.getSelectAllCheckboxState(this.itemList), class: 'header-checkbox', \"data-label\": this.getDataLabel(), \"data-truncate-length\": this.truncateLength, \"data-disabled\": this.showLoader }))) : null, this.showLoader ?\n      null\n      : h(\"ul\", { class: ['item-list-container', this.enableColumns ? 'columns-container' : ''].join(' ') }, this.itemList.map((item, i, row) => {\n        if (this.filter && noDataFound && i + 1 === row.length) {\n          return h(\"li\", null, this.emptyResultLabel);\n        }\n        if (this.filter && !item.label.toLocaleLowerCase().includes(this.filter.toLocaleLowerCase())) {\n          return;\n        }\n        {\n          return (h(\"li\", { class: ['item-container', item.checked ? 'checked' : ''].join(' '), onClick: (ev) => this.passClick(ev), onMouseOver: (ev) => this.passMouseEnter(ev), onMouseLeave: (ev) => this.passMouseLeave(ev) }, h(this.cel_checkbox_item, { class: 'checkbox-item', \"data-identifier\": item.identifier, \"data-label\": item.label, \"data-checked\": item.checked, \"data-disabled\": item.disabled, \"data-truncate-length\": this.truncateLength, \"data-subtext\": item.subtext })));\n        }\n      })))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"itemList\": [\"handleItemListChange\"],\n    \"filter\": [\"handleFilterChange\"]\n  }; }\n};\nCelMultiCheckbox.style = celMultiCheckboxCss;\n\nexport { CelMultiCheckbox as cel_multi_checkbox };\n"],"sourceRoot":"webpack:///"}