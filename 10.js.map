{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/_commonjsHelpers-ba3f0406.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-date-input.entry.js"],"names":["commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","createCommonjsModule","fn","basedir","module","path","exports","require","base","Error","commonjsRequire","CelDateInput","hostRef","this","celOpen","celSelected","infoIconClicked","dateInputCleared","dateInputId","dateInputIds","dateInputFormatId","formatIds","isEnterKeyPressed","value","undefined","lastValidDateString","dateValidatorPatterns","dashOrSlashRegex","globalDashOrSlashRegex","validChar","monthAndDayValidators","month","year","label","placeholder","open","isToInput","from","to","disabled","disablePast","disableBefore","disableAfter","toggleValueReset","isError","dateInputType","displayInfoIcon","localeEs","iconButtonAriaLabel","range","primary","cel_icon_button","el","cel_calendar","newValue","emit","newFrom","updateDate","newTo","resetToCurrentMonth","extend","handleOpenChange","handleFromChange","day","format","event","composedPath","includes","detail","activeDate","date","toString","onFocusCalendarButton","_a","calendarButton","calendarBtnEl","shadowRoot","querySelector","focus","length","target","data","replace","dateArray","split","typedDelimiter","test","typedDelete","typedInvalidCharacter","invalidDatePropertyLength","tooManyDelimiters","match","validateDateWithMonthOnly","validateDateWithMonthAndDay","validateDateWithMonthDayAndYear","slice","padStart","isValid","yearLength","dateObj","parseInt","clearDate","name","htmlFor","class","join","SMALL","onClick","ev","id","type","handleInputClick","onInput","validateDateString","onChange","handleTypedChange","hidden","ref","formAriaLabel","REGULAR","MEDIUM","PRIMARY","GRAY","GRAYDARKER","style"],"mappings":"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","file":"10.js","sourcesContent":["var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { a as CelIconSizes, C as CelIconColors } from './cel-icon-constants-33baae7b.js';\nimport { d as dayjs_min, c as customParseFormat } from './customParseFormat-43dca114.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport './_commonjsHelpers-ba3f0406.js';\nimport './constants-a06dfd18.js';\n\nconst celDateInputCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}:host{display:-ms-flexbox;display:flex;-ms-flex-positive:inherit;flex-grow:inherit;-ms-flex-direction:column;flex-direction:column;width:var(--date-input-width, -webkit-fit-content);width:var(--date-input-width, -moz-fit-content);width:var(--date-input-width, fit-content);position:relative}div.input-wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:space-evenly;justify-content:space-evenly;position:relative}div.input-wrapper.bordered{background-color:var(--date-input-bordered-background-color, #fff);outline:1px solid var(--date-input-bordered-outline-color, #333);border-radius:2px}div.input-wrapper.bordered.bordered--focus{outline:2px solid var(--date-input-bordered-focus-outline-color, #006be0)}div.input-wrapper.bordered.bordered--error{outline:2px solid var(--date-input-bordered-error-outline-color, #cc333f)}div.input-wrapper.bordered.disabled{background-color:var(--date-input-bordered-disabled-background-color, #e2e2e2);outline:none}input[type=text]::-webkit-search-decoration,input[type=text]::-webkit-search-cancel-button,input[type=text]::-webkit-search-results-button,input[type=text]::-webkit-search-results-decoration{-webkit-appearance:none;padding:10px}input[type=text]::-webkit-input-placeholder{color:var(--text-field-placeholder-color, #767676)}input[type=text]::-moz-placeholder{color:var(--text-field-placeholder-color, #767676)}input[type=text]:-ms-input-placeholder{color:var(--text-field-placeholder-color, #767676)}input[type=text]::-ms-input-placeholder{color:var(--text-field-placeholder-color, #767676)}input[type=text]::placeholder{color:var(--text-field-placeholder-color, #767676)}input[type=text]:focus{border-bottom:2px solid var(--date-input-bottom-border-color, none);outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:0}input[type=text]:focus.bordered{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:var(--focus-ring-outline-offset, -4px)}input[type=text]:focus.text-field--error{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:#cc333f;outline-offset:0}input[type=text]:focus.text-field--error.bordered{outline-width:var(--focus-ring-outline-width, 2px);outline-style:var(--focus-ring-outline-style, solid);outline-color:var(--focus-ring-text-color, currentColor);outline-offset:-3px}.date-input-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;top:var(--date-input-label-top, 0);background-color:var(--date-input-label-bg-clor, transparent);padding:var(--date-input-label-padding, 3px 3px 2px 0);color:var(--date-input-color, #333);font-size:var(--date-input-font-size, 0.875rem);font-family:var(--date-input-font-family, \\\"OpenSans-Semibold\\\")}.date-input-label.bordered{padding:var(--date-input-label-bordered-padding, 3px 3px 4px 0)}.date-input-label.disabled{color:var(--date-input-disabled-color, #939393)}.date-input-label.disabled.bordered{color:var(--date-input-bordered-disabled-color, #767676)}.date-input{-webkit-box-sizing:border-box;box-sizing:border-box;border:none;border-bottom:1px solid var(--date-input-bottom-border-color, #333);background-color:var(--date-input-bg-clor, transparent);padding:var(--date-input-label-padding, 8px 45px 8px 8px);color:var(--date-input-color, #333);font-size:var(--date-input-font-size, 1rem);font-family:var(--date-input-font-family, \\\"OpenSans\\\")}.date-input.bordered{border-bottom:none;padding:var(--date-input-bordered-padding, 8px 44px 10px 8px)}input[type=text]:disabled{border-bottom:1px solid var(--date-input-disabled-border-color, #939393);color:var(--date-input-disabled-color, #939393);pointer-events:none;cursor:default;background-color:var(--date-input-disabled-bg-color, none)}input[type=text]:disabled.bordered{border:none;color:var(--date-input-bordered-disabled-color, #767676)}.date-input--focus{border-bottom:2px solid var(--date-input-bottom-border-color, #006be0)}.calendar-button{position:absolute;right:0;top:var(--date-input-calendar-button-top, 4px);min-width:var(--calendar-min-width, 1.625rem);padding:var(--date-input-calendar-button-padding, 0 2px 0 0)}.calendar-button.bordered{top:var(--date-input-bordered-calendar-button-top, 6px)}.calendar-button.bordered.disabled{--cel-color-disabled:#767676;--icon-button-hover-color:#767676;--icon-button-disabled-outline-color:#767676}.text-field--error{border-bottom:2px solid var(--text-field-error-border-color, #cc333f)}.cel-calendar-component{position:absolute;top:100%;z-index:var(--date-input-calendar-z-index, 100)}.cel-calendar-component.bordered{top:calc(100% + 2px)}\";\n\nconst CelDateInput = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.celOpen = createEvent(this, \"celDateInputOpenChange\", 7);\n    this.celSelected = createEvent(this, \"celDateInputSelected\", 7);\n    this.infoIconClicked = createEvent(this, \"celInfoIconClicked\", 7);\n    this.dateInputCleared = createEvent(this, \"celDateInputCleared\", 7);\n    this.dateInputId = `cel-date-input-${++dateInputIds}`;\n    this.dateInputFormatId = `cel-date-input-format-${++formatIds}`;\n    this.isEnterKeyPressed = false;\n    this.value = undefined;\n    this.lastValidDateString = '';\n    this.dateValidatorPatterns = {\n      dashOrSlashRegex: /\\/|-/,\n      globalDashOrSlashRegex: /\\/|-/g,\n      validChar: /[0-9]|\\/|-/,\n      monthAndDayValidators: ['MM/DD', 'M/DD', 'MM/D', 'M/D'],\n    };\n    this.month = undefined;\n    this.year = undefined;\n    this.label = 'Select date';\n    this.placeholder = 'mm/dd/yyyy';\n    this.open = undefined;\n    this.isToInput = undefined;\n    this.from = undefined;\n    this.to = undefined;\n    this.disabled = false;\n    this.disablePast = undefined;\n    this.disableBefore = undefined;\n    this.disableAfter = undefined;\n    this.toggleValueReset = false;\n    this.isError = false;\n    this.dateInputType = null;\n    this.displayInfoIcon = false;\n    this.localeEs = false;\n    this.iconButtonAriaLabel = \"Choose a date\";\n    this.range = false;\n    this.primary = false;\n  }\n  connectedCallback() {\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-date-input', this.el);\n    this.cel_calendar = transformTagName('cel-calendar', 'cel-date-input', this.el);\n  }\n  handleOpenChange(newValue) {\n    this.celOpen.emit(newValue);\n  }\n  handleFromChange(newFrom) {\n    if (!newFrom) {\n      return;\n    }\n    const { month, year } = newFrom;\n    this.month = +month;\n    this.year = year;\n    this.updateDate();\n  }\n  handleToChange(newTo) {\n    if (!this.isToInput && this.from == null && this.to == null) {\n      this.resetToCurrentMonth();\n    }\n    else if (!this.isToInput && this.from == null) {\n      const { month, year } = newTo;\n      this.month = +month;\n      this.year = year;\n    }\n    this.updateDate();\n  }\n  handleValueReset() {\n    if (this.toggleValueReset) {\n      this.value = '';\n    }\n  }\n  componentWillLoad() {\n    dayjs_min.extend(customParseFormat);\n    this.handleOpenChange(this.open);\n    this.handleFromChange(this.from);\n  }\n  /**\n   * Update the date when in a cel-date-range component.\n   */\n  updateDate() {\n    if (this.isToInput && this.to) {\n      // When the input is a date-range 'to' input, then set its value using the date in the \"to\" property.\n      this.value = dayjs_min(`${this.to.month} ${this.to.day} ${this.to.year}`, 'M D YYYY').format('MM/DD/YYYY');\n    }\n    else if (this.isToInput && this.from) {\n      // When the input is a date-range 'to' input and there is a date in the from property, then set the control value to an empty string.\n      this.value = '';\n    }\n    else if (this.from) {\n      // When the input is a date-range 'from' input and there is a date in the from property, then set it's value using the date in the from property.\n      this.value = dayjs_min(`${this.from.month} ${this.from.day} ${this.from.year}`, 'M D YYYY').format('MM/DD/YYYY');\n      this.lastValidDateString = this.value;\n    }\n    else {\n      // When the input is a date-range 'from' input and there is not a date in the from property, then set it's value to an empty string.\n      this.value = '';\n    }\n  }\n  /**\n   * Listen to close menu on outside click.\n   */\n  handleClick(event) {\n    if (!event.composedPath().includes(this.el)) {\n      this.open = false;\n    }\n  }\n  /**\n   * Listen for date to be selected in calendar.\n   */\n  handleDatePress(event) {\n    if (!event.detail) {\n      this.value = null;\n      this.isToInput ? (this.to = null) : (this.from = null);\n      this.celSelected.emit(null);\n      return;\n    }\n    const { day, month, year } = event.detail.activeDate;\n    const date = { day: day, month: (+month).toString(), year: year };\n    this.celSelected.emit({\n      activeDate: date,\n    });\n    this.isToInput ? (this.to = date) : (this.from = date);\n    this.value = dayjs_min(`${(+month).toString()} ${day} ${year}`, 'M D YYYY').format('MM/DD/YYYY');\n    this.lastValidDateString = this.value;\n    !this.isToInput ? this.open = false : null;\n    this.onFocusCalendarButton();\n  }\n  handleInputClick() {\n    if (this.open) {\n      this.open = false;\n    }\n  }\n  handleEsc() {\n    this.open = false;\n    this.onFocusCalendarButton();\n  }\n  onFocusCalendarButton() {\n    var _a;\n    const calendarButton = (_a = this.calendarBtnEl) === null || _a === void 0 ? void 0 : _a.shadowRoot.querySelector('button');\n    calendarButton === null || calendarButton === void 0 ? void 0 : calendarButton.focus();\n  }\n  validateDateString(event) {\n    const { dashOrSlashRegex, validChar, globalDashOrSlashRegex, monthAndDayValidators } = this.dateValidatorPatterns;\n    const length = event.target.value.length;\n    if (event.data === '-') {\n      event.target.value = event.target.value.replace('-', '/');\n    }\n    const dateArray = event.target.value.split(dashOrSlashRegex);\n    let [month, day, year] = dateArray;\n    const typedDelimiter = dashOrSlashRegex.test(event.data);\n    const typedDelete = event.data === null;\n    const typedInvalidCharacter = !validChar.test(event.data) && event.data !== null;\n    const dayIsTooLong = !!day && day.length > 2;\n    const monthIsTooLong = !!month && month.length > 2;\n    const yearIsTooLong = !!year && year.length > 4;\n    const invalidDatePropertyLength = dateArray.length === 3 && (yearIsTooLong || dayIsTooLong || monthIsTooLong);\n    const tooManyDelimiters = event.target.value.match(globalDashOrSlashRegex) !== null && event.target.value.match(/\\/|-/g).length > 2;\n    const invalidInput = typedInvalidCharacter || tooManyDelimiters || invalidDatePropertyLength;\n    if (invalidInput) {\n      // When date is invalid, reset it to previous valid date.\n      event.target.value = this.lastValidDateString;\n      return;\n    }\n    else if (length === 0 || typedDelete || typedDelimiter) {\n      return;\n    }\n    // Validate the date string\n    switch (dateArray.length) {\n      // When the date string only contains a month\n      case 1:\n        this.validateDateWithMonthOnly(month, day, event);\n        break;\n      // When the date string only has a month and a day\n      case 2:\n        this.validateDateWithMonthAndDay(month, day, year, event, monthAndDayValidators);\n        break;\n      // When the date string has a month, day and year.\n      case 3:\n        this.validateDateWithMonthDayAndYear(month, day, year, event);\n        this.lastValidDateString = event.target.value;\n        break;\n    }\n  }\n  // Helper function to validate typed string when only the month is present.\n  validateDateWithMonthOnly(month, day, event) {\n    if (+month <= 12 && +month >= 1 && month.length < 3) {\n      // If month is between 1 and 12, then update the placeholder string and the month on the calendar.\n      this.lastValidDateString = event.target.value;\n      this.month = +month;\n    }\n    else if (+month < 1) {\n      // If month is 0 and more than one character, then update the placeholder string.\n      month.length > 1 ? (event.target.value = this.lastValidDateString) : (this.lastValidDateString = event.target.value);\n    }\n    else if (+month > 12 || month.length > 2) {\n      // If month is greater than 12, then convert the last character into a day and format the remaining month string to have 2 characters.\n      // Examples: Convert \"13\" => \"1/3\" or convert \"112\" => \"11/2\"\n      day = month.slice(-1);\n      month = month.slice(0, -1).padStart(2, '0');\n      event.target.value = `${month}/${day}`;\n      this.lastValidDateString = event.target.value;\n    }\n  }\n  ;\n  // Helper function to validate the typed string when only the month and day are present.\n  validateDateWithMonthAndDay(month, day, year, event, monthAndDayValidators) {\n    if (dayjs_min(`${month}/${day}`, monthAndDayValidators, true).isValid()) {\n      // If the month and day combination is valid update the placeholder string and update the month on the calendar.\n      this.lastValidDateString = event.target.value;\n      this.month = +month;\n    }\n    else if ((+month === 2 && day > 29) || day > (+month % 2 + 30)) {\n      // If the day is too large for the given month, then convert the last character into a year and format the remaining day string to have 2 characters.\n      // Then, update the control value and the placeholder. Examples: \"03/32\" => \"03/03/2\", \"12/42\" => \"12/04/2\"\n      year = day.slice(-1);\n      day = day.slice(0, -1).padStart(2, '0');\n      event.target.value = `${month}/${day}/${year}`;\n      this.lastValidDateString = event.target.value;\n    }\n    else if (+day === 0 && day.length > 2) {\n      // If the day \"000\" reset it to \"0\"\n      event.target.value = this.lastValidDateString;\n    }\n  }\n  ;\n  // Helper function to validate event.target.value when month, day and year are all present.\n  validateDateWithMonthDayAndYear(month, day, year, event) {\n    const monthLength = month.length;\n    const dayLength = day.length;\n    const yearLength = year.length;\n    // Is the user still typing the year.\n    const isEditingYear = yearLength === 1 || yearLength === 3 || (yearLength === 2 && (+year === 19 || +year === 20));\n    // Is the user still typing the day.\n    const isEditingDay = dayLength === 1;\n    // Is the user still typing the month.\n    const isEditingMonth = monthLength === 1;\n    if (isEditingYear || isEditingDay) {\n      return;\n    }\n    else if (isEditingMonth) {\n      this.month = +month;\n      return;\n    }\n    // Format date values and the typed value to match 'MM/DD/YYYY' format to make validation simpler to handle.\n    day = day.padStart(2, '0');\n    month = month.padStart(2, '0');\n    year = yearLength === 2 ? `20${year}` : year;\n    event.target.value = `${month}/${day}/${year}`;\n    if (dayjs_min(event.target.value, 'MM/DD/YYYY', true).isValid()) {\n      // If the complete date is valid, then set the control value of the input.\n      const dateObj = { month: month, day: day, year: year };\n      this.celSelected.emit({\n        activeDate: dateObj,\n      });\n      this.isToInput ? this.to = dateObj : this.from = dateObj;\n      this.updateDate();\n      this.lastValidDateString = event.target.value;\n    }\n    else {\n      // If date is invalid, reset it to previous valid date.\n      event.target.value = this.value ? this.value : this.lastValidDateString;\n    }\n  }\n  ;\n  clearDate() {\n    if (this.isToInput && this.from) {\n      this.to = null;\n      this.month = +this.from.month;\n      this.year = this.from.year;\n    }\n    else if (!this.isToInput && this.to) {\n      this.from = null;\n      this.month = +this.to.month;\n      this.year = this.to.year;\n    }\n    else {\n      this.from = null;\n      this.resetToCurrentMonth();\n    }\n    this.updateDate();\n    this.lastValidDateString = '';\n    this.dateInputCleared.emit();\n  }\n  resetToCurrentMonth() {\n    this.month = parseInt(dayjs_min().format('M'));\n    this.year = dayjs_min().format('YYYY');\n  }\n  /**\n   * Validate when user presses enter or clicks away from the text input.\n   */\n  handleTypedChange(event) {\n    if (event.target.value == '') {\n      this.clearDate();\n      return;\n    }\n    const { dashOrSlashRegex } = this.dateValidatorPatterns;\n    const dateArray = event.target.value.split(dashOrSlashRegex);\n    const [month, day, year] = dateArray;\n    // If the typed value doesn't have a month, day and year, then reset the typed string to the placeholder string.\n    if (dateArray.length < 3) {\n      event.target.value = this.lastValidDateString;\n      return;\n    }\n    // Create date object and format it and the typed string to 'MM/DD/YYYY' to simplify validation.\n    const date = {\n      day: day.padStart(2, '0'),\n      month: month.padStart(2, '0'),\n      year: year.length === 2 ? `20${year}` : year,\n    };\n    event.target.value = `${date.month}/${date.day}/${date.year}`;\n    if (dayjs_min(event.target.value, 'MM/DD/YYYY', true).isValid()) {\n      // If date is valid, then set the control value and the placeholder to the typed string.\n      this.lastValidDateString = event.target.value;\n      this.celSelected.emit({\n        activeDate: date,\n      });\n      this.isToInput ? (this.to = date) : (this.from = date);\n      this.updateDate();\n      this.open = false;\n    }\n    else {\n      // If date is invalid and the control has a value, then set the typed string to the control value.\n      // If the control doesn't have a value, then set the typed string to the placeholder.\n      event.target.value = !!this.value ? this.value : this.lastValidDateString;\n    }\n  }\n  handleToggle(event) {\n    if (event.detail.name === 'calendar') {\n      if (this.disabled) {\n        return;\n      }\n      if (event.detail || !this.isEnterKeyPressed) {\n        this.open = !this.open;\n      }\n      this.isEnterKeyPressed = false;\n    }\n  }\n  formAriaLabel() {\n    return this.value ? `Change date, ${this.value} currently selected` : 'Choose Date';\n  }\n  render() {\n    return (h(Host, { \"data-cel-version\": '9.0.2' }, h(\"label\", { htmlFor: this.dateInputId, class: ['date-input-label', this.disabled ? 'disabled' : '', this.primary ? 'bordered' : ''].join(' ') }, this.label, this.displayInfoIcon ? (h(this.cel_icon_button, { class: \"label-info-icon\", \"data-icon-button-aria-label\": 'Date input information', \"data-name\": 'information-circle', \"data-size\": CelIconSizes.SMALL, onClick: (ev) => this.infoIconClicked.emit(ev) })) : null), h(\"div\", { class: [\n        'input-wrapper',\n        this.primary ? 'bordered' : '',\n        this.isError ? 'bordered--error' : '',\n        this.open ? 'bordered--focus' : '',\n        this.disabled ? 'disabled' : ''\n      ].join(' ') }, h(\"input\", { \"aria-describedby\": this.dateInputFormatId, id: this.dateInputId, class: {\n        ['date-input']: true,\n        ['date-input--focus']: this.open,\n        ['text-field--error']: this.isError,\n        ['isToInput']: this.isToInput,\n        ['bordered']: this.primary,\n      }, type: \"text\", placeholder: this.placeholder, value: this.value, onClick: () => this.handleInputClick(), onInput: (event) => this.validateDateString(event), disabled: this.disabled, onChange: (event) => this.handleTypedChange(event) }), h(\"span\", { hidden: true, id: this.dateInputFormatId }, h(\"span\", { hidden: true, class: \"sr-only\" }, \" date format:\"), \"mm/dd/yyyy\"), h(this.cel_icon_button, { ref: (el) => (this.calendarBtnEl = el), \"data-icon-button-aria-label\": this.range ? this.iconButtonAriaLabel : this.formAriaLabel(), class: ['calendar-button', this.primary ? 'bordered' : '', this.disabled ? 'disabled' : ''].join(' '), \"data-name\": \"calendar\", \"data-size\": this.primary ? CelIconSizes.REGULAR : CelIconSizes.MEDIUM, \"data-padding\": \"6px\", disabled: this.disabled, \"data-color\": this.open ? CelIconColors.PRIMARY : this.disabled ? CelIconColors.GRAY : CelIconColors.GRAYDARKER })), this.open ? (h(this.cel_calendar, { class: ['cel-calendar-component', this.primary ? 'bordered' : ''].join(' '), from: this.from, to: this.to, \"data-disable-past\": this.disablePast, disableBefore: this.disableBefore, disableAfter: this.disableAfter, \"data-month\": this.month, \"data-year\": this.year, \"data-date-input-type\": this.dateInputType, \"data-locale-es\": this.localeEs })) : null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"open\": [\"handleOpenChange\"],\n    \"from\": [\"handleFromChange\"],\n    \"to\": [\"handleToChange\"],\n    \"toggleValueReset\": [\"handleValueReset\"]\n  }; }\n};\nlet dateInputIds = 0;\nlet formatIds = 0;\nCelDateInput.style = celDateInputCss;\n\nexport { CelDateInput as cel_date_input };\n"],"sourceRoot":"webpack:///"}