{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/constants-a06dfd18.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-draggable-window.entry.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-icon-constants-33baae7b.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/utils-194224bf.js"],"names":[],"mappings":"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A,aAAa;AACb;AACA;AACA,aAAa,wDAAW;AACxB;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iBAAiB,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe,SAAS,UAAU;AACpE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,CAAC,oDAAI,QAAQ,4DAAC,SAAS,yEAAyE,EAAE,4DAAC,SAAS,qDAAqD,+BAA+B,EAAE,EAAE,GAAG,4DAAC,SAAS,sLAAsL,EAAE,4DAAC,SAAS,iCAAiC,EAAE,4DAAC,UAAU,8CAA8C,6BAA6B,4DAAC,SAAS,kCAAkC,EAAE,4DAAC,wBAAwB,kSAAkS,oBAAoB,oKAAoK,iEAAa,QAAQ,IAAI,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,QAAQ,wBAAwB,oBAAoB,4DAAC,SAAS,gCAAgC,EAAE,4DAAC,wBAAwB,iFAAiF,oBAAoB,iLAAiL,KAAK,4DAAC,SAAS,0BAA0B,EAAE,4DAAC,UAAU,oCAAoC,IAAI,4DAAC,YAAY,mDAAmD,yBAAyB,EAAE,EAAE;AACrsD;AACA,qBAAqB,QAAQ,4DAAU,OAAO;AAC9C;AACA;;AAEsD;;;;;;;;;;;;;ACjOtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEgD;;;;;;;;;;;;;AC7CzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkL;;AAElL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,yEAAyE;AACzE,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAQ;AACjB;AACA;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAW;AACpB;AACA;AACA;AACA;AACA,SAAS,wDAAK;AACd,SAAS,wDAAQ;AACjB,SAAS,wDAAa;AACtB;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiQ","file":"6.js","sourcesContent":["const ENTER = 'Enter';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_LEFT = 'ArrowLeft';\nconst SPACEBAR = 'Spacebar';\nconst SPACEBAR_CHAR = ' ';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_UP = 'ArrowUp';\nconst TAB = 'Tab';\nconst ESCAPE = 'Escape';\nconst KEYCODE = {\n  BOLD: 66,\n  ITALIC: 73,\n  UNDERLINE: 85,\n  UNDO: 89,\n  REDO: 90,\n};\nconst FOCUS_TYPE_EVENT = 'focus';\nconst MOUSE_ENTER_TYPE_EVENT = 'enter';\nconst HIDE_TOOLTIP_TYPE_EVENT = 'hide-tooltip';\nconst FROM_DATE_TYPE = 'type-from-date';\nconst TO_DATE_TYPE = 'type-to-date';\nconst HEADER_CHECKBOX = 'header-checkbox';\nconst RIGHT_MODAL_BUTTON = 'right-modal-button';\nconst LEFT_MODAL_BUTTON = 'left-modal-button';\nconst CANCEL_MODAL_BUTTON = 'cancel-modal-button';\nconst ACCEPT_MODAL_BUTTON = 'accept-modal-button';\nconst LEFT_ICON_MODAL_BUTTON = 'left-icon-modal-button';\nconst OPEN_MODAL_BUTTON = 'open-modal-button';\nconst CLOSE_MODAL_ICON_BUTTON = 'close-modal-icon-button';\nconst ERROR_CLOSE_ICON_BUTTON = 'error-close-icon-button';\nconst MULTI_SELECT_APPLY_BUTTON = 'multi-select-apply-button';\nconst MULTI_SELECT_CLEAR_BUTTON = 'multi-select-clear-button';\nconst MULTI_SELECT_LEFT_BUTTON = 'multi-select-left-button';\nconst HEADER_ICON_BUTTON = 'header-icon-button';\nvar DataVisualizationColorKeys;\n(function (DataVisualizationColorKeys) {\n  DataVisualizationColorKeys[\"RED\"] = \"red\";\n  DataVisualizationColorKeys[\"YELLOW\"] = \"yellow\";\n  DataVisualizationColorKeys[\"BLUE\"] = \"blue\";\n  DataVisualizationColorKeys[\"GREEN\"] = \"green\";\n  DataVisualizationColorKeys[\"WHITE\"] = \"white\";\n  DataVisualizationColorKeys[\"CUSTOM\"] = \"custom\";\n})(DataVisualizationColorKeys || (DataVisualizationColorKeys = {}));\nvar ProgressStepStatus;\n(function (ProgressStepStatus) {\n  ProgressStepStatus[\"COMPLETE\"] = \"complete\";\n  ProgressStepStatus[\"ACTIVE\"] = \"active\";\n  ProgressStepStatus[\"INACTIVE\"] = \"inactive\";\n})(ProgressStepStatus || (ProgressStepStatus = {}));\n\nexport { ARROW_RIGHT as A, CANCEL_MODAL_BUTTON as C, DataVisualizationColorKeys as D, ESCAPE as E, FROM_DATE_TYPE as F, HEADER_CHECKBOX as H, KEYCODE as K, LEFT_MODAL_BUTTON as L, MOUSE_ENTER_TYPE_EVENT as M, OPEN_MODAL_BUTTON as O, RIGHT_MODAL_BUTTON as R, SPACEBAR_CHAR as S, TAB as T, SPACEBAR as a, ENTER as b, ARROW_LEFT as c, ARROW_UP as d, ARROW_DOWN as e, TO_DATE_TYPE as f, ERROR_CLOSE_ICON_BUTTON as g, HIDE_TOOLTIP_TYPE_EVENT as h, FOCUS_TYPE_EVENT as i, ACCEPT_MODAL_BUTTON as j, LEFT_ICON_MODAL_BUTTON as k, CLOSE_MODAL_ICON_BUTTON as l, HEADER_ICON_BUTTON as m, MULTI_SELECT_LEFT_BUTTON as n, MULTI_SELECT_CLEAR_BUTTON as o, MULTI_SELECT_APPLY_BUTTON as p };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-9a8c46b4.js';\nimport { t as transformTagName } from './utils-194224bf.js';\nimport { E as ESCAPE, d as ARROW_UP, e as ARROW_DOWN, c as ARROW_LEFT, A as ARROW_RIGHT } from './constants-a06dfd18.js';\nimport { C as CelIconColors } from './cel-icon-constants-33baae7b.js';\n\nconst celDraggableWindowCss = \".lst-table-responsive-wrapper{width:var(--lst-table-responsive-wrapper-width, auto);height:var(--lst-table-responsive-wrapper-height, auto);overflow:var(--lst-table-responsive-wrapper-overflow, scroll)}.lst-table{border-collapse:var(--lst-table-border-collapse, collapse);border:var(--lst-table-border, none);background-color:var(--lst-table-background-color, #fff);font-family:var(--lst-table-font-family, \\\"OpenSans\\\");line-height:var(--lst-table-line-height, 20px);font-size:var(--lst-table-font-size, 0.875rem)}.lst-table.compact>thead>tr>th,.lst-table.compact>tbody>tr>td{padding-top:var(--lst-table-padding-top-compact, 8.5px);padding-bottom:var(--lst-table-padding-top-compact, 8.5px)}.lst-table>thead tr{border-top:var(--lst-table-header-row-border-top, none);background-color:var(--lst-table-header-background-color, #fff);line-height:var(--lst-table-header-row-line-height, 20px);padding:var(--lst-table-padding, 17px 8px)}.lst-table>thead>tr>th{border-top:var(--lst-table-th-border-top, none);border-left:var(--lst-table-th-border-left, none);border-right:var(--lst-table-th-border-right, none);border-bottom:var(--lst-table-th-border-bottom, 1px solid #555);font-family:var(--lst-table-th-font-family, \\\"OpenSans-Semibold\\\");font-size:var(--lst-table-th-font-size, 0.875rem);line-height:var(--lst-table-th-line-height, 20px);padding:var(--lst-table-th-padding, 8px 4px);min-width:var(--lst-table-th-min-width, 64px);max-width:var(--lst-table-th-max-width, none);text-align:var(--lst-table-th-text-align, left);vertical-align:var(--lst-table-th-vertical-align, middle);white-space:nowrap}.lst-table>thead>tr>th>.lst-table-header-icon{vertical-align:var(--lst-table-header-icon-vertical-align, middle);margin-bottom:var(--lst-table-header-icon-margin-bottom, 1px 0)}.lst-table>thead>tr>th.align-center{text-align:center}.lst-table>thead>tr>th.interactive:hover{background-color:var(--lst-table-th-interactive-hover-bg-color, #e5f0f9);border-radius:var(--interactive-hover-th-border-radius, 4px 4px 0 0)}.lst-table>thead>tr>th.interactive:hover:has(.lst-table-select){border-radius:var(--interactive-hover-select-th-border-radius, 4px 0 0 0);--primary-select-background-color:#e5f0f9;--primary-styling-label-color:#2150a3;--select-caret-down-color-base:#2150a3}.lst-table tbody tr{border-top:var(--lst-table-tr-border-top, none);border-left:var(--lst-table-tr-border-left, none);border-right:var(--lst-table-tr-border-right, none);border-bottom:var(--lst-table-tr-border-bottom, 1px solid #d8d8d8);background-color:var(--lst-table-body-background-color, #fff)}.lst-table tbody tr:hover{background-color:var(--lst-tr-hover-bg-color, #e5f0f9)}.lst-table tbody tr>td{font-size:var(--lst-table-td-font-size, 0.875rem);border-bottom:var(--lst-table-td-border-bottom, none);border-left:var(--lst-table-td-border-left, none);border-right:var(--lst-table-td-border-right, none);padding:var(--lst-table-padding, 17px 8px)}.lst-table tbody tr>td.align-center{text-align:center}.lst-table tbody tr>td.align-left{padding-left:var(--lst-table-td-align-left-padding, none);text-align:left}.lst-table .lst-table-select{margin-right:4px;--single-select-label-font-size:$text-size-small;--single-select-label-font-family:$secondary-font-medium;--label-margin-bottom-borderless:0}button:active:disabled{outline:none}:root{--primary:#006be0;--primaryShade:#2150a3;--errorNotificationOrange:#BD4500}.cel-visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.green{background-color:#35AA35;color:#000}.red{background-color:#CC333F;color:#fff}.yellow{background-color:#FFBA4A;color:#000}.blue{background-color:#584CE4;color:#fff}.white{background-color:#fff;color:#333}@media (hover: hover){.green.interactive:hover{background-color:#2A9A2A}.red.interactive:hover{background-color:#B42934}.yellow.interactive:hover{background-color:#E5A439}.blue.interactive:hover{background-color:#372CB4}}button,input,textarea{letter-spacing:unset;line-height:unset;word-spacing:unset;line-height:unset}.draggable-window-holder{overflow-x:var(--dragger-overlay-overflow-x, hidden);overflow-y:var(--dragger-overlay-overflow-y, hidden);position:fixed;width:100%;height:var(--dragger-overlay-height, 100%);top:0px;left:var(--dragger-overlay-left, 0);right:var(--dragger-overlay-right, 0);background-color:var(--dragger-background-color, transparent);z-index:var(--dragger-overlay-z-index, 100);display:var(--dragger-window-overlay-display, flex);-ms-flex-align:var(--dragger-window-overlay-align-items, center);align-items:var(--dragger-window-overlay-align-items, center);-ms-flex-pack:var(--dragger-window-overlay-justify-content, center);justify-content:var(--dragger-window-overlay-justify-content, center)}.draggable-slot-container{-webkit-user-select:var(--draggable-slot-user-select, none);-moz-user-select:var(--draggable-slot-user-select, none);-ms-user-select:var(--draggable-slot-user-select, none);user-select:var(--draggable-slot-user-select, none);position:absolute;border-radius:8px;z-index:var(--draggable-slot-z-index, 101);max-width:var(--draggable-slot-max-width, 320px);width:var(--draggable-slot-width, 100%);height:var(--draggable-slot-height, -webkit-fit-content);height:var(--draggable-slot-height, -moz-fit-content);height:var(--draggable-slot-height, fit-content);-webkit-box-shadow:0px 16px 42px 6px rgba(0, 0, 0, 0.25);box-shadow:0px 16px 42px 6px rgba(0, 0, 0, 0.25);background-color:var(--draggable-slot-background-color, #f3f3f3)}.draggable-slot-container .draggable-slot-header{display:-ms-flexbox;display:flex;border-radius:7px 7px 0 0;background-color:#fff;-ms-flex-align:center;align-items:center;border-bottom:1px solid #cdcdcd;width:100%;height:var(--draggable-slot-header-height, 37px);-ms-flex-pack:justify;justify-content:space-between}.draggable-slot-container .draggable-slot-header .title-container{line-height:1;display:-ms-flexbox;display:flex;text-align:center}.draggable-slot-container .draggable-slot-header .title-holder{margin:0;color:var(--draggable-window-title-color, #333);font-family:var(--draggable-window-title-font-family, Poppins-Medium);font-size:var(--draggable-window-title-font-size, 1.125rem);font-weight:var(--draggable-window-title-font-weight, 500);font-style:var(--draggable-window-title-font-style, normal)}.draggable-slot-container .draggable-slot-header .dragger-icon-container{display:-ms-flexbox;display:flex;padding:8px}.draggable-slot-container .draggable-slot-header .close-icon-container{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;border-radius:43px;padding:8px}.draggable-slot-container .draggable-slot-icon{--icon-button-border-radius:5px;--cel-icon-custom-size:9px}.trap-focus{background-color:none;height:0px;width:0px}\";\n\nconst CelDraggableWindow = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.closeButtonPressed = createEvent(this, \"celDraggableWindowCloseButtonEvent\", 7);\n    this.escapeKeyPressed = createEvent(this, \"celDraggableWindowEscapeKeyEvent\", 7);\n    this.componentLoaded = createEvent(this, \"celDraggableWindowLoaded\", 7);\n    this.onMobileHeight = createEvent(this, \"viewMobileHeight\", 7);\n    this.isDragging = false;\n    this.setFocus = false;\n    this.modalPositionStatus = '';\n    this.isDragIconFocused = false;\n    this.maxHeight = undefined;\n    this.titleText = 'Title goes here';\n    this.disableContentDrag = false;\n    this.celIconBaseUrl = undefined;\n    this.lastFocusableElement = '';\n    this.lastFocusableElementIdentifier = '';\n    this.draggableModalAriaLabel = '';\n    this.stickModalToBottom = false;\n    this.showComponentLoadInfo = false;\n    this.dragIconAriaLabel = 'Drag Icon. Use arrow keys to move the position of the modal';\n  }\n  connectedCallback() {\n    this.cel_icon_button = transformTagName('cel-icon-button', 'cel-draggable-window', this.componentEl);\n    document.addEventListener('mousemove', this.handleModalMovement.bind(this));\n    document.addEventListener('touchmove', this.handleModalMovement.bind(this));\n    document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    document.addEventListener('touchend', this.handleMouseUp.bind(this));\n  }\n  disconnectedCallback() {\n    document.removeEventListener('mousemove', this.handleModalMovement.bind(this));\n    document.removeEventListener('touchmove', this.handleModalMovement.bind(this));\n    document.removeEventListener('mouseup', this.handleMouseUp.bind(this));\n    document.removeEventListener('touchend', this.handleMouseUp.bind(this));\n    this.resizeObserver.unobserve(this.draggerElement);\n  }\n  componentDidLoad() {\n    setTimeout(() => {\n      this.setFocus = true;\n      this.maxHeight = this.draggableEl.offsetHeight;\n      this.observeWindowWidth();\n    });\n    if (this.showComponentLoadInfo)\n      this.componentLoaded.emit(true);\n  }\n  handleKeyDown(ev) {\n    if (ev.key === ESCAPE) {\n      this.escapeKeyPressed.emit(ev);\n    }\n    if (this.isDragIconFocused && (ev.key === ARROW_UP || ev.key === ARROW_DOWN || ev.key === ARROW_LEFT || ev.key === ARROW_RIGHT)) {\n      const rect = this.draggableEl.getBoundingClientRect();\n      ev.preventDefault();\n      switch (ev.key) {\n        //TODO: Check the no. of pixels to be moved.\n        case ARROW_UP:\n          if (rect.top >= 0) {\n            this.draggableEl.style.top = `${rect.top - 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('up');\n            });\n          }\n          break;\n        case ARROW_DOWN:\n          if (rect.bottom <= this.containerEl.offsetHeight) {\n            this.draggableEl.style.top = `${rect.top + 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('down');\n            });\n          }\n          break;\n        case ARROW_LEFT:\n          if (rect.left >= 0) {\n            this.draggableEl.style.left = `${rect.left - 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('left');\n            });\n          }\n          break;\n        case ARROW_RIGHT:\n          if (rect.right <= this.containerEl.offsetWidth) {\n            this.draggableEl.style.left = `${rect.left + 5}px`;\n            this.checkForKeypress(() => {\n              this.notifyModalMovement('right');\n            });\n          }\n          break;\n      }\n    }\n  }\n  handleFocusOnDragIcon(eventObj) {\n    if (eventObj.detail.id === 'draggable-slot-drag-icon') {\n      this.handleFocus();\n    }\n  }\n  handleBlurOnDragIcon(eventObj) {\n    if (eventObj.detail === 'draggable-slot-drag-icon') {\n      this.handleFocus();\n    }\n  }\n  handleCelButtonOnClick(eventObj) {\n    const { detail: { id: buttonType } } = eventObj;\n    if (buttonType === 'draggable-slot-close-button')\n      this.closeButtonPressed.emit(eventObj);\n  }\n  handleFocus() {\n    this.isDragIconFocused = !this.isDragIconFocused;\n  }\n  focusDraggerIcon() {\n    this.draggerIcon.shadowRoot.querySelector('button').focus();\n  }\n  notifyModalMovement(direction) {\n    this.modalPositionStatus = `${this.titleText} moved ${direction}`;\n    // Timeout here as the state variable has to be reinitialised to announce the text when it is moved multiple times in the same direction.\n    setTimeout(() => {\n      this.modalPositionStatus = '';\n    }, 100);\n  }\n  // Debounce is required to avoid multiple announcements when the arrow keys are pressed.\n  // Also ensures te movement is announced when key is pressed and hold. \n  checkForKeypress(func) {\n    clearTimeout(this.timeoutInterval);\n    this.timeoutInterval = setTimeout(func, 300);\n  }\n  setModalPosition(event) {\n    if (this.disableContentDrag)\n      return;\n    this.isDragging = true;\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.type != 'mousedown') {\n      event = event.touches[0];\n    }\n    this.xCords = event.clientX - this.draggableEl.offsetLeft;\n    this.yCords = event.clientY - this.draggableEl.offsetTop;\n    this.draggerIcon.shadowRoot.querySelector('button').style.cursor = 'move';\n  }\n  handleModalMovement(event) {\n    if (!this.isDragging)\n      return;\n    if (event.type === 'mousedown' && event.buttons != 1)\n      return;\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.type != 'mousemove') {\n      event = event.touches[0];\n    }\n    const x = event.clientX - this.xCords;\n    const y = event.clientY - this.yCords;\n    const xMax = this.containerEl.offsetWidth - this.draggableEl.offsetWidth;\n    const yMax = this.containerEl.offsetHeight - this.draggableEl.offsetHeight;\n    if (x >= 0 && x <= xMax)\n      this.draggableEl.style.left = `${x}px`;\n    if (y >= 0 && y <= yMax)\n      this.draggableEl.style.top = `${y}px`;\n  }\n  handleMouseUp() {\n    this.isDragging = false;\n    if (this.draggerIcon && this.draggerIcon.shadowRoot) {\n      const draggerIconButton = this.draggerIcon.shadowRoot.querySelector('button');\n      if (draggerIconButton && draggerIconButton.style && draggerIconButton.style.cursor) {\n        this.draggerIcon.shadowRoot.querySelector('button').style.cursor = 'default';\n      }\n    }\n  }\n  focusLastActiveElement() {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (this.lastFocusableElement) {\n      let element;\n      //Checks if slot item is within shadowroot.\n      if ((_a = this.slotItem.assignedElements()[0]) === null || _a === void 0 ? void 0 : _a.shadowRoot) {\n        element = (_b = this.slotItem.assignedElements()[0].shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelectorAll(this.lastFocusableElement);\n      }\n      else {\n        element = (_c = this.slotItem.assignedElements()[0]) === null || _c === void 0 ? void 0 : _c.querySelectorAll(this.lastFocusableElement);\n      }\n      const focusableElement = (_e = (_d = element[element.length - 1]) === null || _d === void 0 ? void 0 : _d.shadowRoot) === null || _e === void 0 ? void 0 : _e.querySelector(this.lastFocusableElementIdentifier);\n      focusableElement.focus();\n    }\n    else {\n      const element = (_g = (_f = this.slotItem.assignedElements()[0]) === null || _f === void 0 ? void 0 : _f.shadowRoot) === null || _g === void 0 ? void 0 : _g.querySelector(this.lastFocusableElementIdentifier);\n      element.focus();\n    }\n  }\n  observeWindowWidth() {\n    this.draggerElement = this.containerEl;\n    this.resizeObserver = new ResizeObserver(this.handleResize.bind(this));\n    this.resizeObserver.observe(this.draggerElement);\n  }\n  handleResize() {\n    const parentContainerWidth = this.containerEl.offsetWidth;\n    const parentContainerHeight = this.containerEl.offsetHeight;\n    const availableScreenWidth = window.screen.availWidth;\n    const currentScreenWidth = window.innerWidth;\n    const zoomedPercentage = (availableScreenWidth / currentScreenWidth) * 100;\n    // Added zoomedPercentage to show the math keypad in mobile view beyond or at 200% zoom\n    if ((parentContainerWidth > 575 && parentContainerHeight < this.maxHeight) || zoomedPercentage >= 200) {\n      this.onMobileHeight.emit(true);\n      this.draggableEl.style.bottom = this.stickModalToBottom ? '0px' : '';\n    }\n    else if (parentContainerWidth > 575 && parentContainerHeight > this.maxHeight) {\n      this.draggableEl.style.left = 'auto';\n      this.draggableEl.style.bottom = 'auto';\n      this.onMobileHeight.emit(false);\n    }\n    else {\n      this.onMobileHeight.emit(true);\n      this.draggableEl.style.left = 'auto';\n      this.draggableEl.style.top = 'auto';\n      this.draggableEl.style.bottom = this.stickModalToBottom ? '0px' : '';\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: 'draggable-window-holder', ref: (el) => (this.containerEl = el) }, h(\"div\", { class: 'trap-focus', tabindex: '0', onFocus: () => { this.focusLastActiveElement(); } }), h(\"div\", { class: 'draggable-slot-container', ref: (el) => (this.draggableEl = el), role: 'dialog', \"aria-label\": this.draggableModalAriaLabel ? this.draggableModalAriaLabel : this.titleText }, h(\"div\", { class: 'draggable-slot-header' }, h(\"span\", { class: 'cel-visually-hidden', role: 'alert' }, this.modalPositionStatus), h(\"div\", { class: 'dragger-icon-container' }, h(this.cel_icon_button, { ref: (el) => (this.draggerIcon = el), class: 'draggable-slot-icon flex', \"data-focus-element\": this.setFocus, onMouseDown: this.setModalPosition.bind(this), onTouchStart: this.setModalPosition.bind(this), \"data-identifier\": 'draggable-slot-drag-icon', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}list-view.svg` : null, \"data-name\": 'list-view', \"data-icon-button-aria-label\": this.dragIconAriaLabel, \"data-size\": 'custom', \"data-padding\": '8px', \"data-color\": CelIconColors.BLACK })), h(\"div\", { class: 'title-container' }, h(\"h2\", { class: 'title-holder' }, this.titleText)), h(\"div\", { class: 'close-icon-container' }, h(this.cel_icon_button, { class: 'draggable-slot-close-button flex', \"data-src\": this.celIconBaseUrl ? `${this.celIconBaseUrl}close.svg` : null, \"data-identifier\": 'draggable-slot-close-button', \"data-name\": 'close', \"data-icon-button-aria-label\": 'Close', \"data-size\": 'medium', \"data-color\": 'black' }))), h(\"div\", { class: 'slot-container' }, h(\"slot\", { ref: (el) => (this.slotItem = el) })), h(\"footer\", { class: 'trap-focus', tabindex: 0, onFocus: () => { this.focusDraggerIcon(); } })))));\n  }\n  get componentEl() { return getElement(this); }\n};\nCelDraggableWindow.style = celDraggableWindowCss;\n\nexport { CelDraggableWindow as cel_draggable_window };\n","var CelIconColors;\n(function (CelIconColors) {\n  CelIconColors[\"PRIMARY\"] = \"primary\";\n  CelIconColors[\"PRIMARY_SHADE\"] = \"primary-shade\";\n  CelIconColors[\"BLACK\"] = \"black\";\n  CelIconColors[\"WHITE\"] = \"white\";\n  CelIconColors[\"PLUM\"] = \"plum\";\n  CelIconColors[\"ERROR\"] = \"error\";\n  CelIconColors[\"ERROR_SHADE\"] = \"error-shade\";\n  CelIconColors[\"NOTIFICATION\"] = \"notification\";\n  CelIconColors[\"CONFIRM\"] = \"confirm\";\n  CelIconColors[\"DISABLED\"] = \"disabled\";\n  CelIconColors[\"GRAYDARKER\"] = \"gray-darker\";\n  CelIconColors[\"GRAYDUSTY\"] = \"gray-dusty\";\n  CelIconColors[\"GRAYLIGHT\"] = \"gray-light\";\n  CelIconColors[\"GRAYLIGHTER\"] = \"gray-lighter\";\n  CelIconColors[\"GRAY\"] = \"gray\";\n  CelIconColors[\"FEEDBACKGREEN\"] = \"feedback-green\";\n})(CelIconColors || (CelIconColors = {}));\nvar CelIconSizes;\n(function (CelIconSizes) {\n  CelIconSizes[\"CUSTOM\"] = \"custom\";\n  CelIconSizes[\"XSMALL\"] = \"xsmall\";\n  CelIconSizes[\"XXSMALL\"] = \"xxsmall\";\n  CelIconSizes[\"SMALL\"] = \"small\";\n  CelIconSizes[\"REGULAR\"] = \"regular\";\n  CelIconSizes[\"MEDIUM\"] = \"medium\";\n  CelIconSizes[\"MLARGE\"] = \"mlarge\";\n  CelIconSizes[\"LARGE\"] = \"large\";\n  CelIconSizes[\"XLARGE\"] = \"xlarge\";\n  CelIconSizes[\"XXLARGE\"] = \"xxlarge\";\n  CelIconSizes[\"XXXLARGE\"] = \"xxlarge\";\n})(CelIconSizes || (CelIconSizes = {}));\nvar CelIconNames;\n(function (CelIconNames) {\n  CelIconNames[\"MENU\"] = \"menu\";\n  CelIconNames[\"CLOSE\"] = \"close\";\n})(CelIconNames || (CelIconNames = {}));\nvar CelButtonSizes;\n(function (CelButtonSizes) {\n  CelButtonSizes[\"SMALL\"] = \"small\";\n  CelButtonSizes[\"MEDIUM\"] = \"medium\";\n  CelButtonSizes[\"LARGE\"] = \"large\";\n})(CelButtonSizes || (CelButtonSizes = {}));\n\nexport { CelIconColors as C, CelIconSizes as a, CelButtonSizes as b, CelIconNames as c };\n","import { T as TAB, E as ESCAPE, S as SPACEBAR_CHAR, a as SPACEBAR, b as ENTER, A as ARROW_RIGHT, c as ARROW_LEFT, d as ARROW_UP, e as ARROW_DOWN } from './constants-a06dfd18.js';\n\nfunction setTitleAttributeByOverflow(elements) {\n  elements.forEach(function (element) {\n    if (element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth) {\n      element.setAttribute('title', element.textContent);\n    }\n    else {\n      element.removeAttribute('title');\n    }\n  });\n}\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c != '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst createColorClasses = (color) => {\n  return color ? {\n    'cel-color': true,\n    [`cel-color-${color}`]: true,\n  }\n    : null;\n};\nconst dragElement = (el) => {\n  let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  // otherwise, move the DIV from anywhere inside the DIV:\n  el.onmousedown = dragMouseDown;\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    el.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    el.onmousemove = elementDrag;\n  }\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    el.style.top = (el.offsetTop - pos2) + 'px';\n    el.style.left = (el.offsetLeft - pos1) + 'px';\n  }\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    el.onmouseup = null;\n    el.onmousemove = null;\n  }\n};\nconst transformTagName = (tagToBeTransformed, knownUntransformedTag, knownUntransformedTagElementReference) => {\n  const actualCurrentTag = knownUntransformedTagElementReference.tagName.toLowerCase(); // 'PREFIX-cel-navbar-SUFFIX'\n  const [prefix, suffix] = actualCurrentTag.split(knownUntransformedTag); // ['PREFIX-', '-SUFFIX']\n  return prefix + tagToBeTransformed + suffix; // 'PREFIX-cel_icon_button-SUFFIX'\n};\nconst handleKeyDownEvent = (event, keyBoardActionsObject) => {\n  switch (event.key) {\n    case ARROW_DOWN:\n    case ARROW_UP:\n      if (keyBoardActionsObject.arrowUpDown !== undefined) {\n        keyBoardActionsObject.arrowUpDown(event);\n      }\n      break;\n    case ARROW_LEFT:\n    case ARROW_RIGHT:\n      if (keyBoardActionsObject.arrowLeftRight !== undefined) {\n        keyBoardActionsObject.arrowLeftRight(event);\n      }\n      break;\n    case ENTER:\n    case SPACEBAR:\n    case SPACEBAR_CHAR:\n      if (keyBoardActionsObject.spaceEnter !== undefined) {\n        keyBoardActionsObject.spaceEnter();\n      }\n      break;\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape();\n      }\n    case TAB:\n      if (keyBoardActionsObject.tab !== undefined) {\n        keyBoardActionsObject.tab();\n      }\n      break;\n  }\n};\nconst getRGBColorFromImage = (imgEl) => {\n  const defaultRGB = { r: 255, g: 255, b: 255 }; // for non-supporting envs\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  let data;\n  let width;\n  let height;\n  let rgb = { r: 0, g: 0, b: 0 };\n  if (!context) {\n    return defaultRGB;\n  }\n  height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n  width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n  context.drawImage(imgEl, 0, 0);\n  try {\n    data = context.getImageData(0, 0, width, height);\n  }\n  catch (e) {\n    /* security error, img on diff domain */\n    return defaultRGB;\n  }\n  rgb.r = data.data[0];\n  rgb.g = data.data[1];\n  rgb.b = data.data[2];\n  return rgb;\n};\n/*\n    * Generic Focus Functionality\n*/\nfunction handleTabTrapping(event, element, focusableElementsArray, keyBoardActionsObject) {\n  var _a, _b, _c, _d;\n  switch (event.key) {\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape(event);\n      }\n      break;\n    case TAB:\n      const activeElement = ((_a = element.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) ||\n        ((_c = (_b = document.activeElement.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement.shadowRoot) === null || _c === void 0 ? void 0 : _c.activeElement) ||\n        ((_d = document.activeElement.shadowRoot) === null || _d === void 0 ? void 0 : _d.activeElement) ||\n        document.activeElement;\n      if (!event.shiftKey && activeElement === focusableElementsArray[focusableElementsArray.length - 1]) {\n        event.preventDefault();\n        focusFirstFocusable(focusableElementsArray[0]);\n        if (keyBoardActionsObject.tab !== undefined) {\n          keyBoardActionsObject.tab(event);\n        }\n      }\n      else if (event.shiftKey && activeElement === focusableElementsArray[0]) {\n        event.preventDefault();\n        focusLastFocusable(focusableElementsArray[focusableElementsArray.length - 1]);\n        if (keyBoardActionsObject.shiftTab !== undefined) {\n          keyBoardActionsObject.shiftTab(event);\n        }\n      }\n      break;\n  }\n}\nfunction focusFirstFocusable(firstFocusableElement) {\n  if (firstFocusableElement.shadowRoot) {\n    firstFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    firstFocusableElement.focus();\n  }\n}\nfunction focusLastFocusable(lastFocusableElement) {\n  if (lastFocusableElement.shadowRoot) {\n    lastFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    lastFocusableElement.focus();\n  }\n}\nfunction setFocusableElements(hostElement) {\n  let hasShadowRoot = !!hostElement.shadowRoot;\n  if (!hasShadowRoot) {\n    let focusableElementsArray = hostElement.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n  else {\n    let focusableElementsArray = hostElement.shadowRoot.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n}\n\nexport { setFocusableElements as a, handleTabTrapping as b, getClassMap as c, dragElement as d, createColorClasses as e, focusFirstFocusable as f, getRGBColorFromImage as g, handleKeyDownEvent as h, setTitleAttributeByOverflow as s, transformTagName as t };\n"],"sourceRoot":"webpack:///"}