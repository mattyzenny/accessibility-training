{"version":3,"sources":["/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/constants-a06dfd18.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/get-hover-color-d543db8b.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/cel-icon-constants-33baae7b.js","/Users/mattyZ/Desktop/Projects/forked-cel-library/dist-stencil/esm/utils-194224bf.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;;AAE+mB;;;;;;;;;;;;;AClDhqB;AAAA;AAAA;AAAsE;;AAEtE;AACA;AACA,SAAS,iEAAa;AACtB,aAAa,iEAAa;AAC1B,SAAS,iEAAa;AACtB,aAAa,iEAAa;AAC1B,SAAS,iEAAa;AACtB,aAAa,iEAAa;AAC1B;AACA;AACA;AACA;;AAE8B;;;;;;;;;;;;;ACf9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEgD;;;;;;;;;;;;;AC7CzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkL;;AAElL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,yEAAyE;AACzE,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAQ;AACjB;AACA;AACA;AACA;AACA,SAAS,wDAAU;AACnB,SAAS,wDAAW;AACpB;AACA;AACA;AACA;AACA,SAAS,wDAAK;AACd,SAAS,wDAAQ;AACjB,SAAS,wDAAa;AACtB;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA,SAAS,wDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiQ","file":"3.js","sourcesContent":["const ENTER = 'Enter';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_LEFT = 'ArrowLeft';\nconst SPACEBAR = 'Spacebar';\nconst SPACEBAR_CHAR = ' ';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_UP = 'ArrowUp';\nconst TAB = 'Tab';\nconst ESCAPE = 'Escape';\nconst KEYCODE = {\n  BOLD: 66,\n  ITALIC: 73,\n  UNDERLINE: 85,\n  UNDO: 89,\n  REDO: 90,\n};\nconst FOCUS_TYPE_EVENT = 'focus';\nconst MOUSE_ENTER_TYPE_EVENT = 'enter';\nconst HIDE_TOOLTIP_TYPE_EVENT = 'hide-tooltip';\nconst FROM_DATE_TYPE = 'type-from-date';\nconst TO_DATE_TYPE = 'type-to-date';\nconst HEADER_CHECKBOX = 'header-checkbox';\nconst RIGHT_MODAL_BUTTON = 'right-modal-button';\nconst LEFT_MODAL_BUTTON = 'left-modal-button';\nconst CANCEL_MODAL_BUTTON = 'cancel-modal-button';\nconst ACCEPT_MODAL_BUTTON = 'accept-modal-button';\nconst LEFT_ICON_MODAL_BUTTON = 'left-icon-modal-button';\nconst OPEN_MODAL_BUTTON = 'open-modal-button';\nconst CLOSE_MODAL_ICON_BUTTON = 'close-modal-icon-button';\nconst ERROR_CLOSE_ICON_BUTTON = 'error-close-icon-button';\nconst MULTI_SELECT_APPLY_BUTTON = 'multi-select-apply-button';\nconst MULTI_SELECT_CLEAR_BUTTON = 'multi-select-clear-button';\nconst MULTI_SELECT_LEFT_BUTTON = 'multi-select-left-button';\nconst HEADER_ICON_BUTTON = 'header-icon-button';\nvar DataVisualizationColorKeys;\n(function (DataVisualizationColorKeys) {\n  DataVisualizationColorKeys[\"RED\"] = \"red\";\n  DataVisualizationColorKeys[\"YELLOW\"] = \"yellow\";\n  DataVisualizationColorKeys[\"BLUE\"] = \"blue\";\n  DataVisualizationColorKeys[\"GREEN\"] = \"green\";\n  DataVisualizationColorKeys[\"WHITE\"] = \"white\";\n  DataVisualizationColorKeys[\"CUSTOM\"] = \"custom\";\n})(DataVisualizationColorKeys || (DataVisualizationColorKeys = {}));\nvar ProgressStepStatus;\n(function (ProgressStepStatus) {\n  ProgressStepStatus[\"COMPLETE\"] = \"complete\";\n  ProgressStepStatus[\"ACTIVE\"] = \"active\";\n  ProgressStepStatus[\"INACTIVE\"] = \"inactive\";\n})(ProgressStepStatus || (ProgressStepStatus = {}));\n\nexport { ARROW_RIGHT as A, CANCEL_MODAL_BUTTON as C, DataVisualizationColorKeys as D, ESCAPE as E, FROM_DATE_TYPE as F, HEADER_CHECKBOX as H, KEYCODE as K, LEFT_MODAL_BUTTON as L, MOUSE_ENTER_TYPE_EVENT as M, OPEN_MODAL_BUTTON as O, RIGHT_MODAL_BUTTON as R, SPACEBAR_CHAR as S, TAB as T, SPACEBAR as a, ENTER as b, ARROW_LEFT as c, ARROW_UP as d, ARROW_DOWN as e, TO_DATE_TYPE as f, ERROR_CLOSE_ICON_BUTTON as g, HIDE_TOOLTIP_TYPE_EVENT as h, FOCUS_TYPE_EVENT as i, ACCEPT_MODAL_BUTTON as j, LEFT_ICON_MODAL_BUTTON as k, CLOSE_MODAL_ICON_BUTTON as l, HEADER_ICON_BUTTON as m, MULTI_SELECT_LEFT_BUTTON as n, MULTI_SELECT_CLEAR_BUTTON as o, MULTI_SELECT_APPLY_BUTTON as p };\n","import { C as CelIconColors } from './cel-icon-constants-33baae7b.js';\n\nconst getHoverColor = (color) => {\n  switch (color) {\n    case CelIconColors.PRIMARY:\n      return CelIconColors.PRIMARY_SHADE;\n    case CelIconColors.BLACK:\n      return CelIconColors.PRIMARY_SHADE;\n    case CelIconColors.ERROR:\n      return CelIconColors.ERROR_SHADE;\n    default:\n      return color;\n  }\n};\n\nexport { getHoverColor as g };\n","var CelIconColors;\n(function (CelIconColors) {\n  CelIconColors[\"PRIMARY\"] = \"primary\";\n  CelIconColors[\"PRIMARY_SHADE\"] = \"primary-shade\";\n  CelIconColors[\"BLACK\"] = \"black\";\n  CelIconColors[\"WHITE\"] = \"white\";\n  CelIconColors[\"PLUM\"] = \"plum\";\n  CelIconColors[\"ERROR\"] = \"error\";\n  CelIconColors[\"ERROR_SHADE\"] = \"error-shade\";\n  CelIconColors[\"NOTIFICATION\"] = \"notification\";\n  CelIconColors[\"CONFIRM\"] = \"confirm\";\n  CelIconColors[\"DISABLED\"] = \"disabled\";\n  CelIconColors[\"GRAYDARKER\"] = \"gray-darker\";\n  CelIconColors[\"GRAYDUSTY\"] = \"gray-dusty\";\n  CelIconColors[\"GRAYLIGHT\"] = \"gray-light\";\n  CelIconColors[\"GRAYLIGHTER\"] = \"gray-lighter\";\n  CelIconColors[\"GRAY\"] = \"gray\";\n  CelIconColors[\"FEEDBACKGREEN\"] = \"feedback-green\";\n})(CelIconColors || (CelIconColors = {}));\nvar CelIconSizes;\n(function (CelIconSizes) {\n  CelIconSizes[\"CUSTOM\"] = \"custom\";\n  CelIconSizes[\"XSMALL\"] = \"xsmall\";\n  CelIconSizes[\"XXSMALL\"] = \"xxsmall\";\n  CelIconSizes[\"SMALL\"] = \"small\";\n  CelIconSizes[\"REGULAR\"] = \"regular\";\n  CelIconSizes[\"MEDIUM\"] = \"medium\";\n  CelIconSizes[\"MLARGE\"] = \"mlarge\";\n  CelIconSizes[\"LARGE\"] = \"large\";\n  CelIconSizes[\"XLARGE\"] = \"xlarge\";\n  CelIconSizes[\"XXLARGE\"] = \"xxlarge\";\n  CelIconSizes[\"XXXLARGE\"] = \"xxlarge\";\n})(CelIconSizes || (CelIconSizes = {}));\nvar CelIconNames;\n(function (CelIconNames) {\n  CelIconNames[\"MENU\"] = \"menu\";\n  CelIconNames[\"CLOSE\"] = \"close\";\n})(CelIconNames || (CelIconNames = {}));\nvar CelButtonSizes;\n(function (CelButtonSizes) {\n  CelButtonSizes[\"SMALL\"] = \"small\";\n  CelButtonSizes[\"MEDIUM\"] = \"medium\";\n  CelButtonSizes[\"LARGE\"] = \"large\";\n})(CelButtonSizes || (CelButtonSizes = {}));\n\nexport { CelIconColors as C, CelIconSizes as a, CelButtonSizes as b, CelIconNames as c };\n","import { T as TAB, E as ESCAPE, S as SPACEBAR_CHAR, a as SPACEBAR, b as ENTER, A as ARROW_RIGHT, c as ARROW_LEFT, d as ARROW_UP, e as ARROW_DOWN } from './constants-a06dfd18.js';\n\nfunction setTitleAttributeByOverflow(elements) {\n  elements.forEach(function (element) {\n    if (element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth) {\n      element.setAttribute('title', element.textContent);\n    }\n    else {\n      element.removeAttribute('title');\n    }\n  });\n}\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c != '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst createColorClasses = (color) => {\n  return color ? {\n    'cel-color': true,\n    [`cel-color-${color}`]: true,\n  }\n    : null;\n};\nconst dragElement = (el) => {\n  let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  // otherwise, move the DIV from anywhere inside the DIV:\n  el.onmousedown = dragMouseDown;\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    el.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    el.onmousemove = elementDrag;\n  }\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    el.style.top = (el.offsetTop - pos2) + 'px';\n    el.style.left = (el.offsetLeft - pos1) + 'px';\n  }\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    el.onmouseup = null;\n    el.onmousemove = null;\n  }\n};\nconst transformTagName = (tagToBeTransformed, knownUntransformedTag, knownUntransformedTagElementReference) => {\n  const actualCurrentTag = knownUntransformedTagElementReference.tagName.toLowerCase(); // 'PREFIX-cel-navbar-SUFFIX'\n  const [prefix, suffix] = actualCurrentTag.split(knownUntransformedTag); // ['PREFIX-', '-SUFFIX']\n  return prefix + tagToBeTransformed + suffix; // 'PREFIX-cel_icon_button-SUFFIX'\n};\nconst handleKeyDownEvent = (event, keyBoardActionsObject) => {\n  switch (event.key) {\n    case ARROW_DOWN:\n    case ARROW_UP:\n      if (keyBoardActionsObject.arrowUpDown !== undefined) {\n        keyBoardActionsObject.arrowUpDown(event);\n      }\n      break;\n    case ARROW_LEFT:\n    case ARROW_RIGHT:\n      if (keyBoardActionsObject.arrowLeftRight !== undefined) {\n        keyBoardActionsObject.arrowLeftRight(event);\n      }\n      break;\n    case ENTER:\n    case SPACEBAR:\n    case SPACEBAR_CHAR:\n      if (keyBoardActionsObject.spaceEnter !== undefined) {\n        keyBoardActionsObject.spaceEnter();\n      }\n      break;\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape();\n      }\n    case TAB:\n      if (keyBoardActionsObject.tab !== undefined) {\n        keyBoardActionsObject.tab();\n      }\n      break;\n  }\n};\nconst getRGBColorFromImage = (imgEl) => {\n  const defaultRGB = { r: 255, g: 255, b: 255 }; // for non-supporting envs\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  let data;\n  let width;\n  let height;\n  let rgb = { r: 0, g: 0, b: 0 };\n  if (!context) {\n    return defaultRGB;\n  }\n  height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n  width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n  context.drawImage(imgEl, 0, 0);\n  try {\n    data = context.getImageData(0, 0, width, height);\n  }\n  catch (e) {\n    /* security error, img on diff domain */\n    return defaultRGB;\n  }\n  rgb.r = data.data[0];\n  rgb.g = data.data[1];\n  rgb.b = data.data[2];\n  return rgb;\n};\n/*\n    * Generic Focus Functionality\n*/\nfunction handleTabTrapping(event, element, focusableElementsArray, keyBoardActionsObject) {\n  var _a, _b, _c, _d;\n  switch (event.key) {\n    case ESCAPE:\n      if (keyBoardActionsObject.escape !== undefined) {\n        keyBoardActionsObject.escape(event);\n      }\n      break;\n    case TAB:\n      const activeElement = ((_a = element.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) ||\n        ((_c = (_b = document.activeElement.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement.shadowRoot) === null || _c === void 0 ? void 0 : _c.activeElement) ||\n        ((_d = document.activeElement.shadowRoot) === null || _d === void 0 ? void 0 : _d.activeElement) ||\n        document.activeElement;\n      if (!event.shiftKey && activeElement === focusableElementsArray[focusableElementsArray.length - 1]) {\n        event.preventDefault();\n        focusFirstFocusable(focusableElementsArray[0]);\n        if (keyBoardActionsObject.tab !== undefined) {\n          keyBoardActionsObject.tab(event);\n        }\n      }\n      else if (event.shiftKey && activeElement === focusableElementsArray[0]) {\n        event.preventDefault();\n        focusLastFocusable(focusableElementsArray[focusableElementsArray.length - 1]);\n        if (keyBoardActionsObject.shiftTab !== undefined) {\n          keyBoardActionsObject.shiftTab(event);\n        }\n      }\n      break;\n  }\n}\nfunction focusFirstFocusable(firstFocusableElement) {\n  if (firstFocusableElement.shadowRoot) {\n    firstFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    firstFocusableElement.focus();\n  }\n}\nfunction focusLastFocusable(lastFocusableElement) {\n  if (lastFocusableElement.shadowRoot) {\n    lastFocusableElement.shadowRoot.querySelector('button').focus();\n  }\n  else {\n    lastFocusableElement.focus();\n  }\n}\nfunction setFocusableElements(hostElement) {\n  let hasShadowRoot = !!hostElement.shadowRoot;\n  if (!hasShadowRoot) {\n    let focusableElementsArray = hostElement.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n  else {\n    let focusableElementsArray = hostElement.shadowRoot.querySelectorAll('.interactive');\n    return focusableElementsArray;\n  }\n}\n\nexport { setFocusableElements as a, handleTabTrapping as b, getClassMap as c, dragElement as d, createColorClasses as e, focusFirstFocusable as f, getRGBColorFromImage as g, handleKeyDownEvent as h, setTitleAttributeByOverflow as s, transformTagName as t };\n"],"sourceRoot":"webpack:///"}